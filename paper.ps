%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: paper.dvi
%%Pages: 18
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o paper.ps paper
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.06.13:1709
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1993/3/12. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
pathforall z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 eq y 0 eq and { /x 1 def /y 1 def } if [ y x ] 1 a
sub y mul setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap n { currentstrokeadjust == x1 y1 moveto x2 y1 L
stroke /y1 y1 a add def } repeat grestore } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap systemdict /currentstrokeadjust known {
currentstrokeadjust } { false } ifelse { /t { } def } { /t { transform
0.25 sub round 0.25 add exch 0.25 sub round 0.25 add exch itransform }
bind def } ifelse n { x1 y1 t moveto x2 y1 t L stroke /y1 y1 a add def }
repeat grestore } def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } pathforall ] cvx newpath 3 1 roll T exec } def
/SD { 0 360 arc fill } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { /a 4 string def /b ED /d ED /n ED cvi dup 1 lt { pop 1 } if /c ED
c div dup 0 eq { pop 1 } if /cy ED c div dup 0 eq { pop 1 } if /cx ED cy
div cvi /y ED cx div cvi /x ED cy div cvi /y2 ED cx div cvi /x2 ED cy
div cvi /y1 ED cx div cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse
def /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2
div add def /Helvetica findfont b scalefont setfont /b b .95 mul CLW 2
div add def } if gsave n 0 gt { 1 setlinecap [ 0 cy n div ] 0 setdash }
{ 2 setlinecap } ifelse /c x1 def /i 500 w mul x1 add def /e y cy mul
def /f y1 cy mul def /g y2 cy mul def x1 cx mul 0 T { newpath 0 e moveto
b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1} {z1 z2
add neg} ifelse h 0 gt {b neg} {z1} ifelse rmoveto show grestore } if 0
f moveto 0 g L stroke cx w mul 0 T c x2 eq c i eq or {exit} if /c c w
add def } loop grestore gsave n 0 gt { 1 setlinecap [ 0 cx n div ] 0
setdash } { 2 setlinecap } ifelse /c y1 def /i 500 h mul y1 add def /e x
cx mul def /f x1 cx mul def /g x2 cx mul def 0 y1 cy mul T { newpath e 0
moveto b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1 z2
add neg} {z1} ifelse h 0 gt {z1} {b neg} ifelse rmoveto show grestore }
if f 0 moveto g 0 L stroke 0 cy h mul T c y2 eq c i eq or {exit} if /c c
h add def } loop grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /lmtrx [ tx@Dict /lmtrx known { lmtrx aload pop } if CM ] def
CP 4 2 roll T moveto } def
/PutEnd { CP /lmtrx [ lmtrx aload pop setmatrix ] def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { CP OLUnit T
moveto /IfVisible true def } if } { IfVisible { CP OLUnit NET moveto
/IfVisible false def } if } ifelse } def
/InitOL { /OLUnit [ gsave CM STV 2890.79999 dup moveto setmatrix CP
grestore ] cvx def /BOL { BeginOL } def /IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: psn-beta.pro
% PostScript prologue for psn-beta.tex.
% Created 1993/4/16. Source file was psn-beta.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { dict dup 3 -1 roll ED begin /NodeMtrx CM def } def
/InitPnode { /Y ED /X ED /NodePos { Nodesep Cos mul Nodesep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { Nodesep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r Nodesep add def } { /dx l Nodesep sub def
} ifelse Sin 0 gt { /dy u Nodesep add def } { /dy d Nodesep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div Nodesep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d Nodesep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div Nodesep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w Nodesep add def /hh h Nodesep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdge { begin /Nodesep ED dup 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED Nodesep 0 ge { NodePos } {
Nodesep neg dup Cos mul exch Sin mul } ifelse Y add exch X add exch
NodeMtrx transform CM itransform end 4 2 roll AddOffset  } def
/GetPos { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED OffsetB
AngleB NodesepB nodeB GetEdge /y2 ED /x2 ED } def
/GetArmA { armA 0 lt { xA yA OffsetA AngleA AddOffset } { x1 y1 } ifelse
armA abs AngleA sin mul add /y1a ED armA abs AngleA cos mul add /x1a ED
} def
/GetArmB { armB 0 lt { xB yB OffsetB AngleB AddOffset } { x2 y2 } ifelse
armB abs AngleB sin mul add /y2a ED armB abs AngleB cos mul add /x2a ED
} def
/InitNC { /b ED /a ED /NodesepB ED /NodesepA ED /OffsetB ED /OffsetA ED
tx@NodeDict a known tx@NodeDict b known and dup { /nodeA a load def
/nodeB b load def nodeA GetCenter /yA ED /xA ED nodeB GetCenter /yB ED
/xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yA sub yB yA sub Div xB xA sub mul xA add def /NAngle yB
yA sub xB xA sub Atan def } def
/HPutLine { HPosBegin /yA ED /xA ED /yB ED /xB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { ge } def } { /check { lt } def
} ifelse mark xB yB LPutVar { dup Y check { exit } { /yA ED /xA ED }
ifelse } loop /yB ED /xB ED cleartomark HPosEnd  } def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xA sub xB xA sub Div yB yA sub mul yA add def /NAngle yB
yA sub xB xA sub Atan def } def
/VPutLine { VPosBegin /yA ED /xA ED /yB ED /xB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { ge } def } { /check { lt } def
} ifelse mark xB yB LPutVar { 1 index X check { exit } { /yA ED /xA ED }
ifelse } loop /yB ED /xB ED cleartomark VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetPos /LPutVar [ x2 y2 x1 y1 ] cvx def /LPutPos { LPutVar LPutLine }
def /HPutPos { LPutVar HPutLine } def /VPutPos { LPutVar VPutLine } def
LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCCurve { GetPos x1 x2 sub y1 y2 sub Pyth 2 div dup 3 -1 roll mul /armA
ED mul /armB ED GetArmA GetArmB x1a y1a x1 y1 tx@Dict begin ArrowA end
x2a y2a x2 y2 tx@Dict begin ArrowB end curveto /LPutVar [ x1 y1 x1a y1a
x2a y2a x2 y2 ] cvx def /LPutPos { t LPutVar BezierMidpoint } def
/HPutPos { { HPutLines } HPutCurve } def /VPutPos { { VPutLines }
HPutCurve } def } def
/NCAngles { GetPos GetArmA GetArmB /mtrx AngleA matrix rotate def x1a y1a
mtrx transform pop x2a y2a mtrx transform exch pop mtrx itransform /y0
ED /x0 ED mark armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1a y1a armA 0 ne {
x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a y2a x0 y0
x1a y1a x1 y1 ] cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines
} def /VPutPos { VPutLines } def } def
/NCAngle { GetPos GetArmB /mtrx AngleA matrix rotate def x2a y2a mtrx
itransform pop x1 y1 mtrx itransform exch pop mtrx transform /y0 ED /x0
ED mark armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1 y1 tx@Dict begin false
Line end /LPutVar [ x2 y2 x2a y2a x0 y0 x1 y1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCBar { GetPos GetArmA GetArmB /mtrx AngleA matrix rotate def x1a y1a
mtrx itransform pop x2a y2a mtrx itransform pop sub dup 0 mtrx transform
3 -1 roll 0 gt { /y2a exch y2a add def /x2a exch x2a add def } { /y1a
exch neg y1a add def /x1a exch neg x1a add def } ifelse mark armB 0 ne {
x2 y2 } if x2a y2a x1a y1a armA 0 ne { x1 y1 } if tx@Dict begin false
Line end /LPutVar [ x2 y2 x2a y2a x1a y1a x1 y1 ] cvx def /LPutPos {
LPutVar LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines
} def } def
/NCDiag { GetPos GetArmA GetArmB mark armB 0 ne { x2 y2 } if x2a y2a x1a
y1a armA 0 ne { x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2
x2a y2a x1a y1a x1 y1 ] cvx def /LPutPos { LPutLines } def /HPutPos {
HPutLines } def /VPutPos { VPutLines } def } def
/NCDiagg { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED GetArmA yB
y1a sub xB x1a sub Atan 180 add /AngleB ED OffsetB AngleB NodesepB nodeB
GetEdge /y2 ED /x2 ED mark x2 y2 x1a y1a armA 0 ne { x1 y1 } if tx@Dict
begin false Line end /LPutVar [ x2 y2 x1a y1a x1 y1] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetPos GetArmA GetArmB /mtrx AngleA matrix rotate def x1a y1a
mtrx transform loopsize add /y1b ED /x1b ED /x2b x2a y2a mtrx transform
pop def x2b y1b mtrx itransform /y2b ED /x2b ED x1b y1b mtrx itransform
/y1b ED /x1b ED mark armB 0 ne { x2 y2 } if x2a y2a x2b y2b x1b y1b x1a
y1a armA 0 ne { x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2
x2a y2a x2b y2b x1b y1b x1a y1a x1 y1 ] cvx def /LPutPos { LPutLines }
def /HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCCircle { 0 0 NodesepA nodeA GetEdge pop xA sub 2 div dup 2 exp r r mul
sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r a ] def /LPutPos { LPutVar aload pop t
360 mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add 3 1 roll add exch 3
-1 roll } def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA
90 sub a add AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r
ED /c 57.2957 r Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetPos /dx d AngleB sin mul def /dy d AngleB cos mul neg def
/hx h AngleB sin mul neg def /hy h AngleB cos mul def /LPutVar [ x1 hx
add y1 hy add x2 hx add y2 hy add x2 dx add y2 dy add x1 dx add y1 dy
add ] cvx def /LPutPos { LPutLines } def /HPutPos { xB yB xA yA LPutLine
} def /VPutPos { HPutPos } def mark LPutVar tx@Dict begin false Polygon
end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetPos /AngleA tA 180 add yA y1 sub xA x1 sub Pyth c mul sub def /AngleB
tB 180 add yB y2 sub xB x2 sub Pyth c mul add def l 0 eq { x0 y0 r h add
AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn } { x0 y0 translate
/tA AngleA l c mul add def /tB AngleB l c mul sub def 0 0 r h add tA tB
arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2 roll l arcto 4 {
pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0 0 r d add tB tA
arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2 roll l arcto 4 {
pop } repeat r h add tA PtoC l arcto 4 { pop } repeat } ifelse closepath
/LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos { LPutVar /d ED
/h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le { r h add AngleA
1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC } { t 2 lt {
/NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add add AngleB
PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub mul add dup
90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t sub d mul t
3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse y0 add /Y ED
x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos { LPutPos } def }
def
/Tfan { /AngleA yB yA sub xB xA sub Atan def OffsetA AngleA NodesepA
nodeA GetEdge /y1 ED /x1 ED w x1 xB sub y1 yB sub Pyth Pyth w Div CLW 2
div mul 2 div dup AngleA sin mul y1 add /y1 ED AngleA cos mul x1 add /x1
ED /LPutVar [ x1 y1 m { xB w add yB xB w sub yB } { xB yB w sub xB yB w
add } ifelse x1 y1 ] cvx def /LPutPos { LPutLines } def /VPutPos@ {
LPutVar flag { 8 4 roll pop pop pop pop } { pop pop pop pop 4 2 roll }
ifelse } def /VPutPos { VPutPos@ VPutLine } def /HPutPos { VPutPos@
HPutLine } def mark LPutVar tx@Dict begin /ArrowA { moveto } def /ArrowB
{ } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (paper.dvi)
@start /Fa 2 51 df<1206121E12FE12EE120EADEAFFE0A20B137D9211>49
D<EA1F80EA7FC0EAE3E0EAE0F0A21370EA00F0A213E01201EA03C0EA0780EA0F00EA1E30
1238EA7070EAFFE0A30C137E9211>I E /Fb 2 119 df<EA01FCEA07FEEA0F8EEA1E0612
3CEA7C0EEA783EEA7FFCEAFFE0EAF000A41306EA780EEA7C3CEA3FF8EA0FE00F127F9113
>101 D<381F0380EA3F8712731263EAE38312C7EA07011303000F1300120EA25B130613
0E5BEA0F3813F8EA03E011127F9114>118 D E /Fc 46 122 df<EB01FCEB0FFEEB3F0E
EB7C1F13F83801F03EEBE01E1400A41203383FFFFCA23803C07C143C147C1207EB8078A4
14F8120FEB00F0A4EA1F01A238FFC7FEEB87FC18207F9F19>12 D<123C127C127EA3120E
120CA2121C1238A2127012E012C0070E789F0D>39 D<1307130E131C1338137013E01201
13C0EA0380120713005A120E121EA2121C123CA212381278A41270A212F0A91270A47EA3
7EA27E7E7E102E7BA112>I<13C013E01370A21338A2131CA3131E130EAB131EA4131CA2
133CA213381378A2137013F013E0120113C012031380EA07005A121E121C5A5A5A0F2E80
A112>I<123CA2127CA2123C120CA2121C121812381230127012E012C0060E7D840D>44
D<1278A212F8A2127005057C840D>46 D<130C131C13FC120FEA0E781200A413F813F0A5
120113E0A5120313C0A51207EAFFFEA20F1E7C9D17>49 D<EB3F80EBFFE03803C3F03807
80F8EA0600380F8078EBC07CA3EB8078EA0700C712F8A2EB01F0EB03E0EB07C01480EB0F
00131E137C13F0485A3803C060EA0780EA0E004813C0EA3FFF5AB51280A2161E7E9D17>
I<120E121FA3121E1200AA1278A212F8A2127008147C930D>58 D<140C141CA2143C143E
147EA214FEA2EB01BE149FEB031FA21306A2130C90381C0F80131813381330137090387F
FFC090B5FCEBC007120113801203010013E0481303380F8007397FE03FFEEAFFC01F207F
9F22>65 D<903801FE0290380FFF8690383F83CE9038FC00FE4848137ED803E0133E4848
133C4848131CA248C7FC5A123E1518481400A412FC5AA3153000781470007C1460A2003C
14E0003EEB01C0001EEB0380001FEB0700380FC00E3803F03C3801FFF038003FC01F217C
9F21>67 D<0007B57E4814E039007C01F0EC007801FC7F497FA281A3000115805BA50003
1500495BA3151E153E0007143C495B15F85DEC03E04A5A000F011FC7FCB512FC14F0211F
7E9E23>I<0007B512FC5A39007C007C153C01FC131C5BA4EC0C180001131801F01300A2
1478EBFFF8A23803F070EBE030A21518153014001207491360A215E0EC01C01403000F13
0FB61280A21E1F7E9E1F>I<903801FE0290380FFF8690383F83CE9038FC00FE4848137E
D803E0133E4848133C4848131CA248C7FC5A123E1518481400A412FC5AEC7FFEA2EC01F0
00781303127C15E0123C123E6C13071380380FC00F3903F03DC03801FFF039003FC0001F
217C9F24>71 D<3A07FFC7FFC0A23A007C007C0015FC13FC495BA41401120101F05BA390
B5FCA23803F00301E05BA41407120701C05BA4140F120F39FFFCFFFC495B221F7E9E22>
I<3807FFC0A238007C00A213FC5BA512015BA512035BA512075BA5120FEAFFF8A2121F7F
9E10>I<3807FFF05CD8007CC7FCA213FC5BA512015BA512035BA2EC0180A2EC03001207
13C05C1406140E141E000F137EB55AA2191F7E9E1C>76 D<D807FCECFFE0000F4A13C0D8
007EECFC00150313FE01DEEB06F8A201CF130CA215191201018FEB31F0EB87801561A215
C312039039078183E0EB03C1ECC30314C61507000713CC260601EC5B14F8A214F0000E14
0F381F00E0D8FFE0EBFFFC5C2B1F7E9E2A>I<0007B5FC4814C039007C03F0EC00F801FC
137849137CA5000114F85BEC01F0EC03E0EC0FC090B512004813F801E0C7FCA512075BA5
120FEAFFFCA21E1F7E9E1F>80 D<3807FFFEECFF8039007C07E0EC01F0EBFC004913F8A4
EC01F0120101F013E0EC03C0EC0F809038FFFE005C3803F07EEBE01F1580140FA3000713
1F01C01300A31506150E000F140CD8FFFC139C9038F80FF8C7EA03F01F207E9E21>82
D<EB1FC6EB7FE63801F0FE3803E03E3807C01E1380380F001C140CA3EB80007F7F13FE38
07FFC014E06C13F0C613F8131F1301EB00FC147CA200601378A3127014F0EA780138FC03
E038FF07C038EFFF00EAC1FC17217E9F19>I<001FB512F8A2381E03E000381438130700
3013C000701418126015381530EAC00F0000EB8000A5131F91C7FCA55B133EA5137E381F
FFF8A21D1F7B9E21>I<39FFF81FF8A2390F8007C0EC0380121F01001300A45C5A003E13
06A4140E127E007C130CA4141C1418127814381430007C1370003C5B383E01C0381F0780
6CB4C7FCEA01FC1D20799E22>I<39FFF807FEA2391F8001F0000FEB00E015C0EC018013
C00007EB0300A21406A25C13E000035B143814301470EBF060000113E05CEBF180A201FB
C7FC120013FEA25BA21378A21370A21F207A9E22>I<3A03FFE1FFC0A23A007F00FC006D
13706D13606E5AEB0F81ECC38092C7FCEB07C614ECEB03FC5C6D5A801300497E1303147E
1306EB0C3EEB1C3F497E01307FEB600F01C07F00011307D803807FEA0FC039FFF03FFE13
E0221F7F9E22>88 D<EA07FCEA1FFFEB1F801307A2121E1200A2EA03FF120FEA3F0F127C
00F8130000F01330A2131F133F38F8FF60387FEFC0383F878014147D9317>97
D<EA0380123FA2120F1207120F90C7FCA55A381E3F80381FFFC0EBC3E0EB00F0121E003E
1378123CA414F8007C13F01278A2EB01E0EB03C0EA7C0738FE1F8038E7FE00EAC3F81520
7C9F19>I<EA01FE3807FF80EA0F8FEA1E0F123C0078130090C7FC5AA8EAF807EA7806EA
7E1EEA1FFCEA0FF011147D9314>I<141CEB01FCA2EB007CA31478A414F8A23801FCF0EA
07FFEA0F87EA1E01123C127814E012F0A31303A200E013C0A212F01307EA780FEA7C3F38
3FFFF8380FC7F016207D9F19>I<EA01FCEA07FEEA0F0FEA1E07003C1380EA7803A212F0
B5FCA200F0C7FCA25A7EA21307EA7806EA7E1EEA1FF8EA0FE011147D9314>I<EB07F013
1FEB3EF8137813F0000113F0EBE000A51203EA3FFCA2EA03C0A312075BA5120F90C7FCA4
5AA2EAFFE0A215207F9F0E>I<141FEB7F3F3801FFF73803E3EF3807C1E7EB81E0120F13
01A3EB03C038078780380FFF00EA0EFC48C7FCA2121E381FFF8014E06C13F05AEA3C0138
780078127000F01370A214F0387801E0383E0FC0381FFF00EA07FC181F809417>I<1370
EA07F0A21201120012015BA51203EBC7F0EBDFF8EBF87813F013E0EA07C0A21380A314F8
120FEB00F0A4EA1F01A238FFE7FEEBC7FC17207F9F19>I<13E0EA01F0A313E0C7FCA6EA
01C0121FA21207120312071380A5120F1300A55AEAFFC0A20C1F7F9E0D>I<1370EA07F0
A21201120012015BA51203EBC3FEA2EBC1F014C0EBC3803807C700139E13BC13FC7FA2EA
0F9F131FEB0F80A214C01307001F13E038FFCFF8A217207F9F18>107
D<1370EA07F0A212011200120113E0A5120313C0A512071380A5120F1300A45AA2EAFFE0
13C00C207F9F0D>I<3A01C7F03F803A1FDFFCFFE0393FFC7DE33907F03F81D803E01301
3807C03EA2EB803CA4000FEB7C03D9007813C0A4ECF8075A3AFFE7FF3FF8A225147F9327
>I<3801C7F0381FDFF8EBF878EA07F0EA03E0EA07C0A21380A314F8120FEB00F0A41301
121F38FFE7FEEBC7FC17147F9319>I<13FCEA03FF380F0380381E01C0383C00E0123848
13F012F0A438E001E0A214C0EAF003148038700700EA3C1EEA1FFCEA07E014147D9317>
I<EB71FC3807FFFEEBFE1F3900F80F80EBF007000114C0EBE003A414070003148013C014
0F1500141EEBE03E3807F0FCEBBFF0EB9FC00180C7FCA2120FA290C8FCA3EAFFE0A21A1D
819319>I<EA01DF381FFFC013F7EA07E7EA03C700071380EBC0005BA4120F90C7FCA55A
EAFFE0A212147F9312>114 D<EA01FF1207EA0F0FEA1C07A2123CEA3E00EA3FE0EA1FFC
13FEEA07FFC6FC131FEA600F1307EA700F130EEAFC3EEAFFF8EACFF010147F9312>I<EA
0180EA0300A35AA25A123EEAFFF8A2EA1E00A3123E123CA5127CEA7830A313701360EA7C
E0EA3FC0EA1F000D1C7C9B12>I<000E13E0EAFE0FA2EA3E03121E123E003C13C0A41307
127C00781380A2130FA2131F137F387FFFF0381FCFE014147C9319>I<38FFC7F8A2381F
01E0001E13C01480380F0300A21306A25BEA079C139813B813B013E012035BA25BA21514
7C9318>I<390FFC7F80A23901F01E00EBE01C14186C6C5AA25CA25C13795C137B91C7FC
137E133E133CA21338A21330A25B1278EAF8C0EAC18012C3007EC8FC123C191D809318>
121 D E /Fd 20 118 df<EB0FFCEB7FFE3801FC1FD803F013803807E03F120F13C0A2EC
1F00140E91C7FCA3B61280A3380FC01FB0397FF8FFF0A31C237FA21F>12
D<123C127E12FFA4127E123C08087C8710>46 D<13181378EA03F812FFA212FD1201B3A5
387FFFE0A313207C9F1C>49 D<EA03FC381FFF804813C0387C3FE038FC1FF0EAFE0FEB07
F8A21303127CEA3807120014F0130F14E0EB1FC01480EB3F00137E13F8485AEBE038EA03
C0EA0780EA0F00001C1378383FFFF05AB5FCA415207D9F1C>I<00301360383E03E0EA3F
FF14C0148014005B13F80038C7FCA4EA39FE383FFF80EB0FC0383C07E0383803F0120014
F8A3127812FCA314F01307007813E0EA7E1F383FFFC06C1300EA07F815207D9F1C>53
D<B67E15F015FC3907F003FEEC007FED3F80ED1FC0ED0FE0A216F01507A316F8A916F0A3
ED0FE0A2ED1FC0ED3F80ED7F00EC03FEB65A15F0158025227EA12B>68
D<EA0FFE383FFFC0387E0FE0EB03F014F81301123C1200A213FF120FEA1FF1EA7F811301
12FF12FEA2130338FF07FC387F0FFFEA3FFC380FF07F18167E951B>97
D<3801FF80000713E0381FC3F0EA3F831303127F387E01E000FEC7FCA8127FA2383F8038
1478381FE1F03807FFE00001138015167E9519>99 D<EA01FE3807FF80381FC7E0EA3F03
14F0EA7E0114F812FEA2B5FCA248C7FCA4127E127F6C1338381F8078380FE1F03807FFE0
C6138015167E951A>101 D<3801FE1F000FB51280EA1F87383F03F7EA3E01007EEBF800
A5003E5BEA3F03381F87E0EBFFC0D839FEC7FC0038C8FCA2123C383FFFE014FC6C7F805A
397C007F8048131F140FA36C131F007EEB3F00383F80FE380FFFF8000113C019217F951C
>103 D<121E123FEA7F80A4EA3F00121EC7FCA6EAFF80A3121FB0EAFFF0A30C247FA30F>
105 D<EAFF80A3121FB3ABEAFFF0A30C237FA20F>108 D<38FF87F0EB9FFC13F8381FF0
7E13E013C0A21380AC39FFF1FFC0A31A167E951F>110 D<13FE3807FFC0380F83E0381F
01F0383E00F8007E13FCA300FE13FEA7007E13FCA2383F01F8001F13F0380F83E03807FF
C03800FE0017167E951C>I<38FF9FE0EBFFFCEBF0FE381FC07F9038803F80A3EC1FC0A8
EC3F80A2EC7F0013C0EBF1FEEBFFF8EB9FE00180C7FCA7EAFFF0A31A207E951F>I<3801
FE073807FF8F381FE3FFEA3FC0497E48487EA212FEA8127FA26C6C5A5CEA1FE33807FFBF
3801FE3FC7FCA7903801FFE0A31B207E951E>I<38FF1FC0EB3FE0EB7BF0EA1F6313E313
C3EBC1E0EB8000ACEAFFF8A314167F9517>I<EA0FFF123FEA7C1F487E487EA26CC7FCB4
FC13F86C7E7FEA1FFF6C1380EA007FEAE00FA2EAF007A238F80F00EAFE1FEAFFFEEAC7F8
11167E9516>I<EA01C0A41203A31207A2120FEA3FFFB5FCA2EA0FC0AAEBC380A513C738
07E700EA03FE6C5A11207F9F16>I<38FF83FEA3381F807EAD14FEA21381390FC3FFC038
07FF7FEA03FE1A167E951F>I E /Fe 17 122 df<127012F8A3127005057C840D>58
D<127012F8A312781218A312381230A2127012E01260050E7C840D>I<3801FFF8A2D800
1FC7FC131EA2133E133CA3137C1378A313F85BA312015B15C014010003148013C01403EC
07001207495A141E000F13FEB5FC5C1A1F7E9E1F>76 D<EBF9C03803FFE0EA078F380F07
C0121E123C14801278A2130F00F8130012F0A2EB1F18EB1E30133E38707E703878FE6038
3FEFE0381F87C015147E9318>97 D<13FEEA03FF3807C780EA0F0F121E123C140048C7FC
A312F85AA41303EA780FEA7C3EEA3FFCEA0FE011147E9314>99 D<13FCEA03FEEA07C7EA
0F03121EEA3C07EA7C0EEA783EEA7FF813E0EAF8005AA4EA7003EA780FEA3C3EEA3FFCEA
0FE010147E9315>101 D<EB01F8EB03FC1307EB0F7CA21478EB1F00131EA4133E3803FF
F0A238003C00A3137C1378A413F85BA412015BA4485AA31273EAFB8012FF90C7FC5A127C
16297D9F16>I<137013F8A213F0A21300A6EA0F80EA1FC0EA39E01271126313C012E312
071380120FA213005AEA1E381330123EEA3C7013E0EA1FC0EA0F800D1F7F9E10>105
D<381F07E0383F9FF83833FC78EA73F03863E03CEBC07C00E71378EA0780A214F8000F5B
13001301ECE380001F1400EA1E035C14CE383E01FC381C00F819147F931B>110
D<137E3803FF80EA07C7380F03C0EA1E01003C13E0A21278A2130312F800F013C0A2EB07
80A238700F00EA781EEA3C7CEA3FF8EA0FC013147E9316>I<3803E1F83807F7FC38067F
1E380E7E0E380C7C0F13F81218EA00F0A20001131FA2EBE01EA20003133CA2147814F038
07F1E0EBFFC0EB9F001380120FA290C7FCA25AA2EAFFE0A2181D829317>I<EA1F1F383F
BF803833F1C0EA73E3EA63C7A200E71380EA0787EB8000A2120F90C7FCA35A121EA3123E
121C12147F9315>114 D<13FEEA03FF38078380EA0F07120EA2001FC7FC13F0EA0FFC7F
6C7E1201EA101FEA780FEAF80EA2131EEAF07CEA7FF8EA1FE011147E9315>I<EA01C0EA
03E0A213C0A21207A21380EAFFF8A2EA0F801300A25AA2121EA2123EA2123CA2EA7C3813
30EA787013E01279EA3FC0EA1F000D1C7F9B10>I<380F80E0381FC1F0EA39E11271EA63
E0EBC07000E313601207138014E0000F13C0130013011480130314005B138EEA07FCEA01
F814147F9316>118 D<3807C3C0381FEFE0383CFE7038707CF01379EA60F938E0F1E012
00EBF0001201A25B1279007B137000FB1360EBC0E038F7C1C0EAE7E3387EFF80387C7E00
14147E931A>120 D<380F8070381FC0F8EA39E0007113F0126313C100E313E012071381
1383000F13C01303A213071480A2130F131F3807FF007EEA000F5BEA3C1EEA7C3E133C5B
EA78F0EA7FE0EA1F80151D7F9316>I E /Ff 2 34 df<00C0130C6C131C007013386C13
706C13E0380E01C000061380EA070338038700EA01CEEA00FC1378A213FCEA01CEEA0387
38070380EA0601000E13C0381C00E048137048133848131C48130C16187A9623>2
D<1506A31507811680ED01C0A2ED00E01670163CB8FCA2C9123C167016E0ED01C0A2ED03
8016005D1506A328187E962D>33 D E /Fg 2 51 df<120C127C12FC129C121CAAEAFF80
A209107E8F0F>49 D<123FEA7FC0EAE3E012E112E01200A2EA01C01203EA0780EA0E00EA
1C601238EA7FC012FFA20B107F8F0F>I E /Fh 53 123 df<EA3018EAF83EA8EA701CA5
0F0E7C9C18>34 D<137013F01203EA07E0EA0FC01380EA1F00123EA25AA21278A212F85A
A87E1278A2127CA27EA27EEA0F8013C0EA07E0EA03F0120013700C24799F18>40
D<12E07E12FC127E7E7EEA0F80EA07C0A2EA03E0A21201A213F01200A8120113E0A21203
A2EA07C0A2EA0F80EA1F005A127E5A12F05A0C247C9F18>I<13F0A8B512E0A43800F000
A813147E9718>43 D<123C127E127FA3123F120FA2123E12FE12F812F0080C788518>I<
B512E0A413047E8F18>I<127812FCA412780606778518>I<EA01F0EA07FC487EEA1F1FEA
1E0F383C0780387803C0A338F001E0A9EAF803007813C0A2EA7C07003C1380381E0F00EA
1F1FEA0FFE6C5AEA01F0131C7E9B18>48 D<EA01C01203A21207120F123F12FFA2126312
03B0B5FCA3101C7C9B18>I<EA07F8EA1FFE383FFF80387E1FC0EAF807EB03E0A21301A2
12001303A2EB07C0A2EB0F80131FEB3F00137E5B485AEA03E0485AEA1F80383F01E0127E
B5FCA3131C7E9B18>I<387FFF80A30078C7FCA8EA7BF8EA7FFEEBFF80387E0FC0EA7807
380003E0A2130112F8A21303A2EB07C0387E1F80387FFF00EA1FFEEA07F8131C7E9B18>
53 D<123C127EA4123C1200A8123C127EA4123E121EA2123C12FC12F812E0071A789318>
59 D<387FFFC0B512E0A3C8FCA4B512E0A36C13C0130C7E9318>61
D<12F07E12FE7EEA3FC06C7EEA07F86C7EC6B4FCEB7F80EB1FE0130FA2131FEB7F80EBFF
00EA03FC485AEA1FE0485AB4C7FC5A12F85A13187E9918>I<13F8A3487E13DCA3EA03DE
A4138EEA078FA5380F078013FFA31307381E03C0A338FF8FF8A3151C7F9B18>65
D<EAFFFE7F1480381E07C01303EB01E0A5EB03C01307381FFF80140014C0381E03E01301
EB00F0A6EB01E01303B512C01480EBFE00141C7F9B18>I<3801FCE0EA07FF5AEA1F8FEA
3F07EA3E03127C1301127800F8C7FC5AA87E387801E0127CA2EA3E03EA3F07381F8FC038
0FFF806C1300EA01FC131C7E9B18>I<B512F8A3381E0078A41400A2130FA3EA1FFFA3EA
1E0FA390C7FCA7EAFFE0A3151C7F9B18>70 D<38FE0FF812FFA2381F81C0121DA213C112
1CA213E1A313611371A213311339A31319A2131D130DA2130FEAFF87A21383151C7F9B18
>78 D<EAFFFEEBFF8014C0EA1E07EB03E01301EB00F0A5EB01E01303EB07C0EA1FFF1480
EBFE00001EC7FCA8EAFFC0A3141C7F9B18>80 D<3807F9C0EA1FFF5AEA7C1FEAF807A2EA
F003A26CC7FCA212FEEA7FC0EA3FFC6CB4FC0007138038007FC01307EB03E0A2130112F0
A2130338F807C0EAFE0FB512801400EAE7FC131C7E9B18>83 D<B512F8A338F07878A400
001300B23807FF80A3151C7F9B18>I<38FF8FF8A3383C01E0381E03C0A4380F0780A538
078F00A4EA038EA213DEA2EA01DCA313FCA26C5AA2151C7F9B18>86
D<38FE03F8A338700070A36C13E0A513F8EA39FC13DCA2001913C0A3138CA2EA1D8DA313
05380F0780A3EA0E03151C7F9B18>I<387F9FE0A3380F0F80EB8F00EA079F13DEEA03FE
5B12015B12005BA27F12017F120313DEEA079E138FA2380F0780A2001E13C038FF8FF8A3
151C7F9B18>I<38FF8FF8A3381E03C0121FEA0F07EB8780EA078F1400EA03CFA2EA01DE
A213FC1200A21378A9EA03FFA3151C7F9B18>I<EAFFFCA3EAF000B3ACEAFFFCA30E2478
9F18>91 D<EAFFFCA3EA003CB3ACEAFFFCA30E247F9F18>93 D<EA1FF0EA7FFC13FFEA7C
1FEB0F801238EA000713FF120F123FEA7F87EAFC0712F812F0A2EAF80FEAFC1F387FFFF8
7EEA07F115147E9318>97 D<B4FCA3120FA5133FEBFFC014E0EBE3F0EBC0F81380EB007C
A2143CA4147C138014F813C1EBE3F0EBFFE014C0EB3E00161C809B18>I<EA01FE380FFF
805AEA3F0F127E387C070048C7FCA25AA47EA2387C03C0EA7E07EA3F0F381FFF806C1300
EA01FC12147D9318>I<EB3FC0A31303A5EA01FBEA0FFF5AEA3F1FEA7E0FEA7C07EAF803
A212F0A412F81307127C130FEA3F1F381FFFFC7EEA03F3161C7F9B18>I<EA01F8EA07FE
381FFF80383F0FC0EA7E07EA7C0300F813E0130112F0B5FCA300F8C7FCA2387C01E0EA7E
03EA3F87381FFFC0000713803801FE0013147E9318>I<EB1F80EB7FE013FFEA01FB13F3
EBE1C0EBE000A2B512C0A33801E000AE387FFF80A3131C7F9B18>I<3803F1F0380FFFF8
5AEA3E1F387C0FF01480EA7807A3EA7C0FA2383E1F00EA3FFE5BEA3BF00038C7FC123CEA
3FFF14C04813F0EA780138F00078A2481338A26C13786C13F8387E03F0383FFFE0000F13
803803FE00151F7F9318>I<B4FCA3120FA5133FEBFFC0A2EBE3E013C11381A21301AA38
FFF3FEA3171C809B18>I<EA01C0487EA36C5AC8FCA4EAFFE0A31201AEB51280A3111D7D
9C18>I<12FEA3120EA5EB3FF0A3EB0F80EB1F00133E5B5B120FA27F13BE131EEA0E0F14
80EB07C0130338FFC7F8A3151C7F9B18>107 D<EAFFE0A31201B3A4B512C0A3121C7D9B
18>I<38FBE3E038FFF7F0EBFFF8383F7F78383E3E38EA3C3CA2EA3838AA38FE7E7EA317
14809318>I<EAFF3FEBFFC0A2380FE3E013C11381A21301AA38FFF3FEA31714809318>I<
EA01F0EA0FFE487E383E0F80EA3C07387803C0A238F001E0A6387803C0A2383C0780EA3F
1F381FFF006C5AEA01F013147E9318>I<EAFF3FEBFFC014E0380FE3F0EBC0F81380EB00
7CA2143CA4147C138014F813C1EBE3F0EBFFE014C0EB3E0090C7FCA7EAFFF0A3161E8093
18>I<3801F9E0EA07FF121FEA3F0FEA7E07EA7C0312F8130112F0A412F81303127CEA7E
07EA3F0FEA1FFF7EEA03F9EA0001A7EB1FFEA3171E7F9318>I<38FF87E0EB9FF813FF38
07FC7813F0EBE000A25BA25BA8B5FCA315147F9318>I<EA0FFF123F5AEAF81F487E12E0
6CC7FCB4FCEA7FF8EA3FFEEA0FFF38003F80EAF007130312F81307EAFE0FB512005BEAE7
F811147D9318>I<EA0780A5B512C0A338078000A914C0EB81E0A213C313C73803FFC06C
138038007E0013197F9818>I<38FF1FE0A3EA0F01AB1303A21387EBFFFE7EEA01FD1714
809318>I<38FF8FF8A3381C01C0380E0380A338070700A3138FEA038EA213DEEA01DCA3
EA00F8A2137015147F9318>I<38FF8FF8A3383800E0A4381C01C0137113F9A3EA1DDD00
0D1380A3EA0F8FA33807070015147F9318>I<387F9FF0A3380F0700EA078EEA039EEA01
DC13F81200137013F07FEA01DCEA039E138EEA0707000E138038FF8FF8A315147F9318>
I<38FF8FF8A3380E01C0EB0380A21207EB0700A2EA0387A2138EEA01CEA213CCEA00DC13
FC1378A31370A313F0EA7CE0127DEA73C0EA7F806CC7FC121E151E7F9318>I<387FFFF0
A3387803E0EB07C0EB0F8038001F00133E5B5B485A485A485A380F80F0EA1F00123E5AB5
FCA314147F9318>I E /Fi 73 127 df<127012F8AF1200A4127012F8A3127005197898
16>33 D<EA6030EAF078A9EAE038A20D0C7C9916>I<1238127C127EA2123E120EA3121E
123CA212F812F01260070E799816>39 D<13E01201EA07C01380EA0F00121E5A12381278
1270A312F05AA77E1270A312781238123C7E7EEA078013C0EA01E012000B217A9C16>I<
12E07E127C123C7E7EEA0780120313C01201A313E01200A7120113C0A3120313801207EA
0F00121E5A127C12F05A0B217C9C16>I<EA0380A4EAE38EEAFBBEEAFFFEEA3FF8EA0FE0
A2EA3FF8EAFFFEEAFBBEEAE38EEA0380A40F127D9516>I<13E0A8B512E0A33800E000A8
13137F9516>I<127812FC12FEA3127E121EA2123C12F812F012E0070C788516>I<B51280
A311037E8D16>I<127812FCA412780606788516>I<EB0380A21307A2EB0F00A2131EA25B
A25BA25BA2485AA2485AA2485AA248C7FCA2121EA25AA25AA25AA25AA211207E9C16>I<
EA03E0EA0FF8487EEA1E3CEA380EEA780FEA7007A238E00380A8EAF00700701300A2EA78
0FEA3C1E6C5AEA1FFC6C5AEA03E011197E9816>I<1207A25A5A5AB4FCA212F71207AEEA
FFF8A30D197B9816>I<EA0FF0EA1FFCEA7FFEEA783FEAF00FEB07801303A21200A21307
14005B131E5B5B5BEA03E0485A48C7FC381E0380123CB5FCA311197E9816>I<EA0FF0EA
3FFC487EEA781F7F7F1230C65AA2133EEA07FC5B7FEA001E7FEB07801303126012F01307
EB0F006C5AEA7FFE6C5AEA0FF011197E9816>I<137C13FCA2EA01DCEA039CA2EA071C12
0F120E121E123C1238127812F0B512E0A338001C00A53801FFC0A313197F9816>I<EA7F
FEA30070C7FCA7EA77F0EA7FFC7FEA7C1FEA7007000013801303126012F01307EB0F00EA
F83FEA7FFE6C5AEA0FF011197E9816>I<EA01FCEA07FE487EEA1F8FEA3E0F123CEA7806
0070C7FCEAF040EAE7F8EAFFFEA2EAF80F38F00780A2EAE00312F0A21270EA7807EB0F00
EA3E1FEA1FFE6C5AEA07F011197E9816>I<12E0B51280A338E01F00131EC65A137C1378
5BA2485AA25B1203A25BA21207A290C7FCA6111A7E9916>I<EA07F0EA1FFC487EEA7C1F
38F00780EAE003A338700700EA7C1FEA1FFCEA07F0EA1FFCEA3C1EEA700700F01380EAE0
03A3EAF00700701300EA7C1FEA3FFE6C5AEA07F011197E9816>I<EA07F0EA1FF8487EEA
7C3EEA780F12F0487E1480A21303EAF007A2EA780FEA3FFFA2EA0FF3EA010700001300EA
300FEA780E133E5BEA7FF86C5AEA0FC011197E9816>I<127812FCA412781200A6127812
FCA412780612789116>I<127812FCA412781200A6127812F812FCA3127C121C123C1278
12F812F012E00618789116>I<387FFFC0B512E0A2C8FCA5B512E0A26C13C0130B7F9116>
61 D<12E012F87E123F6C7EEA07E06C7EEA00FC137EEB1F80130F131FEB7E005BEA03F0
485AEA1F8048C7FC12FC5A12E011157E9616>I<13E0487EA213B0A2EA03B8A31318EA07
1CA5EA0E0EA2EA0FFEA2487EEA1C07A338FF1FE0A313197F9816>65
D<EAFFF813FE7FEA1C0714801303A4EB0700EA1FFF5BA2EA1C1FEB038014C01301A41303
EB0780B5FC140013FC12197F9816>I<3803F180EA07FF5AEA1F0FEA3C07127813031270
00F0C7FC5AA77E387003801278A2EA3C07381F0F00EA0FFE6C5AEA03F011197E9816>I<
EAFFF813FE7FEA1C0FEB0780EB03C01301A214E01300A8EB01C0A21303EB0780130FB512
005B13F81319809816>I<B512C0A3EA1C01A490C7FCA2131CA2EA1FFCA3EA1C1CA290C7
FC14E0A5B5FCA313197F9816>I<B512E0A3EA1C00A41400A2131CA2EA1FFCA3EA1C1CA2
90C7FCA6EAFFC0A313197F9816>I<3803F180EA07FF5AEA1F0FEA3C0712781303127000
F0C7FC5AA4EB1FE0A338F003801270EA7807A2EA3C0FEA1F1FEA0FFFEA07FBEA03F31319
7F9816>I<38FF8FF8A3381C01C0A7EA1FFFA3EA1C01A938FF8FF8A31519809816>I<EAFF
C0A3001CC7FCAE144014E0A4B5FCA313197F9816>76 D<38FC07E0EAFE0FA2383A0B80EA
3B1BA413BBA2EA39B3A413F3EA38E3A21303A538FE0FE0A313197F9816>I<38FE0FF812
FFA2381D81C0A313C1121C13E1A213611371A313311339A21319131D130DA3EAFF87A213
831519809816>I<EAFFF813FE7F381C0F80130314C01301A313031480130F381FFF005B
13F8001CC7FCA7B47EA312197F9816>80 D<EA0FF348B4FC127FEA781F487E487EA290C7
FC7E1278EA7F80EA3FF8EA0FFCC67E130FEB07801303A212E0A2EAF00738F81F00EAFFFE
5BEACFF811197E9816>83 D<B512E0A3EAE0E0A400001300AFEA0FFEA313197F9816>I<
38FF8FF8A3381C01C0AFEA1E03A2380F0780138F3807FF006C5AEA00F81519809816>I<
38FE0FE0A338380380EA3C07001C1300A3EA1E0FEA0E0EA46C5AA4EA031813B8A3EA01B0
13F0A26C5A13197F9816>I<38FF07F8A3383800E0A4381C01C0A3137113F9A213D9A200
0C1380A3EA0DDD138DA338078F00A213071519809816>I<387F3FC0A3380E1E00131C12
075BEA03B813F012015B120012017F120313B81207131C120FEA0E0EA2487E38FF1FE0A3
13197F9816>I<38FF1FE0A3381C0700A2EA0E0EA26C5AA3EA03B8A2EA01F0A26C5AA8EA
07FCA313197F9816>I<EAFFF0A3EAE000B3A8EAFFF0A30C20789C16>91
D<EAFFF0A3EA0070B3A8EAFFF0A30C207F9C16>93 D<EA1FE0EA7FF87FEA783EEA301EEA
000E137EEA0FFE123FEA7FCEEAF80E12E0A2EAF01EEAF83E387FFFE07EEA1FC313127E91
16>97 D<12FCA3121CA413FCEA1FFF1480EB8FC0EA1E03EB01E0121C1300A4EA1E0114C0
EA1F03EB8F8013FFEBFE00EA1CFC13197F9816>I<EA03FCEA0FFE121FEA3E1EEA780CEA
700012F05AA47EEA7007127CEA3E1FEA1FFEEA0FFCEA03F010127D9116>I<133FA31307
A4EA07E7EA1FFF5AEA3E3FEA780F1270EAF00712E0A46C5AA2EA781FEA7E3F383FFFE0EA
1FF7EA07E713197F9816>I<EA03F0EA0FFCEA3FFEEA3E1F38780F80EAF807EAF003B5FC
A300E0C7FC7E38F80380EA7C07EA3E0F381FFF006C5AEA03F811127E9116>I<133FEBFF
805AEA03E7EB83001380A2B5FCA3EA0380ACEAFFFEA311197F9816>I<3803E7C0380FFF
E05AEA1E3C383C1E00EA380EA3EA3C1E6C5AEA1FFC485AEA3BE00038C7FC123CEA3FFEEB
FF804813C0EA780738F001E0EAE000A3EAF001387E0FC0383FFF806C1300EA07FC131C7F
9116>I<12FCA3121CA413FCEA1FFE7F138FEA1E07A2121CA938FF9FE0A313197F9816>I<
1207EA0F80A3EA0700C7FCA3EAFF80A31203ACEAFFFEA30F1A7C9916>I<12FEA3120EA4
EB7FE0A3EB1F00133E5B5BEA0FF07F7F13BC131EEA0E1FEB0F80130738FFCFF0A3141980
9816>107 D<EAFFC0A31201B3B51280A311197E9816>I<38FBC78038FFEFC0EBFFE0EA3E
7CEA3C78EA3870AA38FE7CF8A31512809116>I<EAFCFCB47E7FEA1F8FEA1E07A2121CA9
38FF9FE0A313127F9116>I<EA03E0EA0FF8487EEA3C1E487EEA700738E00380A5EAF007
00701300EA780FEA3C1EEA1FFC6C5AEA03E011127E9116>I<EAFCFCB5FC1480381F8FC0
EA1E03EB01E0121C1300A4EA1E0114C0EA1F03EB8F8013FFEBFE00EA1CFC90C7FCA6B47E
A3131B7F9116>I<3807F380EA0FFBEA1FFFEA3E1FEA780FEA700712F0EAE003A4EAF007
1270EA780FEA3E1FEA3FFFEA1FFBEA07E3EA0003A6EB3FF8A3151B7F9116>I<38FF1FC0
EB7FE013FFEA07F9EBE0C0EBC0005BA290C7FCA7EAFFFCA313127F9116>I<EA1FECEA3F
FC127FEAF03CEAE01CA2EAF800EA7FC0EA3FF0EA07FCEA003EEAE00EA212F0EAF83EEAFF
FC13F8EACFF00F127D9116>I<1207A5B5FCA30007C7FCA75BEB0380A21307138F3803FF
005BEA00F811177F9616>I<EAFC3FA3EA1C07AA5BEA1E1F381FFFE07EEA07F713127F91
16>I<38FF9FE0A3381C0700A2EA0E0EA36C5AA4EA03B8A3EA01F0A26C5A13127F9116>I<
38FF1FE0A338380380A4EA39F3A20019130013B3A3EA1DB71317EA1F1FEA0F1EEA0E0E13
127F9116>I<387F3FC0A3380F1E006C5AEA03B813F012016C5A12017FEA03B8EA073C13
1CEA0E0E38FF3FE0A313127F9116>I<38FF9FE0A3381C0700120E130EA212075BA2EA03
9CA21398EA01B8A2EA00F0A35BA3485A1279127BEA7F8090C7FC123C131B7F9116>I<38
7FFFC0A338700F80EB1F00133EC65A5B485A485A485A485A381F01C0123E127CB5FCA312
127F9116>I<12E0B3AE0320779C16>124 D<EA1E38EA7F78EAFFF8EAF7F0EAE3C00D057C
9816>126 D E /Fj 2 51 df<1206121E12FE12EE120EAFEAFFE0A20B157D9412>49
D<EA1F80EA7FE0EAF1F0EAF8F81378A21270120013F813F0120113E0EA03C0EA0780EA0E
00EA1C181238EA7038EAFFF0A30D157E9412>I E /Fk 39 122 df<121C123CA4120C12
1C121812381230127012E012C0A2060E7D840E>44 D<130113031307130F133F13FE1203
EA07BEEA003E133CA2137CA21378A213F8A213F0A21201A213E0A21203A213C0A21207EA
FFFC13F8101E7B9D17>49 D<EB1F80EB7FE0EBF0F03801C07038038078EB3038EA073800
061378EA0E30120C1370EBE0F8380FC0F0EA0781380003E0EB07C0EB0F80EB1E00137CEA
01F0EA03C0485A380E003048137048136014E0EA7FC3EBFFC000E1138000C01300133E15
1F7D9D17>I<EB1F80EB7FE03801F0F03803C070EB8078EA0760EA067014F8EB60F0EA07
E013C0380001E0EB03C0EB0F80EBFF005B130FEB0780A412301278130F00F0130012E013
1EEA603CEA70F8EA3FF0EA1F80151F7C9D17>I<14E01301A2130314C0A3EB0780A3EB0F
00A2130E131E131C133C13381378137013E7EA01EF13CFEA038F485AEA0F1E121E123CEA
7FBE38FFFCC0EAC0FF38003F80EB7C001378A313F85BA313277E9D17>I<48B512C015F0
39001E00F81578157C133E133CA3017C13F81378EC01F0EC03E09038F80F8090B5120015
809038F007C00001EB03E013E0A214010003130313C0A215C0000713079038800F80EC1F
00000F137EB512F814E01E1F7D9E20>66 D<ECFE06903807FF8E90381FC3DC90387E00FC
01F8137C485A48481338485A485AA248C71230A2123E1500127E127CA312FC5AA2EC01C0
1580A2007813031500007C5B003C130E003E5B6C1378380FC1F03803FFC0C690C7FC1F21
7A9F21>I<48B512FEA239001E007C151CA2133E013C130C151C1518EB7C0C1378150014
1CEBF838EBFFF8A2EBF0780001133013E0153015700003EB00604913E015C01401000714
80EB8003140F000FEB3F00B6FC5C1F1F7D9E1F>69 D<48B512FCA239001E00F81538A201
3E1318133C15381530EB7C0C13781500141CEBF838EBFFF8A2EBF0780001133013E0A300
0390C7FC5BA312075BA2120FEAFFFC5B1E1F7D9E1E>I<903801FC0C90380FFF1C90381F
83B890387E01F8EBF800485A48481370485A485AA248C71260A2123E1500127E127CA312
FC48EBFFF0A2EC0F80A2150012785C127C003C131E003E133E6C137E380FC1EC3807FFC4
D801FEC7FC1E217A9F23>I<3801FFF8A2D8001FC7FC131EA2133E133CA3137C1378A313
F85BA312015BEC018014030003140013C05C14060007130EEB801E5C000F13FCB5FC5C19
1F7D9E1D>76 D<48B4ECFFC0A2D8001F903801FC005E15035B0137EB06F0150C150D0177
1319D963805B1531153301E3136301C3EBC3C0A2EC81871201903983830780A2EC860F00
03138C010391C7FC1498903801D81F000713F00006141E000E13E0001FEBC03E3AFFE1C3
FFE0D9C1835B2A1F7D9E29>I<48B4EBFFE0A2D8001FEB1F00EC800C151C133F903837C0
1813331538EB73E001611330A2ECF07013E001C0136014F8EC78E0120101805B147C143D
12039038003F80141FA25A00066DC7FC120E121F38FFC0071406231F7D9E22>I<48B512
8015E039001E01F0EC0078133E157C133CA2137C15F8137815F09038F801E0EC03C09038
F00F8090B512004813F801F0C7FC5BA21203A25BA21207A25BA2120FEAFFF85B1E1F7D9E
1F>80 D<903807F0C0EB1FFD90387C3F80EBF00FEBE007EA01C00003EB03001380A391C7
FC7F7F13FCEBFF806C13E06C7FEB1FF81303130014781438A21230A200701378147014F0
387801E038FC03C0B4485AD8EFFFC7FCEAC3FC1A217D9F1A>83 D<001FB512FCA2903803
C078003C143800381418EA300700701380006014381530EAE00F00C0130000001400A25B
131EA3133E133CA3137C1378A313F85BA21201387FFF80A21E1F799E21>I<9039FFF07F
E0ECE0FF90391F803F00010F133C010713305D6E5AEB03C1ECC38002E3C7FCEB01E614EC
14F86D5AA280A2497EEB033C1306EB0C3EEB1C1E1338EB301F497E13C0D801807F000713
07000F497E39FFE03FF813C0231F7E9E22>88 D<EBFB803803FFC0EA079F380F0F80EA1E
07EA3C0F14001278A25BEAF81E12F0A2EB3E70EB3C60A238707CE03879FCC0EA3FDF381F
0F8014147C9317>97 D<EA07C0123FA2EA0780A2120FA290C7FCA25AA2121E13FCEA3FFE
138F1307003E1380127CA21278A2130F12F800F01300A2131EA25BEA7078EA78F0EA3FE0
EA1F8011207C9F15>I<137EEA03FF3807C380EA0F07121E123CEB020048C7FCA312F85A
A4EA7003EA7807EA3C3EEA3FFCEA0FE011147C9315>I<14F81307A2EB00F0A21301A214
E0A21303A214C013FBEA03FFEA079F380F0F80EA1E07EA3C0FA200781300A25B12F8EAF0
1EA2EB3E701460133C38707CE03879FCC0EA3FDF381F0F8015207C9F17>I<13FEEA03FF
3807C780EA0F03EA1E01EA3C03387C0700EA781FEA7FFC13F000F8C7FC5AA312701303EA
7807EA3C3EEA1FFCEA0FE011147C9315>I<14F8EB03FC14BC1307A2EB0F00A45B131EA2
3803FFF0A238003E00133CA4137C1378A413F85BA412015BA4485AA21273EA7B80B4C7FC
7E127C1629829F0E>I<EB1F38EB7FFC13F13801E0F8EA03C0EA0780A2380F00F0A2EA1F
01A2001E13E0A21303A2EB07C0EA0E0FEA0F1FEA07FF3803F780EA0007130FA21400EA70
1FEA783EEAF87CB45AEA3FE0161D7F9315>I<EA01F0120FA2EA01E0A312035BA312075B
13BFEBFFC0EA0FE3EBC1E013811303001F13C0121EA21307003E1380123C130F141C007C
1318EA781FEB1E38EB0E7038F80FE0387007C016207E9F17>I<13F0A313E01300A7EA0F
80EA1FC0123B127312631267EAE7801207120F1300A25A121E1370EA3E60123C13E0EA3D
C0EA3F80EA1F000C1F7D9E0E>I<EA03E0121FA2EA03C0A21207A21380A2120FA21300A2
5AA2121EA2123EA2123CA2127CA21278A2EAF9C0138012F112F31300127F123E0B207D9F
0C>108 D<391F0FC1F8393F9FF3FE3933F8F71E3973F07E0F3863E07C49485A00E7141E
380780F0A20181133E000F143CEB01E0157C0103EB78E0001F15C0001EEBC0F815F10107
EBF380003EEC7F00391C03803E23147D9325>I<381F0FC0383F9FF0EA33F83873F078EA
63E0EBC0F800E713F0EA0780A21381000F13E01301130314C7001F13C6EA1E07148E149C
383E03F8381C01F018147D931A>I<137E3803FF80EA07C7380F03C0EA1E01003C13E0A2
1278A2130312F800F013C0A2EB0780A238700F00EA781EEA3C7CEA3FF8EA0FC013147C93
17>I<3803E1F03807F7F838067F3C380E7C1C380C781E13F8121CEA00F0A20001133EA2
EBE03CA200031378A2EBC0F0EBE1E03807F3C0EBFF80EBBE001380120FA290C7FCA25AA2
EAFFE0A2171D809317>I<EA1F1F383FBF803833F1C0EA73E3EA63C3A200E71380380780
00A3120F90C7FCA35A121EA3123E121C12147D9313>114 D<13FCEA03FEEA0787EA0F0F
120EA2EA1F0013F013F8EA0FFCEA07FE1203EA003EEA701EEAF01CA2133C1378EA7FF0EA
1FC010147D9313>I<EA0380EA07C0A21380A2120FA21300EAFFF0A2EA1F00121EA2123E
A2123CA2127CA21278A2EAF8701360EAF0E0EAF1C012F3EA7F80EA3E000C1C7C9B0F>I<
380F80E0381FC1F012393871E1E0126313C300E313C0120713831387000F13801307A2EB
0F9C1418A21438EB3F303807FFF03803E3E016147D9318>I<380F81C0381FC3E0EA39E3
1271EA63E113C000E313C0120713801381000F13801301A2EB0300A25B130E139CEA07F8
6C5A13147D9315>I<390F80E0E0391FC1F1F0EA39E1007113E1006313E001C3137000E3
1460000713C01383018713E0000F14C0EB0780A214811580EB0F831500EB9FCF3807FBFE
3803F0FC1C147D931E>I<3807C7C0EA1FEF383CFCE0EA707D1379EA60F938E0F1C03800
F000A21201A25BA2007313E000F313C013C112F738E7E780387EFF00EA7C7C13147D9315
>I<380F8070381FC0F8EA39E0007113F0126313C100E313E0120713811383000F13C013
03A213071480A2130F131F3807FF007EEA000F5BEA101EEA783E133C5BEA71F0EA7FE0EA
1F80151D7D9316>I E /Fl 48 124 df<137EEA03FF38078780EA0F07121E121C90C7FC
A4B51280A2EA1C03AC38FF8FF0A2141A809915>12 D<EA7878EAF8F8EAFCFCA2EA7C7CEA
0C0CA2EA1C1CEA3838A2EA7070EA60600E0C7F9913>34 D<127012F8A312781218A21238
123012701260A2050C7D840B>44 D<127012F8A3127005057D840B>46
D<12035AB4FCA21207B2EA7FF8A20D187D9713>49 D<EA7038EA7FF813F013E0EA6000A5
EA6FC0EA7FF0EA78F8EA7078EA003CA3127012F0A3EAE078EA70F0EA3FE0EA1F800E187E
9713>53 D<EA01F8EA07FCEA0F1E121E123C127813001270EAF0C0EAF7F8EAFFFCEAFC1E
EAF80E130F12F0A31270A21278EA381EEA3E3CEA1FF8EA07E010187F9713>I<EA07E0EA
1FF8EA3C3CEA781CEA701EEAF00E130FA4131F1270EA783FEA3FFFEA1FEFEA030FEA000E
131E1278131C133813F8EA3FE0EA1FC010187F9713>57 D<127012F8A312701200A61270
12F8A3127005107D8F0B>I<130C131EA3133FA3EB6780A3EBC3C0A3380181E0A348C67E
13FF487F38060078A2000E137C000C133C121E39FF81FFC0A21A1A7F991D>65
D<B5128014E0380F00F01478143CA5147814F0EBFFE0A2EB01F0EB0078143C141EA5143C
A214F8B512F014C0171A7F991B>I<EB7F063801FFE63807E0FE380F803E381E001E5A14
0E5A14065A1400A614061278A26C130E140C6C131C380F80383807E0F03801FFE038007F
80171A7E991C>I<B512F8A2380F007814381418141C140CA213031400A25B13FFA21307
7FA390C7FCA6EAFFF0A2161A7F9919>70 D<EB7F063801FFE63807E0FE380F803E381E00
1E5A140E5A14065A91C7FCA5903803FFC0A23978001E00A27EA27E380F803E3807E07E38
01FFFE38007FC61A1A7E991E>I<EAFFC0A2EA1E00B3A4EAFFC0A20A1A7E990E>73
D<EAFFF0A2000FC7FCAE1418A31438A214301470EB01F0B5FCA2151A7F9918>76
D<39FF8001FF6D5A000F14F0A2380DE006A3380CF00CA3EB7818A3EB3C30A3EB1E60A3EB
0FC0A3EB0780121E39FFC78FFFEBC30F201A7F9923>I<B4EBFFC07F390FC01E00140C13
E0EA0DF0120C13F8137CA2133E131FA2EB0F8C130714CCEB03EC130114FC1300A2147C14
3C121E38FFC01C140C1A1A7F991D>I<B5128014E0380F00F014781438143CA514381478
14F0EBFFE0148090C7FCA9EAFFF0A2161A7F991A>80 D<B5FC14C0380F01F0EB00781438
143CA414381478495AEBFFC080EB03F0EB00F8A21478A515C0147D38FFF03FEC0F801A1A
7F991C>82 D<EA0FC6EA3FF6EA787EEA701EEAE00EA2130612F0130012FCEA7F8013F0EA
3FFCEA0FFE1201EA003F130FA2EAC007A212E0130FEAF00EEAFC3CEADFF8EAC7F0101A7E
9915>I<39FFC03FC0A2391E000F00001F130E6C130CA26C6C5AA2EBC03800031330A2EB
E07000011360A26C6C5AA213F9EB7980A2137F6DC7FCA2131EA3130C1A1A7F991D>86
D<12FEA212C0B3AF12FEA207257D9B0B>91 D<EA3030A2EA7070EA6060EAE0E0EAC0C0A2
EAF0F0EAF8F8A3EA70700D0C7C9913>I<12FEA21206B3AF12FEA20725809B0B>I<EA3FE0
EA7FF8EA78787FEA301CEA003CEA0FFC123FEA7E1C12F812F0EB1D80133DEAF87D387FFF
00EA3F8E11107F8F13>97 D<12FCA2121CA813FE381FFF801387381E03C0121CEB01E0A6
EB03C0121E381F8F80381BFF00EA18FE131A809915>I<EA07F8EA1FFCEA3E3C12781318
EAF000A61278EA7C0CEA3E1CEA1FF8EA07E00E107F8F11>I<133FA21307A8EA0FE748B4
FCEA3E1FEA780F7F12F0A612785BEA3C3F381FFFE0EA0FE7131A7F9915>I<EA0FE0EA1F
F0EA3C78EA783C1270EAFFFCA2EAF000A41278130CEA3E1CEA1FF8EA07E00E107F8F11>
I<EA01F8EA07FCEA0F3C120E121C1300A5EAFFC0A2EA1C00ACEAFF80A20E1A80990C>I<
380FCF80EA3FFFEA787B38F03C00A5EA7878EA7FF0EA6FC00060C7FC1270EA7FF87F7FEA
F01F487E7FA26C5AEA7C3EEA3FFCEA0FF011187F8F13>I<12FCA2121CA813FEEA1FFFEB
8780EA1E03A2121CA938FF9FF0A2141A809915>I<1238127CA312381200A512FCA2121C
AC12FFA2081A80990A>I<12FCA2121CB3A4EAFF80A2091A80990A>108
D<38FCFC3F39FFFEFF80391F0FC3C0381E0781001C1301AA39FF9FE7F8A21D107F8F20>
I<EAFCFEB5FC381F8780EA1E03A2121CA938FF9FF0A21410808F15>I<EA07E0EA1FF8EA
3C3CEA781EEA700EEAF00FA6EA700EEA781EEA3C3CEA1FF8EA07E010107F8F13>I<EAFC
FEB51280EA1F8F381E07C0EA1C03EB01E0A5130314C0EA1E07381F8F80EBFF00EA1CFE90
C7FCA5B47EA21317808F15>I<EAFDF8EAFFFCEA1F3C121E1318EA1C00A9EAFF80A20E10
808F0F>114 D<EA3FE0127F12F0EAE060A2EAF800EAFF80EA7FC0EA1FE0EA01F012C0EA
E070A2EAF0F0EAFFE0EADF800C107F8F0F>I<1218A51238A2EAFFC0A2EA3800A71360A4
EA3CE0EA1FC0EA0F800B177F960F>I<38FC1F80A2EA1C03A91307A2EA1E1F380FFFF0EA
07F31410808F15>I<38FE3F80A2383C0E00EA1C0CA26C5AA36C5AA213706C5AA26C5AA3
11107F8F14>I<39FE3F9F80A239381E0E00EA1C3EEB360C1337380E771813631498000F
13B83807C1B014F0A2380380E0A319107F8F1C>I<387F1FC0A2380E1E00EA071C1398EA
03B0EA01F06C5A7F1201EA03B8EA071C120EEA1E0E38FF1FE0A21310808F14>I<38FE3F
80A2383C0E00EA1C0CA26C5AA36C5AA213706C5AA26C5AA35BA2126100F3C7FC12C712FE
127811177F8F14>I<B512C0A21202808A13>123 D E /Fm 2 122
df<120C120EEACCC012FFA2EA3F00EAFFC0A212CCEA0E00120C0A0B7D8B10>3
D<121CA5EAFF80A3EA1C00AE09167D900F>121 D E /Fn 79 125
df<90381FE3F090B512F8D803F0137C3807C0FEEB80FC380F00F8EC7800A6B61280A239
0F007800B0397FE3FF80A21E20809F1B>11 D<EB1FC0EBFFE03803F0F0EA07C11381EA0F
01A290C7FCA5B512F0A2EA0F00B0387FC3FEA21720809F19>I<EB1FF013FFEA03F1EA07
C11381EA0F011300A6B5FCA2EA0F00B0387FE7FEA21720809F19>I<90381FC0FE9038FF
F7FF3A03F07F87803907C0FE0FEB80FC380F00F8A20278C7FCA5B71280A2390F007807B0
3A7FE3FF3FF0A22420809F26>I<127012F8A91270AD1200A5127012F8A3127005217CA0
0D>33 D<EA7038EAF87CEAFC7EA2EA7C3EEA0C06A3EA1C0EEA180CEA381CEA7038EAF078
EA60300F0E7F9F17>I<127012F812FCA2127C120CA3121C12181238127012F01260060E
7C9F0D>39 D<13E01201EA03C01380EA07005A120E121E121C123C1238A21278A21270A2
12F0AE1270A21278A21238A2123C121C121E120E120F7EEA038013C0EA01E012000B2E7C
A112>I<12E07E127812387E121E120E120F7E13801203A213C0A21201A213E0AE13C0A2
1203A21380A2120713005A120E121E121C5A12785A5A0B2E7EA112>I<127012F8A31278
1218A312381230A2127012E01260050E7C840D>44 D<EAFFF0A30C03808B0F>I<127012
F8A3127005057C840D>I<EA03F0EA0FFCEA1E1EEA1C0E487E00781380EA7003A300F013
C0AD00701380A3EA780700381300EA1C0EEA1E1EEA0FFCEA03F0121F7E9D17>48
D<13C01201120F12FF12F31203B3A5EA7FFFA2101E7D9D17>I<EA07F0EA1FFCEA3C3EEA
701F38600F80EAF80700FC13C0A21303A2EA30071200A2EB0F80A2EB1F00133E133C5B5B
485A485A380780C0EA0E005AEA3801387FFF80B5FCA3121E7E9D17>I<EA07F0EA1FFCEA
3C3FEA380F007C1380A2EA7E07EA7C0FA2000013005B133E5BEA07F85BEA003C131FEB0F
80A2EB07C0A2127812FCA3EB0F8012F838701F00EA3C3EEA1FFCEA07F0121F7E9D17>I<
1307A25B5BA25B5B13EF13CF1201EA038F130F1207120E120C121812381230126012E0B5
12F0A238000F00A6EBFFF0A2141E7F9D17>I<EA3807EA3FFF5B5B13F00030C7FCA6EA33
F0EA37FCEA3E1EEA3C0F00381380EA3007000013C0A412F8A4EB0F80126038701F00EA3C
3EEA1FFCEA07F0121F7E9D17>I<13FEEA03FF3807C780EA0F0F121E123C12380078C7FC
A21270EAF040EAF3FCEAF7FEEAFE0F38FC078012F8130300F013C0A51270A21278EB0780
1238383C0F00EA1E1EEA0FFCEA03F0121F7E9D17>I<1260387FFFE0A314C038E00180EA
C003EB0700130EEA000C131C5B13301370A25BA21201A2485AA41207A76C5A131F7E9D17
>I<EA03F0EA0FFCEA1E1EEA380FEB0780EA7003A21278A2EA7E07387F0F00EA3FCE13FC
6C5A6C7E7F487E383C7F80EA783F38700FC0EAF007EAE0031301A300F01380EA70033878
0700EA3E1FEA1FFCEA07F0121F7E9D17>I<EA03F0EA0FFCEA1E1E487E487E148012F013
03A214C0A5EA70071278130FEA3C1FEA1FFBEA0FF3EA0183380003801307A2007C13005B
131E5BEA7878EA3FF0EA0FC0121F7E9D17>I<127012F8A312701200AA127012F8A31270
05147C930D>I<127012F8A312701200AA127012F8A312781218A312381230A2127012E0
1260051D7C930D>I<B612FCA2C9FCA8B612FCA21E0C7E9023>61
D<EA0FF0EA3FFCEA783EEA701FEAF80FA4EA701FEA003E137C137813F013E0EA01C0A213
80A6C7FCA5EA0380EA07C0A3EA038010207E9F15>63 D<EB0380A3497EA3497EA3EB19F0
A3EB30F8A3EB607CA3497EA348B5FCA2EB801F3903000F80A30006EB07C0A2001F14E039
FFC03FFEA21F207F9F22>65 D<B512E014F8380F803E141E141FEC0F80A515005C143E5C
EBFFF880EB801FEC0F80EC07C0140315E0A5EC07C0A2EC0F80EC3F00B512FE14F81B1F7E
9E20>I<90380FF030EB7FFC3901FC1E703903E007F03807C003380F800148C7FC123E15
705A1530A25A1500A8007C1430A36C147015606C14E06C6C13C03807C0013903E0078039
01FC1F0038007FFCEB0FF01C217E9F21>I<B512F814FE3907C01F80EC07C0EC01E0EC00
F0A21578A2157C153CA2153EA8153CA2157C157815F815F0EC01E0EC07C0EC1F80B5EAFE
0014F81F1F7F9E23>I<B61280A2380F800F1403A2140115C01400A214C0A21500A21381
13FFA213811380A21560A2140015C0A31401A21403EC0F80B6FCA21B1F7E9E1F>I<B612
80A23807C00F14031401A215C01400A21460A21500A214E013FFA213C01460A491C7FCA8
B5FCA21A1F7F9E1E>I<90380FF030EB7FFC3901FC1E703903E007F03807C003380F8001
48C7FC123E15705A1530A25A1500A6EC7FFEA2007CEB01F0A37EA27EEA0F803807C00338
03F0073901FC1F7039007FFC3090380FF0001F217E9F24>I<39FFF8FFF8A2390F800F80
AC90B5FCA2EB800FAD39FFF8FFF8A21D1F7E9E22>I<EAFFF8A2EA0F80B3A9EAFFF8A20D
1F7F9E10>I<3807FFE0A238001F00B3A3127812FCA3133E12F8EA78FCEA3FF8EA0FE013
20809E17>I<39FFF81FFCA2390F8007E01580EC0F00141E5C5C5C5CEB81C0EB83801387
EB8FC0139FEBBFE0EBF3F013E3EBC1F81381EB80FC147EA280EC1F80A2EC0FC0A215E039
FFF83FFEA21F1F7E9E23>I<EAFFFCA2EA0F80B11406A4140EA2140C141C143C14FCB5FC
A2171F7E9E1C>I<D8FFC0EB0FFE6D131F000715C0A2D806F01337A301781367A36D13C7
A390381E0187A290380F0307A3EB0786A3EB03CCA3EB01F8A3EB00F0120FD8FFF0EBFFFE
1460271F7F9E2A>I<39FFC01FF8A2390FE003C09038F00180A2EA0DF8A2EA0CFC137EA2
133FEB1F81A2EB0FC1130714E1EB03F1A2EB01F9EB00FDA2147F143FA2141F140FA21407
121E38FFC00314011D1F7E9E22>I<EB1FE0EB7FF83801F03E3803C00F3907800780390F
0003C0001EEB01E0003E14F0003C1300007C14F8A20078147800F8147CA9007C14F8A300
3C14F0003E1301001E14E06CEB03C039078007803903C00F003801F03E38007FF8EB1FE0
1E217E9F23>I<B512E014F8380F803E80EC0F80140715C0A51580140FEC1F00143EEBFF
F814E00180C7FCACEAFFF8A21A1F7E9E1F>I<B57E14F0380F807C8080801580A415005C
143E5CEBFFF0A2EB81F8EB80FC147E143EA7150CA2141FD8FFF8139CEC0FF8C7EA03F01E
207E9E21>82 D<3803F0C0EA0FFCEA3E1FEA3C07EA7803EA700112F01300A27E14007E12
7F13F0EA3FFEEBFF806C13C0120738007FE0130FEB03F01301A2EAC000A37EEB01E012F0
38F803C038FF078038CFFF00EAC1FC14217E9F19>I<007FB512E0A2387C0F8100701380
00601460A200E0147000C01430A400001400B23803FFFEA21C1F7E9E21>I<39FFF807FE
A2390FC001F090388000E06C6C13C0A33903E00180A213F00001EB0300A26D5A00001306
A2EBFC0EEB7C0CA26D5AA36D5AA214B0EB0FE0A36D5AA26D5AA31F207F9E22>86
D<3BFFF8FFF83FF0A23B1F800FC007C0000F9138800300EC07C001C05C00071506EC0FE0
01E0140E0003150CEC1FF01419D801F05CA2EC30F8D800F85CA2EC607C017C5CA2ECC03E
017E14E0013E5C013F133FEC801F011F5CA2EC000F6D91C7FCA2010E7F010613062C207F
9E2F>I<397FFC3FF8A23907E00FC000031400EBF00E0001130C6D5A3800FC38EB7C30EB
7E70EB3F606D5AA26D5A806D7EA2497E130DEB19F8EB38FCEB307CEB607EEBE03E497ED8
018013800003130F000714C0D80FC013E039FFE03FFEA21F1F7F9E22>I<387FFFFEA2EB
007E007C13FC387801F81270EB03F0386007E0A2EB0FC0A238001F80EB3F00A2137E137C
13FC485A1406EA03F0EA07E0A2380FC00EA2381F800C383F001CA2007E133C4813FCB5FC
A2171F7E9E1C>90 D<12FFA212C0B3B3A512FFA2082D7CA10D>I<EA180CEA3C1EEA381C
EA7038EA6030EAE070EAC060A3EAF87CEAFC7EA2EA7C3EEA381C0F0E7A9F17>I<12FFA2
1203B3B3A512FFA2082D80A10D>I<EA1FF0EA7FFCEA7C7E131E7F12381200A2EA07FF12
1FEA3F0F127C12F800F01330A2131F12F8387C7FF0383FF7E0381FC3C014147E9317>97
D<121E12FEA2121EA9133F381FFFC0EBC3E0EB00F0001E1378A2143CA81478121F14F0EB
C3E0381DFFC038187F0016207F9F19>I<EA03FCEA0FFFEA1F1F123C1278130E00F8C7FC
5AA67E1278387C0180EA3E03381F8700EA0FFEEA03F811147F9314>I<EB01E0130FA213
01A9EA03F9EA0FFFEA1F0FEA3C03EA7801A212F0A812781303EA3C07EA1F0F380FFDFCEA
03F116207F9F19>I<EA03F0EA0FFCEA1E1E487E487E148012F01303B5FCA200F0C7FCA3
7E1278387C0180EA3E03381F0700EA0FFEEA03F811147F9314>I<137E48B4FC3803EF80
EA07CFEA0F8F130F90C7FCA6EAFFF0A2000FC7FCB0EA7FF0A21120809F0E>I<EB01E038
07F7F0381FFF70383E3EF0383C1E7038780F00A5EA3C1EEA3E3EEA3FFCEA37F00070C7FC
A21278EA7FFE383FFF8014E0A2387803F0EAF000481370A36C13F0387801E0383E07C038
1FFF803803FC00141F7F9417>I<121E12FEA2121EA9133FEBFFC0EA1FC3EB83E01301A2
121EAC38FFC7FCA216207F9F19>I<121C123EA3121CC7FCA6121E12FEA2121EAFEAFFC0
A20A1F7F9E0D>I<137013F8A313701300A61378EA07F8A212001378B3127012F813F012
F9EA7FE0EA3F800D28839E0E>I<121E12FEA2121EA9EB1FF0A2EB0F801400131E5B5B5B
EA1FF8A27F137CEA1E3E133F7FEB0F80A2EB07C038FFCFF8A215207F9F18>I<121E12FE
A2121EB3A9EAFFC0A20A207F9F0D>I<391E3F81FC39FEFFE7FF39FFE3EF1F3A1F81FC0F
80903800F807A2001E13F0AC3AFFC7FE3FF0A224147F9327>I<EA1E3F38FEFFC0EAFFC3
381F83E01301A2121EAC38FFC7FCA216147F9319>I<EA01F8EA07FE381E0780383C03C0
EA3801387000E0A200F013F0A6007013E0EA7801003813C0EA3C03381E07803807FE00EA
01F814147F9317>I<EA1E3FB512C0EBC3E0381F01F0381E00F81478147C143CA6147C14
78001F13F8EB01F0EBC3E0EBFFC0381E7F0090C7FCA7EAFFC0A2161D7F9319>I<3803F8
60380FFCE0EA1F0EEA3E07EA7C03EA780112F812F0A612F81278EA7C03EA3E07EA1F0FEA
0FFDEA03F1EA0001A7EB0FFCA2161D7F9318>I<EA1EF8EAFFFE13BEEA1F3EA2EA1E1C13
00ACEAFFE0A20F147F9312>I<EA0FD8EA3FF8EA7878EAF038EAE01812F0EAF800EAFF80
EA7FF013F8EA1FFCEA03FEEA003EEAC01E130E12E0EAF01EEAF83CEAFFF8EACFE00F147F
9312>I<1206A4120EA2121E123EEAFFF8A2EA1E00AA130CA4EA1F1CEA0F1813F8EA03E0
0E1C7F9B12>I<381E01E0EAFE0FA2EA1E01AC13031307EA1F0F380FFDFCEA03F916147F
9319>I<38FFC7F8A2381F01E014C0000F1380A238078300A3EA03C6A3EA01ECA213FC6C
5AA21370A315147F9318>I<39FF9FF3FCA2391E07C0F0010313E0121FD80F0713C014E0
EB87E1D8078C138014F1EBCCF33903D87300147BEBF87F3801F03EA33800E01CA31E147F
9321>I<387FE7FCA2380F83E0000713803803C30013E7EA01EEEA00FC1378A27F137E13
FEEA01CFEB87801203380703C0001F13E038FF87FEA21714809318>I<38FFC7F8A2381F
01E014C0000F1380A238078300A3EA03C6A3EA01ECA213FC6C5AA21370A31360A3EA70C0
12F8EAC18012E3007FC7FC123C151D7F9318>I<EA7FFFA2EA781FEA703EEA607C13FC13
F8EA61F0120313E0EA07C0EA0FC31383EA1F03EA3F07EA3E06127CEAF81EEAFFFEA21014
7F9314>I<B812F0A22C02808C2D>124 D E /Fo 47 121 df<123E127FEAFF80A213C0A3
127F123F1201A212031380A21207EA0F00A2121E5A127C12300A157BA913>39
D<130F131F133E137C13F8EA01F0A2EA03E0120713C0120F1380121F1300A25AA2123E12
7EA4127C12FCAE127C127EA4123E123FA27EA21380120F13C0120713E01203EA01F0A2EA
00F8137C133E131F130F103C7BAC1A>I<12F07E127C7E7EEA0F80A2EA07C013E0120313
F0120113F81200A213FCA2137C137EA4133E133FAE133E137EA4137C13FCA213F8A21201
13F0120313E0120713C0EA0F80A2EA1F00123E5A5A5A103C7CAC1A>I<B51280A611067F
9016>45 D<130E131E137EEA07FE12FFA212F81200B3ABB512FEA317277BA622>49
D<EBFFC0000713F8001F7F383F07FFD87E011380B47E9038807FC0143F15E0A2141FEA7F
00003E133FC7FCA215C0147F1580ECFF00495A495A5CEB07E0495A495A013EC7FC4913E0
5B485A3903E001C0EA07C0EA0F0048B5FC5A5AB6FC1580A31B277DA622>I<EBFFC00003
13F8000F7FEBC1FE381F80FF486C1380147FA213E013C014FF6C481300C7FC495A1303EB
0FF8EBFFF014C014F8EB03FEEB00FFEC7F8015C0143F15E0A2123E127FEAFF80A315C014
7F01001380007E13FFD83F831300381FFFFC00075BC613C01B277DA622>I<140F5C5C5C
A25C5B5BEB07BFEB0F3FA2131E133C137813F0A2EA01E0EA03C0EA0780EA0F00120E121E
5A5A5AB612F8A3C7EA7F00A890381FFFF8A31D277EA622>I<00181303381F803F90B5FC
A25C14F85C14C091C7FC001CC8FCA6EB7FE0381DFFF8001F13FEEBC0FF391E007F80001C
133FC7EA1FC0A215E0A2121C127EB4FCA415C048133F007C1480EC7F00383F81FE6CB45A
000713F0C613801B277DA622>I<EB0FF8EB3FFE90B5FC3903FE0F80EA07F0390FE01FC0
EBC03F121FEA3F80A2007FEB1F809038000F0091C7FCA238FF0FF0EB3FFC497EEBF0FF90
38E03F809038C01FC01380A215E01300A47EA46C14C01380001FEB3F8013C0390FF0FF00
6CB45A000113F838007FE01B277DA622>I<1238123E003FB512F0A34814E015C01580A2
3970000F00141E5C485B147014F0C6485A495A495AA2130F91C7FC5B5BA3137EA213FEA4
1201A86C5A13781C297CA822>I<EB7FC03801FFF800077F380FC0FE381F803F9038001F
80123E140FA2123F1380EBE01F01F813006D5A381FFF7E5C6C5B7E6C13FE80000F1480EA
1F9FD83F0713C0EA7E01D87C0013E000FC133F48130F1407A21403A26C14C0007C130712
7E6CEB1F809038C07F00380FFFFE6C13F8C613C01B277DA622>I<EB7FC03803FFF04813
FC381FE0FE383FC07F497ED87F001380141F4814C0A415E0A4143F7EA2147F383F80FFEA
1FE1380FFFDF6C139F3801FE1FC713C0A2121E123F397F803F80A215005CEB00FE383E01
FC383F07F86CB45A6C13C0D803FEC7FC1B277DA622>I<EC0780A24A7EA34A7EA24A7EA3
EC77F8A2ECF7FC14E3A2903801C1FEA201037F1480A249486C7EA24980010E133FA2496D
7EA2013FB57EA39039700007F8A201F080491303000181491301A2000381D8FFFE013F13
FCA32E297EA833>65 D<B612F815FF16C03A03F8003FE0ED0FF016F8150716FCA21503A2
1507A216F8A2ED0FF0151FED7FC090B61280EDFE00EDFFC09039F8001FF0ED07F8ED03FC
16FE1501A216FFA616FE150316FC1507ED1FF8B712E016C0EDFE0028297DA830>I<9138
7FF003903907FFFE07011FEBFF9F90397FF80FFF3901FF80034848C7FC4848147F484814
3F4848141F5B003F150F5B127F1607A248481400AB6C7E1607A2123F6D140F001F150E6D
141E6C7E6C6C143C6C6C14F83A01FF8001F03A007FF80FE0011FB512800107EBFE009038
007FF028297CA831>I<B712E0A33903FC001FED07F01501A215001670A3913801C07816
38A302031300A2140F90B5FCA3EBFC0F1403A20201130EA3161C91C7FCA3163C16381678
16F815011503151FB712F0A327297EA82C>69 D<B712C0A33903FC003FED0FE015031501
A21500A316F0913801C070A316001403A2140F90B5FCA3EBFC0F1403A21401A491C8FCA9
B512FCA324297EA82A>I<B5D8F00FB5FCA3D803FCC7EA3FC0AF90B7FCA301FCC7123FB1
B5D8F00FB5FCA330297EA835>72 D<B512F0A33803FC00B3B1B512F0A314297EA819>I<
D8FFFE92383FFF80A26D5D0003EFE000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB038F
A3D987F0EB070FA2D983F8130EA2D981FC131CA3D980FE1338A2027F1370A291383F80E0
A391381FC1C0A291380FE380A2913807F700A3EC03FEA26E5AA26E5AD8FFFE0203B51280
A2157039297DA840>77 D<B612F815FF16C03A03FC003FE0ED0FF0ED07F816FC150316FE
A716FC150716F8ED0FF0ED3FE090B612C0160015F801FCC8FCAFB512F0A327297EA82E>
80 D<B612E015FE6F7E3A03FC007FE0ED0FF06F7E82150382A65E15075E4B5AED7FE090
B612804BC7FCA29039FC00FF806F7EED1FE0A26F7EA482A4170E16FCA2923807FE3EB539
F003FFFC6F13F89238003FF02F297EA832>82 D<9038FF80600007EBF0E04813FD381FC0
FF383F001F007E130F1407007C130300FC1301A36C13007E6D13007FEA7FFEEBFFE014FC
6C7F6C7F6C1480000314C0C614E0130F1300EC1FF0140F140712E01403A27EA26C14E014
0700FE14C06C130F9038E03F8000F7B5120000E113FC38C03FF01C297CA825>I<007FB7
1280A39039807F807FD87C00140F00781507A20070150300F016C0A2481501A5C791C7FC
B3A490B612C0A32A287EA72F>I<B500F0EBFFFEA3D803FCC7EA0380B3A916076C6C1500
A200005D6D141E6D6C5B6D6C13F890391FF807F00107B55A010114809026001FFCC7FC2F
297EA834>I<B53CE07FFFE01FFFC0A32803FC0003FCC7EA7000A26D6D7E000160A26D6E
13016C604B138002801503017F5F4B13C0D93FC0013F49C7FCA2913AE00E1FE00F011F16
0E17F09126F01C0F131E010F161C033C13F8902707F838075BA2037813FC902703FC7003
5BA2913AFEE001FEF001015E02FF14FF4B7E6D5EA26E486D5AA36EC76CC8FCA2023E8002
1E141EA242297FA845>87 D<3803FFC0000F13F8487F383FC1FEEBC0FF80EC3F80A2EA1F
80C7FCA2EB07FF90B5FC1207381FF83FEA3FC0EA7F80EAFF005AA36C137F14FFD87FC313
C0393FFFDFFC6C130F3807FC071E1B7E9A21>97 D<EB3FF03801FFFC00077F380FF0FF48
5A485A5B127FEB007E4890C7FCA96C7EA2393FC003801407391FE00F00380FF81F3807FF
FE000113F838003FE0191B7E9A1E>99 D<EC7FF0A31407ACEB7F873803FFF74813FF381F
F07FEBE01F383FC00F387F8007A213005AA97EA21380003F130FEBC01F381FF07F6CB6FC
000313E7C61387202A7EA925>I<EB7FC03801FFF800077F380FF0FE381FC07F393F803F
80141F127F010013C05A140F90B5FCA390C8FCA46C7EA2003FEB01C0EBC003391FE00780
380FFC1F6CB51200000113FC38003FF01A1B7E9A1F>I<EB03FEEB1FFF137F3901FF7F80
EA03FC13F8120713F0EC3F0091C7FCA6B512C0A3D807F0C7FCB3A3387FFF80A3192A7EA9
15>I<9038FF81F80007EBFFFC5A381FC1FC393F80FE7C9038007E7848EB7F00A66C137E
EB80FE381FC1FCEBFFF85C0038138090C8FCA2123C123E383FFFFCECFF806C14C015E015
F05A397F000FF800FE1303481301A36C1303007E14F0387F800F393FE03FE06CB512C000
071400C613F81E287E9A22>I<EAFFE0A3120FAC14FF01E313C001E713E0EBEF1F9038FC
0FF0EBF80713F0A313E0AF39FFFE3FFFA3202A7DA925>I<EA0F80EA1FC0EA3FE0A5EA1F
C0EA0F80C7FCA7EAFFE0A3120FB3A3EAFFFEA30F2B7EAA12>I<EAFFE0A3120FACEC1FFC
A3EC07C0EC0F80EC1E00147C5CEBE1F0EBE3E013E713EFEBFFF080EBFBFC13F1EBE1FEEB
C0FFEC7F80143F15C0EC1FE0EC0FF0140739FFFC1FFFA3202A7FA923>107
D<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>I<3BFFC0FF803FE001C39038E0FFF801C7
01F17F3A0FCF0FF3C3903ADC07FF01FE9039F803FE00A201F05BA201E05BAF3CFFFE3FFF
8FFFE0A3331B7D9A38>I<38FFC0FF01C313C001C713E0380FCF1F9038DC0FF0EBF80713
F0A313E0AF39FFFE3FFFA3201B7D9A25>I<EB3FE03801FFFC487F390FF07F80391FC01F
C0393F800FE0A2397F0007F0A34814F8A86C14F0A2393F800FE0A2391FC01FC0390FF07F
806CB51200000113FC38003FE01D1B7E9A22>I<38FFE1FF01E713C090B512F0390FFE1F
F89038F807FCEBF00301E013FE1401A2EC00FFA9EC01FEA2140301F013FC9038F807F890
38FE1FF090B512E001EF13C09038E1FE0001E0C7FCA9EAFFFEA320277E9A25>I<38FFC7
F0EBCFFCEBDFFE380FDEFF13F8A25BA2147EEBE000AFB5FCA3181B7F9A1B>114
D<3803FE70381FFFF05AEA7E03EA7C01EAF80014707E6C1300EAFFE013FF6C13C06C13E0
6C13F06C13F8000113FCEA000F1301EAE0006C137CA27E6C13F8EAFF03EBFFF000F713E0
00C11300161B7E9A1B>I<13E0A41201A312031207120F121FB512E0A3380FE000AD1470
A6EBF0F03807F9E0EBFFC06C1380C6130014267FA51A>I<39FFE07FF0A3000F1307B114
0FA2141F3807F07F9038FFF7FF6C13E7C61387201B7D9A25>I<3BFFFC7FFC1FFCA33B0F
E00FE001C02607F007EB0380A201F8EBF00700031600EC0FF801FC5C0001150EEC1FFC26
00FE1C5B15FE9039FF387E3C017F1438EC787F6D486C5A16F0ECE01F011F5CA26D486C5A
A2EC800701075CA22E1B7F9A31>119 D<39FFFC1FFEA33907F003803803F8079038FC0F
003801FE1E00005BEB7F3814F86D5A6D5A130F806D7E130F497EEB3CFEEB38FFEB787F90
38F03F803901E01FC0D803C013E0EB800F39FFF03FFFA3201B7F9A23>I
E /Fp 37 123 df<133F3801FF803803C3C0EA0783EA0F03120E90C7FCA5B512C0A2EA0E
01AE387F87F8A2151D809C17>12 D<127012F8A312781218A31238123012701260A2050D
7D840C>44 D<EAFFE0A30B0380890E>I<127012F8A3127005057D840C>I<90383FC180EB
FFF13803F07B3807C01F380F800F381F0007123E14035A1401127812F891C7FCA70078EB
0180127CA26C130315006C5B380F800E3807C01E3803F87C3800FFF0EB3FC0191E7E9C1E
>67 D<B512F8A2380F007814381418141C140CA21303A21400A25B13FFA213077FA490C7
FCA6EAFFF8A2161C7E9B1B>70 D<EAFFF0A2EA0F00B3A6EAFFF0A20C1C7F9B0F>73
D<EAFFF8A2000FC7FCAF1418A414381430147014F01301B5FCA2151C7E9B1A>76
D<B46CEBFF806D5A000FECF800A2390DE00378A3380CF006A3EB780CA3EB3C18A3EB1E30
A3EB0F60A3EB07C0A3381E03803AFFC387FF80A2211C7E9B26>I<EB3F80EBFFE03803E0
F83807803C48487E001E7F003E1480003C1307007C14C0A20078130300F814E0A8007814
C0007C1307A2003C1480003E130F001E14006C131E6C6C5A3803E0F83800FFE0EB3F801B
1E7E9C20>79 D<B5128014E0380F01F0EB0078143C143EA6143C1478EB01F0EBFFE01480
90C7FCAAEAFFF0A2171C7E9B1C>I<3807F180EA1FFFEA3C3FEA780FEA7007EAE003A213
01A26CC7FC7E127EEA7FE0EA3FFC6C7E6C7EC61380130FEB07C01303A2EAC001A312E038
F00380EAF80738FE0F00EAFFFEEAC3F8121E7E9C17>83 D<007FB512C0A238780F030070
13010060130000E014E000C01460A400001400B03803FFFCA21B1C7F9B1E>I<3AFFE1FF
C1FFA23A1F003E007C6C011E13381630A2D9803F137000071560A25C3A03C06780C0A33A
01E0C3C180A33A00F181E300A39038FB00F7017B13F6A2017F13FE013E137CA3011C1338
A3281D7F9B2B>87 D<EA1FE0EA3FF8EA3C3C7FEA180E1200131EEA07FE123FEA7E0E12F8
A200F01360A2EAF81EEA7C7E387FFFC0381FC78013127F9115>97
D<12FCA2121CA913FE381FFF80EB87C0381E03E0EA1C01EB00F0A7EB01E0121EEB03C0EA
1F87381BFF803818FE00141D7F9C17>I<EA07FCEA1FFEEA3E1E123CEA780C13005AA612
781306EA3C0EEA3F1CEA1FF8EA07F00F127F9112>I<EB1F80A21303A9EA07F3EA1FFFEA
3E1FEA7C07EA780312F812F0A7EA7807EA7C0FEA3E1F381FFBF0EA07E3141D7F9C17>I<
EA07E0EA1FF8EA3E7CEA781C131E12F0EAFFFEA2EAF000A412781306EA3C0EEA3F1CEA1F
F8EA07F00F127F9112>I<13FCEA03FEEA079E131E120FEA0E00A6EAFFE0A2EA0E00AEEA
7FE0A20F1D809C0D>I<EB07803807EFC0EA1FFFEA3C3D38781E00A66C5AEA3FF8EA37E0
0070C7FCA21278EA3FFC13FF481380387807C0EAF003EAE001A2EAF003EAF807387C0F80
381FFE00EA07F8121C7F9215>I<12FCA2121CA913FEEA1DFF381F8F801307EA1E03121C
AB38FF9FF0A2141D7F9C17>I<1238127CA31238C7FCA612FCA2121CAEEAFF80A2091D7F
9C0C>I<12FCA2121CB3A7EAFF80A2091D7F9C0C>108 D<39FC7F07F039FDFF9FF8391F87
F87C903803F03C391E01E01C001C13C0AB3AFF8FF8FF80A221127F9124>I<EAFCFEEAFD
FF381F8F801307EA1E03121CAB38FF9FF0A214127F9117>I<EA03F0EA0FFCEA1E1EEA38
0700781380EA700300F013C0A600701380EA780700381300EA1E1EEA0FFCEA03F012127F
9115>I<EAFCFEB51280381F87C0381E03E0EA1C0114F01300A6EB01E0121EEB03C0EA1F
8FEBFF80381CFE0090C7FCA6B47EA2141A7F9117>I<EAFDF0EAFFF8EA1F78121E1330EA
1C00ABEAFFC0A20D127F9110>114 D<EA1FB0EA7FF012F0EAE070133012F0EAF800EA7F
C0EA3FE0EA1FF0EA01F8EAC078133812E0EAF078EAF8F012FFEACFC00D127F9110>I<12
0CA5121CA2123CEAFFE0A2EA1C00A81330A5EA1E70EA0FE0EA07C00C1A7F9910>I<38FC
1F80A2EA1C03AB1307A2EA1E1F380FFFF0EA07F314127F9117>I<38FF0FE0A2381C0780
1400EA0E06A36C5AA3EA0398A213F86C5AA26C5AA313127F9116>I<39FF3FCFE0A2393C
0F0780001CEB0300131B1487000E1386133B1331000713CCA213603803E0F8A2EBC078A2
00011370A21B127F911E>I<387F8FF0A2380F078000071300EA038EEA01DC13D8EA00F0
1370137813F8EA01DCEA038E130E487E001F138038FF0FF8A21512809116>I<38FF0FE0
A2381C07801400EA0E06A36C5AA3EA0398A213F86C5AA26C5AA35BA3EAF18012F300C7C7
FC127E123C131A7F9116>I<EA7FFCA2EA783CEA7078EA60F0EA61E0A2EA63C0EA078013
8CEA0F0C121E131CEA3C181278EAF078EAFFF8A20E127F9112>I
E /Fq 7 117 df<EB0380497EA2497EA3497EA2497E1339A2EB79FC1370EBF0FEEBE07E
A20001137F497E90B5FC481480A23907801FC0EB000FA2000EEB07E039FFC03FFEA31F1C
7E9B24>65 D<EA07FCEA1FFF383F1F80EB0FC01307A2121EEA03FF121FEA7F87130712FE
12FCA2EAFE0F387E1FF8EA3FFBEA0FE115127F9117>97 D<B4FCA3121FA8EB3FC0EBFFF0
EBE1F8EB80FCEB007C147EA814FC1380EBE1F8381EFFF0381C3FC0171D7F9C1B>I<EA07
FCEA1FFEEA3F3F127E127C12FC131E90C7FCA6387E0380EA7F07383F8F00EA1FFEEA07F8
11127E9115>I<EAFE7E13FF38FFDF80EA1F9FA2131FEB0F0090C7FCA8EAFFE0A311127F
9114>114 D<EA1FF8127FEA7078EAE038A2EAF800EAFF8013F0EA7FF8123FEA0FFCEA00
7CEAE03CEAF01CA2EAF878EAFFF8EAEFE00E127E9113>I<1207A45AA35AEA3FFC12FFA2
EA1F00A8131CA413BCEA0FF8EA07F00E1A7F9913>I E /Fr 17 122
df<123C127E127FA3123F120FA2121E123E12FC12F812E0080D77851A>44
D<B512E0A413047D901A>I<127812FCA41278060676851A>I<137E3801FF80000713C038
0FC3E0381F81F0EA3F1FEA3E7F387CFFF8EA7DFBEA79F1EAF9E012FB38F3C078A638FBE0
F800F913F0EA79F1EA7DFB387CFFE0383E7FC0383F1F00381F8078380FC1F8EA07FF0001
13E038007F80151E7E9D1A>64 D<EA0FF8EA3FFF1480383E0FC0EB03E0121CEA0001137F
EA07FF121FEA7FE1EA7E0112F8A212F012F81303EA7E0F387FFFFE121F3807F87E17157E
941A>97 D<3801FF80000713E05AEA3F83EA3E03387C01C00078C7FC12F85AA57E127800
7C13F0EA3E01EA3F83380FFFE06C13C00001130014157D941A>99
D<EB1FE0A31301A6EA01F9EA0FFF5AEA3F0FEA7E07EA7C03EAF801A212F0A512F81303EA
7C07127EEA3F1F381FFFFEEA0FFDEA03F1171E7E9D1A>I<EA01FCEA07FF001F1380383F
0FC0387E03E0EA7C0100F813F0A2EAF000B5FCA300F0C7FC7E1278007C13F0EA3E01EA3F
83380FFFE06C13C00001130014157D941A>I<B4FCA3120FA6EB1FC0EB7FF013FFEBF0F8
13C0147813801300AB39FFF3FF80A3191E809D1A>104 D<13E0487EA36C5A90C7FCA5EA
7FF0A31200AFB512E0A3131F7D9E1A>I<B4FCA3120FA6EB3FFCA3EB07E0EB0FC0EB1F80
EB3F00137E5B7FA27FEBDF80138FEB0FC0EB07E0EB03F0130138FFE3FEA3171E7F9D1A>
107 D<38FE7C3E38FFFEFF90B51280381FDFEFEB8FC7EB0F87A2001E1307AB39FFDFEFF0
A31C1581941A>109 D<38FF1FC0EB7FF013FF380FF0F813C0147813801300AB39FFF3FF
80A3191580941A>I<380FFB80EA3FFF5AEAF81FEAF00FEAE00712F000FCC7FCEA7FF0EA
3FFE6C7E0001138038000FC0EAF003130112F8EAFC03EAFE0FB512801400EAE7F812157C
941A>115 D<EA03C0A7B512E0A33803C000AA14F0A313E113E33801FFE06C13C0EB3F00
141C7F9B1A>I<38FF07F8A3380F0078AC14F8130113836CB51280A23801FE7F19158094
1A>I<38FFC7FEA3380F01E0A21381EA078314C013C31203EBC780120113E714001200A2
13EF137EA3133CA2137C1378A21210EA7CF0A2EA7BE0EA7FC06C5A001EC7FC17207F941A
>121 D E /Fs 2 104 df<EB0FC0133FEBFE0013F8485A5BAF1203485A485AB4C7FC12FC
B4FCEA0F806C7E6C7E1201AF7F6C7E13FEEB3FC0130F12317DA419>102
D<12FCB4FCEA1FC012076C7E1201AF7F6C7E137CEB3FC0130F133FEB7C005B485A5BAF12
03485A121FB4C7FC12FC12317DA419>I E /Ft 2 122 df<1207A3EAE738EAFFF8EA7FF0
EA1FC0A2EA7FF0EAFFF8EAE738EA0700A30D0E7E8E12>3 D<120EA8EAFFE0A3EA0E00B2
0B1D7E9610>121 D E /Fu 38 122 df<127012F812FCA2127C120CA3121C1218A21238
127012E01260060F7C840E>44 D<EAFFF8A30D03808B10>I<127012F8A3127005057C84
0E>I<EA01F0EA07FCEA0E0E487E38380380A2007813C0EA7001A300F013E0AE007013C0
A3EA780300381380A2381C0700EA0E0EEA07FCEA01F013227EA018>48
D<13C01201120712FF12FB1203B3A8B5FCA210217CA018>I<EA03F8EA0FFEEA1E1F3838
0F80387807C0127C127EA2127C123812001480130FEB1F00133EEA03FC5BEA001E7FEB07
8014C0EB03E0A2123012FCA438F807C0126038780F80383E1F00EA1FFEEA07F813227EA0
18>51 D<137E3801FF80EA07C3380F01C0EA0E07121E123C12380078C7FCA3EA7020EAF3
FCEAF7FF38FE0F80EAFC0738F803C0A2EB01E012F0A51270A2127814C0EA3803003C1380
EA1E07380F1F00EA07FEEA03F813227EA018>54 D<12601270387FFFE0A314C038600180
EAE00338C007001306130EC65A1318133813301370136013E0A21201A25B1203A41207A8
6C5A13237DA118>I<EA03F8EA0FFEEA1E1F383C0780EA3803007013C01301A21278A2EA
7E03387F0780383FCF0013FE6C5A120F6C7E487E381E7F80383C3FC0EA780F387007E0EA
F003EAE0011300A37E387001C01278383C0380381E0F00EA0FFEEA03F813227EA018>I<
EA03F8EA0FFCEA1F1EEA3C0700381380EA7803007013C012F01301A214E0A513031278A2
EA3C07EA3E0FEA1FFDEA07F9EA0081EB01C01303A2007C1380130714005BEA701EEA387C
EA1FF8EA0FE013227EA018>I<90380FF030EB7FFC9038FC1E703803F0073907C003F038
0F8001EA1F001400123E003C1470127CA215305AA21500A71530127CA36C147015606C14
E015C0380F80013907C003803903F007003800FC1EEB7FFCEB0FF01C247DA223>67
D<B512F814FF3907C00F80EC03C0EC01E0EC00F01578157C153C153E151EA3151FA9151E
A2153E153CA2157815F01401EC03E0EC0F80B6120014F820227FA125>I<3AFFFE1FFFC0
A23A07C000F800AD90B5FCA2EBC000AF3AFFFE1FFFC0A222227FA125>72
D<EAFFFEA2EA07C0B3ACEAFFFEA20F227FA112>I<3803FFF0A238000F80B3A5123012FC
A3131F00F81300EA703FEA7C7EEA3FF8EA0FE014237FA119>I<3AFFFE01FFC0A23A07C0
00FE00157815E04A5A4A5A4AC7FC140E5C5C5C5C13C113C3EBC7F0EBCFF813DDEBF8FCEB
F07CEBE07E497EA26E7E6E7EA26E7E6E7EA26E7EA215FE3AFFFE07FFC0A222227FA126>
I<3803F860EA0FFE381E1FE0EA3C07EA78031301EAF000A21460A27E14007E127EEA7FC0
13FC6CB4FC6C13806C13C0000113E0EA001F1307EB03F01301A2EAC000A37E14E0EAF001
12F838FC03C038FF078038C7FF00EAC1FC14247DA21B>83 D<3AFFFE03FFC0A23A07C000
3C001518B3A515386C6C133015706C6C1360000014E090387C03C090383E0F80D91FFEC7
FCEB03F822237FA125>85 D<EA1FF0EA7FFCEA7C3F130F1480EA38071200130FEA03FF12
0FEA3F07127C127812F800F01398A2130FEAF81F387C3FF8383FF3F0381FC1E015157E94
18>97 D<120FB4FCA2121F7EAAEB1F80EBFFE0EBE1F0EB8078EB003CA2141C141EA7143C
A2EB807C14F8EBE1F0380E7FE0380C3F8017237FA21B>I<EA03FE380FFF80EA1F0F123E
123C3878070090C7FC5AA7127814C0EA3C01383E0380EA1F87380FFE00EA03FC12157E94
16>I<EB01E0131FA213031301AAEA03F9EA0FFFEA1F0FEA3E03EA7C011278A212F0A712
7012781303EA3C07381F0FF0380FFDFEEA03F117237EA21B>I<EA01FCEA07FF381F0F80
383E03C0EA3C01007813E0A2B5FCA200F0C7FCA5127814606C13E0383E01C0EA1F833807
FF00EA01FC13157F9416>I<133FEBFF803803E7C0EA07C71387120F90C7FCA8EAFFF8A2
000FC7FCB1EAFFF0A2122380A20F>I<14F03803F3F8380FFFB8381E1F78383C0F383878
0780A6383C0F00EA1E1EEA3FFCEA33F00070C7FCA21278EA3FFF14C06C13E04813F03878
01F838F000785A1438A26C1378A2387C01F0383F07E0380FFF803803FE0015217F9518>
I<120FB4FCA2121F7EAAEB1F80EB7FE013E1EBC1F01380A21300AD38FFF3FFA218237FA2
1B>I<120E121FA3120EC7FCA8120F127FA2121F7EAFEAFFE0A20B2280A10D>I<120FB4FC
A2121F7EB3ABEAFFF0A20C2380A20D>108 D<390F1FC0FE3AFF7FF3FF809038F1F78F3A
1FC0FE07C0390F807C03A2EB0078AD3AFFF3FF9FFCA226157F9429>I<380F1F8038FF7F
E013E1381FC1F0EA0F80A21300AD38FFF3FFA218157F941B>I<EA01FCEA07FF380F0780
381C01C0383800E0007813F00070137000F01378A700701370007813F0003813E0381C01
C0380F07803807FF00EA01FC15157F9418>I<380F1F80B512E0EBE1F0380F80F8EB007C
143CA2141EA6143E143CA2EB807C14F8EBE3F0EB7FE0EB3F8090C7FCA8EAFFF0A2171F7F
941B>I<EA0F3EB5128013EFEA1FCFEA0F8FEB870090C7FCADEAFFF8A21115809413>114
D<EA1FD8EA3FF8EA7878EAF038EAE018A2EAF00012FCEAFFC0EA7FF0EA3FF8120FEA00FC
EAC03C131C12E0A2EAF03CEAF878EAFFF0EACFE00E157E9413>I<1206A5120EA3121E12
3EEAFFFCA2EA1E00AA130CA5EA1F1CEA0F3813F8EA03E00E1F7F9E13>I<000F13F0EAFF
0FA2EA1F01EA0F00AB1301A21303380787F8EBFEFFEA01FC18157F941B>I<38FFC1FEA2
381F00F86C13701460380780C0A33803C180A213E300011300A2EA00F6A3137CA31338A2
17157F941A>I<38FFC1FEA2381F00F86C13701460380780C0A33803C180A213E3000113
00A2EA00F6A3137CA31338A21330A21370136012F85B12F9EAFB80007FC7FC123E171F7F
941A>121 D E /Fv 21 120 df<B51280A311037F9016>45 D<14034A7EA34A7EA3EC1B
E0A3EC31F0A3EC60F8A2ECE0FCECC07CA20101137EEC803EA20103133F4A7EA201068015
0FA2496D7EA3496D7E011FB5FCA29039300001F0A201708001601300A201E08049147CA2
4848147E163EA2000381A200071680D81FC0EC3FC0D8FFF0903801FFFCA22E327EB132>
65 D<B612E015FC3907E0007F0003EC0F806F7EED01E06F7E1678167C82A282A2EE0F80
A217C0A21607A217E0AB17C0A3160F1780A3EE1F00A2163E5E167816F84B5AED07E0ED0F
800007027FC7FCB612FC15E02B317CB033>68 D<B512C0A2D807F0C8FC6C5AB3AA1660A4
16C0A41501A21503A21507ED0F80153F000714FFB7FCA223317DB029>76
D<B612E015FC3907E0007F0003EC0F80ED07C0ED03E0ED01F016F81500A216FCA616F8A2
150116F0ED03E0ED07C0ED0F80ED7F0090B512FC15E001E0C8FCB3A2487EB57EA226317D
B02D>80 D<90387F80603803FFF03907C0F8E0380F003C001E130F48130714035A14015A
1400A315607EA21500127C127E127FEA3FC0EA1FFCEBFFC06C13F8000313FEC67F011F13
80010113C09038001FE01407EC03F0140115F81400A200C01478A47EA215706C14F0A26C
EB01E07EB4EB03C039E7800F8039E3F01F0038C0FFFCEB1FF01D337CB125>83
D<EA03FF001F13C0383E03F0383F00F8147C143C143E001E131EC7FCA4EB03FE137F3803
FF1EEA07F0EA1FC0EA3F00127E127C12FC48140CA3143E6C137E127C397E01FF1C393F87
CFB8391FFF07F03903FC03C01E1F7D9E21>97 D<EB3FF0EBFFFE3803F01F3807C03FEA0F
80EA1F00123E141E4890C7FCA35AA9127CA36CEB0180003F13036C14006C6C5A3807E00E
3803F83C3800FFF8EB3FC0191F7E9E1D>99 D<EB3F803801FFF03803E1F83807807C4848
7E001E131E003E131F003C7F007C1480A2127800F81307B6FCA200F8C8FCA6127CA36CEB
018014036C14006C6C5A3807E00E3803F83C3800FFF8EB3FC0191F7E9E1D>101
D<EB03F0EB1FFCEB3E3EEB787E13F0EA01E0A20003133CEBC000ABB512C0A23803C000B3
A8487EEA7FFFA217327FB114>I<EC01F890387F07FC3901FFCF3C3807E3FC380F80F890
3800781848EB7C00001E133C003E133EA7001E133C001F137C6C1378EB80F8EBE3F0380D
FFC0D81C7FC7FC0018C8FC121CA3121FEBFFF86C13FF6C14C04814E0393E000FF0481301
00781300481478481438A46C147800701470007814F06CEB01E0001FEB07C0390FE03F80
3903FFFE0038007FF01E2F7E9F21>I<120FEA1F80A4EA0F00C7FCABEA0780127FA2120F
1207B3A6EA0FC0EAFFF8A20D307EAF12>105 D<EA078012FFA2120F1207B3B3A7EA0FC0
EAFFFCA20E327EB112>108 D<380781FE39FF87FF8090389E0FC0390FB803E03807F001
01E07F14005BA25BB3486C487E3AFFFC1FFF80A2211F7E9E25>110
D<EB1FC0EBFFF83801E03C3807800F390F000780001EEB03C0A248EB01E0A248EB00F0A3
00F814F8A8007814F0007C1301003C14E0A26CEB03C0A26CEB07803907C01F003801F07C
6CB45AEB1FC01D1F7E9E21>I<380781FE39FF87FFC090389F07E0390FB803F03907F000
F849137C49137E49133E153F81A21680150FA7151F1600A25D6D133E157E6D5B6D485A90
38B803F090389E0FE090388FFF80D981FEC7FC0180C8FCAB487EEAFFFCA2212D7E9E25>
I<380783F038FF8FF8EB9E7CEA0FB8EA07F013E014005BA35BB2487EEAFFFEA2161F7E9E
19>114 D<3803FE30380FFFF0EA3E07EA7801EA7000481370A214307EA26C1300127F13
F06CB4FC000F13C0000313E038003FF0EB03F8130000C0137C143C6C131CA37E6C1338A2
6C13F0EAEF0338C7FFC000C11300161F7E9E1A>I<13C0A51201A31203A21207120F121F
B512E0A23803C000B01430A714703801E06014E03800F9C013FFEB3F00142C7FAB19>I<
D8078013F000FF131FA2000F130100071300B21401A314033803C007140E3901F03CF83A
00FFF8FF80EB3FC0211F7E9E25>I<3BFFF07FF81FFCA23B1FC007E007F03B0F8003C003
C00007150102071480A2D803C09038E00300A2140CD801E0EBF006A2EC1870D800F0EB78
0CA2EC30380178EB3C18A2EC601C013CEB1E30A2ECC00E011EEB0F60A290381F800716E0
010F5CA2EC00036D5CA22E1F7F9E30>119 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 250 261 a Fv(A)21 b(Sp)r(ecial-Purp)r(ose)f(Language)h(for)h
(Picture-Dra)n(wing)638 388 y Fu(Sam)o(uel)16 b(Kamin)950
370 y Ft(\003)1016 388 y Fu(Da)o(vid)h(Hy)o(att)1283
370 y Ft(y)700 446 y Fu(Computer)g(Science)e(Dept.)496
504 y(Univ)o(ersit)o(y)h(of)h(Illinois)h(at)f(Urbana-Champaign)719
562 y(Urbana,)f(Illinois,)i(61801)627 678 y Fs(f)p Fr(s-kamin,d-h)o
(yat)o(t)p Fs(g)p Fr(@)o(uiu)o(c.e)o(du)813 779 y Fu(June)f(13,)f(1997)
869 997 y Fq(Abstract)176 1073 y Fp(Sp)q(ecial)k(purp)q(ose)i
(languages)e(are)h(t)o(ypically)e(c)o(haracterized)j(b)o(y)f(a)f(t)o
(yp)q(e)h(of)f(primitiv)o(e)e(data)i(and)114 1123 y(domain-sp)q
(eci\014c)14 b(op)q(erations)h(on)f(this)h(data.)21 b(One)15
b(approac)o(h)g(to)g(sp)q(ecial)g(purp)q(ose)h(language)d(design)i(is)
114 1172 y(to)c(em)o(b)q(ed)h(the)g(data)g(and)g(op)q(erations)g(of)f
(the)i(language)e(within)g(an)h(existing)f(functional)g(language.)17
b(The)114 1222 y(data)12 b(can)g(b)q(e)h(de\014ned)g(using)f(the)h(t)o
(yp)q(e)g(constructions)g(pro)o(vided)f(b)o(y)g(the)h(functional)e
(language,)h(and)g(the)114 1272 y(sp)q(ecial)g(purp)q(ose)i(language)d
(then)i(inherits)g(all)e(of)h(the)g(features)i(of)e(the)g(more)g
(general)g(language.)17 b(In)12 b(this)114 1322 y(pap)q(er)i(w)o(e)f
(outline)g(a)g(domain-sp)q(eci\014c)f(language,)g(FPIC,)h(for)g(the)h
(represen)o(tation)h(of)d(t)o(w)o(o-dimensional)114 1372
y(pictures.)31 b(The)18 b(primitiv)o(e)e(data)h(and)h(op)q(erations)g
(are)g(de\014ned)h(in)f(ML.)f(W)m(e)g(outline)h(the)g(op)q(erations)114
1422 y(pro)o(vided)12 b(b)o(y)h(the)g(language,)f(illustrate)h(the)g(p)
q(o)o(w)o(er)g(of)f(the)i(language)e(with)g(examples,)g(and)h(discuss)h
(the)114 1471 y(design)g(pro)q(cess.)0 1615 y Fo(1)67
b(In)n(tro)r(duction)0 1716 y Fn(FPIC)15 b(is)f(a)h(sp)q(ecial-purp)q
(ose)h(language)e(for)g(dra)o(wing)g(simple)g(pictures.)19
b(It)c(is)g(built)f(b)o(y)h(de\014ning)h(t)o(yp)q(es)f(and)0
1772 y(functions)i(in)f(the)h(functional)f(language)g(Standard)h(ML)g
([6)o(].)25 b(This)16 b(metho)q(d)g(of)h(construction)f(is)g(easy)h
(and)0 1829 y(results)d(in)h(a)g(language)f(with)h(man)o(y)f(useful)h
(features.)k(In)d(addition)e(to)h(b)q(eing)g(concise)g(for)g(small)e
(examples,)0 1885 y(FPIC)j(is)f(p)q(o)o(w)o(erful)g(enough)h(to)f(allo)
o(w)f(the)i(programmi)o(ng)d(of)i(large)g(programs)e(and)j(program)e
(libraries,)g(an)0 1942 y(area)h(in)g(whic)o(h)g(man)o(y)e(sp)q
(ecial-purp)q(ose)j(languages)f(are)f(w)o(eak.)71 1998
y(F)l(unctional)g(programmi)o(ng)e(has)j(b)q(een)i(c)o(haracterized)d
(in)h(man)o(y)f(w)o(a)o(ys.)19 b(our)c(view)g(is)f(that)h(it)f
(represen)o(ts)0 2055 y(an)22 b(approac)o(h)h(to)e(language)h(design.)
42 b(This)22 b(approac)o(h)g(holds)g(that)g(some)f(mathematical)e
(constructs|)0 2111 y(pro)q(ducts,)g(functions,)g(disjoin)o(t)f
(unions,)h(and)g(others|are)f(fundamen)o(tal)f(in)i(computing)e(and)i
(should)f(b)q(e)0 2168 y(w)o(ell)f(supp)q(orted)i(in)g(programm)o(ing)c
(languages.)29 b(This)18 b(supp)q(ort)h(means)e(allo)o(wing)f(the)j
(creation)e(of)h(\\\014rst-)0 2224 y(class")c(v)m(alues)i(of)f(eac)o(h)
g(t)o(yp)q(e,)h(that)e(is,)h(v)m(alues)g(not)g(sub)s(ject)h(to)e
(arbitrary)g(restirctiosn)g(based)h(on)h(the)f(t)o(yp)q(e.)0
2281 y(It)d(also)g(means)f(pro)o(viding)g(op)q(erations)h(appropriate)f
(to)h(those)g(t)o(yp)q(es)g(in)g(a)g(concise,)h(non-bureaucratic)f
(form.)71 2337 y(In)21 b(our)f(view,)i(this)e(approac)o(h)g(to)h
(language)f(design)g(is)h(p)q(erfectly)f(suited)h(to)f(the)h(design)g
(of)f(sp)q(ecial-)0 2393 y(purp)q(ose)15 b(languages.)k(These)c
(languages)f(are)g(usually)g(c)o(haracterized)g(b)o(y)h(a)f(t)o(yp)q(e)
h(of)f(\\primitiv)o(e)d(data,")j(and)0 2450 y(op)q(erations)i(on)h
(those)g(data,)f(sp)q(eci\014c)i(to)e(a)h(problem)f(domain.)23
b(These)18 b(data)e(can)h(b)q(e)h(incorp)q(orated)e(in)o(to)g(a)p
0 2489 768 2 v 51 2516 a Fm(\003)69 2532 y Fl(P)o(artially)g(supp)q
(orted)e(b)o(y)f(NSF)g(Gran)o(t)h(CCR)e(96{19655.)53
2563 y Fm(y)69 2579 y Fl(Curren)o(t)h(address:)18 b(Netscap)q(e)c(Comm)
o(unications)h(Corp.,)e(Moun)o(tain)i(View,)d(CA.)949
2708 y Fn(1)p eop
%%Page: 2 2
2 1 bop 0 79 a Fn(language)17 b(ha)o(ving)h(the)g(t)o(yp)q(e)h
(constructions)e(just)h(men)o(tioned.)28 b(In)19 b(fact,)f(they)g(can)g
(b)q(e)h(incorp)q(orated)f(in)o(to)0 136 y(an)c Fk(existing)f
Fn(functional)g(language;)h(the)g(t)o(yp)q(e)g(constructions)f(will)g
(apply)h(to)f(the)h(new)h(data,)e(and)h(the)g(en)o(tire)0
192 y(language)f(will)f(then)i(b)q(ecome)g(a)f(sp)q(ecial-purp)q(ose)h
(language,)f(with)g(its)g(man)o(y)f(other)h(features)h(included)g
(\\for)0 249 y(free.")71 305 y(The)22 b(principal)g(w)o(eakness)g(of)h
(man)o(y)e(sp)q(ecial-purp)q(ose)i(languages)e(is)h(that,)i(b)q(ey)o
(ond)f(a)f(concise)h(and)0 362 y(natural)11 b(syn)o(tax,)h(and)h
(e\016cien)o(t)f(implemen)o(tatio)o(n,)e(for)i(the)g(v)m(alues)h(and)g
(op)q(erations)e(sp)q(eci\014c)j(to)d(the)i(domain,)0
418 y(o)o(v)o(erarc)o(hing)j(language)i(structure)f(is)h(w)o(eak.)28
b(This)17 b(w)o(eakness)h(w)o(ould)f(b)q(e)i(v)o(ery)f(signi\014can)o
(tly)e(mitigated)f(if)0 474 y(sp)q(ecial-purp)q(ose)22
b(languages)e(w)o(ere)h(routinely)f(design|or)h(at)f(least)g(protot)o
(yp)q(ed|in)h(the)h(w)o(a)o(y)e(w)o(e)g(ha)o(v)o(e)0
531 y(outlined.)71 587 y(This)c(pap)q(er)i(is)f(a)g(case)g(study)h(of)e
(the)i(design)f(of)g(FPIC)g(according)g(to)f(this)h(philosoph)o(y)l(.)
26 b(W)l(e)17 b(describ)q(e)0 644 y(the)k(pro)q(cess)g(b)o(y)g(whic)o
(h)g(w)o(e)f(decided)i(what)f(the)g(primitiv)o(e)d(data)i(w)o(ere)h
(and)g(ho)o(w)f(they)h(should)g(b)q(eha)o(v)o(e,)0 700
y(then)d(describ)q(e)h(the)f(language)f(itself)g(with)g(n)o(umerous)g
(examples.)27 b(Our)19 b(emphasis)d(throughout)i(is)f(on)h(the)0
757 y(adv)m(an)o(tages)13 b(obtained)h(b)o(y)f(ha)o(ving)h(the)f
(functional)g(language)g(sup)q(erstructure)i(of)e(Standard)h(ML)g(as)f
(part)g(of)0 813 y(FPIC.)0 956 y Fo(2)67 b(Simple)24
b(FPIC)e(Examples)0 1058 y Fn(PIC)g([4)o(])f(is)g(a)h(language)e(for)h
(dra)o(wing)g(simple)f(pictures,)i(suc)o(h)g(as)f(trees)h(and)g(blo)q
(c)o(k)f(diagrams.)36 b(It)22 b(has)0 1114 y(primitiv)o(es)14
b(for)j(dra)o(wing)f(b)q(o)o(xes,)h(circles,)f(and)i(other)e(shap)q
(es,)i(with)e(or)h(without)f(lab)q(els,)g(and)i(for)e(dra)o(wing)0
1171 y(lines)c(and)h(arro)o(ws)f(b)q(et)o(w)o(een)h(them.)18
b(It)13 b(also)e(has)i(a)g(facilit)o(y)d(for)j(naming)e(p)q(oin)o(ts)h
(on)h(pictures,)f(to)h(b)q(e)g(used,)h(for)0 1227 y(example,)f(as)g
(the)h(endp)q(oin)o(ts)g(of)f(lines)h(and)f(arro)o(ws.)18
b(These)d(constructs)e(are)g(pro)o(vided)h(in)g(a)f(concise)h(syn)o
(tax,)0 1284 y(with)h(a)f(simple)g(language)g(structure)h(\(including)g
(lo)q(ops\))f(added)i(on.)71 1340 y(FPIC)11 b(w)o(as)g(inspired)h(b)o
(y)g(PIC.)f(Our)h(goal)f(w)o(as)g(to)g(demonstrate)f(that)h(w)o(e)h
(could)g(b)q(ene\014t)h(b)o(y)e(follo)o(wing)f(the)0
1397 y(language)16 b(design)h(philosoph)o(y)g(outlined)f(in)h(the)h(in)
o(tro)q(duction.)24 b(That)17 b(is,)g(b)o(y)g(using)f(essen)o(tially)g
(the)h(same)0 1453 y(primitiv)o(e)12 b(data)h(t)o(yp)q(es)i(and)f(op)q
(erations)g(as)g(in)g(PIC,)g(but)h(em)o(b)q(edding)f(them)f(in)h(a)g
(functional)g(language,)f(w)o(e)0 1509 y(could)i(obtain)f(a)g(far)g
(more)f(p)q(o)o(w)o(erful)h(language)g(than)h(PIC)g(and)g(do)f(so)h(at)
f(a)g(far)g(lo)o(w)o(er)f(cost)i(than)f(if)g(w)o(e)h(had)0
1566 y(built)g(the)g(language)f(from)g(scratc)o(h.)71
1622 y(In)g(this)e(section,)h(w)o(e)h(presen)o(t)f(a)g(few)g(examples)f
(to)h(sho)o(w)g(the)h(principal)e Fk(primitive)i Fn(op)q(erations)f(of)
g(FPIC,)0 1679 y(making)d(only)h(minimal)d(use)k(of)f(the)h(programmi)o
(ng)d(features)i(of)g(Standard)h(ML.)f(Section)g(5)h(giv)o(es)e(man)o
(y)g(more)0 1735 y(examples,)i(emphasizing)g(the)h(utilit)o(y)e(of)i
(the)h(features)e(of)h(ML)g(in)g(com)o(bination)e(with)i(the)g(FPIC)g
(primitiv)o(es.)71 1792 y(The)i(most)f(basic)i(primitiv)o(es)c(are)k
(those)f(for)g(dra)o(wing)g(simple)f(shap)q(es)i(and)g(placing)f(them)f
(next)i(to)f(one)0 1848 y(another:)165 1832 y Fj(1)356
2138 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  0.0  22.76227   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  [
28.45274 0.0 28.45274 56.90549 0.0 56.90549 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  11.38092  22.76227   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 42.67911 42.67911 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll
sub 42.67911 42.67911 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx
setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  0 360 56.90549
28.45274 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 56.90549 28.45274
/mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix closepath gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
393 2107 a Fn(Hello!)719 1995 y Fi(box)21 b(1.0)g(2.0)g(hseq)g(circle)g
(1.5)g(vseq)828 2045 y(\(label)f("Hello!")g(\(oval)h(2.0)g(1.0\)\);)0
2245 y Fh(hseq)16 b Fn(and)h Fh(vseq)f Fn(represen)o(t)h(the)g(op)q
(erations)f(of)g(placing)h(pictures)f(next)h(to)f(one)h(another,)g
(either)f(horizon-)0 2301 y(tally)g(or)h(v)o(ertically)l(.)25
b(\(W)l(e)18 b(will)e(see)i(in)f(section)g(5)h(that)e(it)h(is)g(easy)h
(and)f(useful)h(to)f(de\014ne)i(new)e(sequencing)0 2358
y(op)q(erations.\))p 0 2400 768 2 v 52 2427 a Fg(1)69
2442 y Fl(App)q(endix)i(A)e(giv)o(es)h(a)f(concise)h(o)o(v)o(erview)g
(of)f(ML)g(syn)o(tax.)29 b(App)q(endix)19 b(B)e(lists)i(all)f(the)f
(FPIC)g(primitiv)o(es)i(used)f(in)g(the)0 2488 y(examples)h(in)f(this)g
(pap)q(er,)h(indicating)i(the)c(t)o(yp)q(es)h(of)f(their)i(argumen)o
(ts,)g(whether)e(or)h(not)f(they)h(are)f(in\014x,)j(and)e(what)f(they)0
2534 y(return.)949 2708 y Fn(2)p eop
%%Page: 3 3
3 2 bop 71 79 a Fn(Pictures)17 b(can)g(b)q(e)h(mo)o(v)o(ed)e(and)i
(otherwise)e(transformed)g(in)h(v)m(arious)g(w)o(a)o(ys.)25
b(In)18 b(this)f(example,)f(w)o(e)i(use)0 136 y(ML's)h(name)g
(de\014nition)g(facilit)o(y)e(in)j(the)f(\014rst)g(line.)33
b Fh(dtriangle)18 b Fn(is)h(a)g(\\default)g(triangle;")g(similarly)e
(for)0 192 y Fh(doval)d Fn(\(and)i Fh(dcircle)e Fn(and)h
Fh(dbox)g Fn(later)f(in)h(the)g(pap)q(er\).)115 511 y
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  0 360 71.13185
71.13185 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 71.13185 71.13185
/mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix closepath gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  22.76227  22.76227   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 -0.279999999999754
0.279999999999754 0.0  13.65718  38.69574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 0.279999999999754
-0.279999999999754 0.0  42.1807  30.729   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.12  19.34766  7.96672   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 46.0373 28.45274 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub
46.0373 28.45274 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix
closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 524 292 a Fi(val)21 b(nose)g(=)h(dtriangle;)
524 342 y(circle)f(2.5)g(seq)g(\(nose)g(at)g(\(2.0,2.0\)\))764
392 y(seq)g(\(nose)g(rotate)g(~90.0)f(scale)h(0.7)g(at)h(\(1.2,2.7\)\))
764 442 y(seq)f(\(nose)g(rotate)g(90.0)f(scale)h(0.7)g(at)h
(\(3.1,2.7\)\))764 492 y(seq)f(doval)g(scaleXY)f(\(0.5,0.3\))g(at)i
(\(1.7,0.7\);)71 617 y Fn(The)15 b Fh(seq)f Fn(op)q(eration)h(simply)e
(places)i(pictures)g(on)g(top)f(of)h(one)g(another,)f(without)g(mo)o
(ving)f(them)h(either)0 673 y(righ)o(t)j(or)h(do)o(wn.)30
b(The)18 b(expression)h Fk(pic)g Fh(at)g Fk(p)n(oint)f
Fn(dra)o(ws)g(the)h(picture)f Fk(pic)h Fn(with)e(its)h(reference)h(p)q
(oin)o(t)f(\(the)0 730 y(lo)o(w)o(er-left)13 b(corner\))i(at)g
Fk(p)n(oint)p Fn(.)71 786 y(An)f(imp)q(ortan)o(t)e(feature)j(of)f(PIC)g
(is)g(the)h(abilit)o(y)e(to)g(name)h(p)q(oin)o(ts)g(in)g(a)g(picture)h
(and)f(subsequen)o(tly)h(refer)0 843 y(to)i(them.)26
b(The)18 b(compass)f(p)q(oin)o(ts|)p Fh(s)g Fn(for)g(south,)h
Fh(ne)f Fn(for)g(northeast,)g(and)h(so)g(on,)f(plus)h
Fh(c)g Fn(for)f(cen)o(ter|are)0 899 y(automaticall)o(y)12
b(de\014ned)k(for)e(ev)o(ery)g(picture.)20 b(This)14
b(allo)o(ws)e(us)j(to)f(eliminate)e(some)h(of)h(the)h(guessw)o(ork)f
(in)g(the)0 956 y(previous)19 b(example;)h Fk(pic)h Fh(centeredAt)d
Fk(p)n(oint)h Fn(dra)o(ws)g Fk(pic)h Fn(in)f(a)g(lo)q(cation)f(suc)o(h)
i(that)f(its)f(cen)o(ter)i(coincides)0 1012 y(with)15
b Fk(p)n(oint)p Fn(.)126 1427 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  0 360 71.13185
71.13185 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 71.13185 71.13185
/mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix closepath gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  22.76227  23.52464   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 -0.279999999999754
0.279999999999754 0.0  13.62202  40.40283   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 0.279999999999754
-0.279999999999754 0.0  43.28345  32.4361   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.12  19.2452  7.96672   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 46.0373 28.45274 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub
46.0373 28.45274 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix
closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 535 1110 a Fi(val)21
b(face)g(=)h(circle)e(2.5;)535 1159 y(val)h(facecenter)f(=)i(face)f(pt)
g("c";)535 1209 y(val)g(lefteye)g(=)g(nose)g(rotate)g(~90.0)g(scale)f
(0.7;)535 1259 y(val)h(righteye)g(=)g(nose)g(rotate)g(90.0)g(scale)f
(0.7;)535 1309 y(val)h(mouth)g(=)h(doval)e(scaleXY)h(\(0.5,0.3\);)535
1359 y(face)g(seq)g(\(nose)g(centeredAt)f(facecenter\))644
1409 y(seq)h(\(lefteye)f(centeredAt)g(\(facecenter)g(--)h
(\(1.0,~0.7\)\)\))644 1458 y(seq)g(\(righteye)f(centeredAt)g
(\(facecenter)g(++)h(\(1.0,0.7\)\)\))644 1508 y(seq)g(\(mouth)g
(centeredAt)f(\(facecenter)f(--)j(\(0.0,1.5\)\)\);)71
1609 y Fn(Named)17 b(p)q(oin)o(ts)i(can)g(b)q(e)g(added)g(to)f(a)h
(picture.)30 b(Here)19 b(w)o(e)g(dra)o(w)f(the)h(same)e(\\pumpkin)h
(face")h(b)o(y)f(\014rst)0 1665 y(dra)o(wing)c(the)h(face)h(and)f
(naming)f(the)h(lo)q(cations)f(of)h(the)g(facial)f(features:)93
2155 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  0 360 71.13185
71.13185 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 71.13185 71.13185
/mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix closepath gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.4 0.0
0.0 0.4  22.76227  23.52464   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 -0.279999999999754
0.279999999999754 0.0  14.75993  41.54118   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.0 0.279999999999754
-0.279999999999754 0.0  42.14554  33.57402   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.12  19.2452  7.96672   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 46.0373 28.45274 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub
46.0373 28.45274 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix
closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 503 1763 a Fi(val)21 b(face)g(=)590
1813 y(let)g(val)g(f)h(=)f(circle)g(2.5)677 1862 y(val)g(facecenter)f
(=)h(f)h(pt)f("c")590 1912 y(in)g(namePts)f(f)i([\("nosepos",)d
(facecenter\),)895 1962 y(\("lefteyepos",)g(facecenter)g(--)j
(\(0.9,~0.8\)\),)895 2012 y(\("righteyepos",)c(facecenter)i(++)i
(\(0.9,0.8\)\),)895 2062 y(\("mouthpos",)d(facecenter)h(--)h
(\(0.0,1.5\)\)])590 2111 y(end;)503 2161 y(face)f(seq)i(\(nose)e
(centeredAt)g(\(face)h(pt)g("nosepos"\)\))611 2211 y(seq)h(\(lefteye)e
(centeredAt)g(\(face)g(pt)i("lefteyepos"\)\))611 2261
y(seq)g(\(righteye)e(centeredAt)f(\(face)i(pt)g("righteyepos"\)\))611
2311 y(seq)h(\(mouth)e(centeredAt)g(\(face)h(pt)g("mouthpos"\)\);)71
2411 y Fn(Pictures)14 b(can)h(b)q(e)g(named)f(as)g(w)o(ell)g(as)g(p)q
(oin)o(ts.)20 b(This)14 b(is)g(useful)h(when)g(a)f(n)o(um)o(b)q(er)h
(of)f(p)q(oin)o(ts)g(on)h(a)f(picture)0 2468 y(ma)o(y)g(b)q(e)i(of)f
(in)o(terest.)k(F)l(or)c(example,)f Fh(cell)h Fn(is)g(a)g(\\cons)g
(cell")g(consisting)f(of)h(t)o(w)o(o)f(b)q(o)o(xes)h(v)o(ertically)f
(stac)o(k)o(ed;)0 2524 y(for)h(future)g(reference,)g(the)h(individual)e
(b)q(o)o(xes)h(are)g(named)g Fh(car)f Fn(and)i Fh(cdr)p
Fn(,)e(resp)q(ectiv)o(ely:)949 2708 y(3)p eop
%%Page: 4 4
4 3 bop 290 270 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [1.0 0.0
0.0 1.0  0.0  28.45274   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  [
46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [1.0 0.0
0.0 1.0  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  [ 46.0373
0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 654 77 a Fi(val)21
b(cell)g(=)h(let)f(val)g(car)h(=)f(namePic)f(dbox)h("car")981
126 y(val)g(cdr)h(=)f(namePic)f(dbox)h("cdr")894 176
y(in)g(car)h(vseq)f(cdr)894 226 y(end;)0 376 y Fn(Here)15
b(is)g(an)g(equiv)m(alen)o(t)g(metho)q(d)g(of)f(writing)g
Fh(cell)p Fn(:)214 675 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [1.0 0.0
0.0 1.0  0.0  28.45274   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  [
46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [1.0 0.0
0.0 1.0  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  [ 46.0373
0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 578 482 a Fi(val)21
b(cell)g(=)h(let)f(val)g(c)h(=)f(stack)g(2)h(dbox)818
532 y(in)f(addNamedPics)e(c)j([\("car",)e(c)i(nthpic)e(1\),)1232
581 y(\("cdr",)g(c)i(nthpic)e(2\)])818 631 y(end;)71
781 y Fn(The)e Fh(stack)f Fn(op)q(eration)g(v)o(ertically)f(stac)o(ks)i
(a)f(n)o(um)o(b)q(er)h(of)f(copies)h(of)g(a)f(picture.)29
b Fh(addNamedPics)16 b Fn(adds)0 838 y(named)k(pictures)h(to)f(an)h
(existing)e(picture)i(\(as)f(opp)q(osed)h(to)g(giving)e(the)i(picture)g
(itself)f(a)g(name\).)35 b(This)0 894 y(example)21 b(also)f
(illustrates)g Fh(nthpic)p Fn(,)j(whic)o(h)e(selects)h(a)f(picture)h
(out)g(of)f(a)g(comp)q(osite)g(picture;)j(the)e(\014rst)0
951 y(picture)15 b(in)g Fh(c)g Fn(is)g(the)g(upp)q(er)h(b)q(o)o(x,)f
(and)h(the)f(second)h(picture)f(is)f(the)i(lo)o(w)o(er)d(one.)71
1007 y(Finally)l(,)i(another)h(imp)q(ortan)o(t)e(feature)j(of)f(PIC)h
(and)g(FPIC)f(is)g(the)h(abilit)o(y)e(to)h(dra)o(w)g(lines)g(and)h
(arro)o(ws.)0 1064 y(In)e(this)f(picture,)g(t)o(w)o(o)f(cells)g(are)h
(dra)o(wn)g(with)g(a)g(curv)o(ed)h(arro)o(w)d(from)h(the)h(cdr)h(of)f
(the)g(\014rst)g(to)g(the)g(car)g(of)g(the)0 1120 y(second:)23
1466 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.708203928737688
0.0 0.0 0.708203928737688  0.0  20.1504   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.708203928737688
0.0 0.0 0.708203928737688  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.708203928737688
0.0 0.0 0.708203928737688  52.75409  20.1504   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0
0.0  /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0.
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.708203928737688
0.0 0.0 0.708203928737688  52.75409  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.708203928737688
0.0 0.0 0.708203928737688  0.0  20.1504   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def /ArrowB
{ BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def  51.4716 -14.22636
23.01886 -14.22636 ArrowA 46.0373 14.22636 74.49004 14.22636 ArrowB
curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 551 1209 a Fi(let)21 b(val)g(cells)g(=)g
(\(namePic)f(cell)h("left"\))g(hseq)g(\(hspace)f(1.0\))h(hseq)899
1259 y(\(namePic)f(cell)h("right"\))638 1309 y(val)g(source)g(=)g
(cells)g(pic)g("left")g(pic)g("cdr")g(pt)g("c")638 1358
y(val)g(target)g(=)g(cells)g(pic)g("right")f(pic)i("car")e(pt)i("w")551
1408 y(in)f(cells)g(seq)g(\(bezier)f(source)h(\(source)f(++)i
(\(1.0,0.0\)\))1008 1458 y(\(target)f(--)g(\(1.0,0.0\)\))f(target)856
1508 y(withArrowStyle)f("->"\))551 1558 y(end;)0 1687
y Fo(3)67 b(Ho)n(w)21 b(to)h(design)h(a)f(sp)r(ecial-purp)r(ose)i
(language)0 1788 y Fn(Muc)o(h)18 b(as)g(w)o(e)g(try)f(not)h(to,)f(w)o
(e)h(often)g(design)g(a)g(new)g(language)f(b)o(y)h(thinking)g(in)g
(terms)e(of)i(the)g(syn)o(tax)f(w)o(e)0 1845 y(w)o(ould)f(lik)o(e)h(it)
f(to)g(ha)o(v)o(e.)26 b(F)l(or)16 b(sp)q(ecial-purp)q(ose)i(languages,)
e(this)h(generally)f(means)g(concen)o(trating)g(on)h(the)0
1901 y(syn)o(tax)d(of)h(the)h(domain-sp)q(eci\014c)e(data)h(and)g(op)q
(erations.)71 1958 y(In)e(our)f(view,)h(thinking)f(ab)q(out)h(the)g
(desired)g(concrete)g(syn)o(tax)f(of)g(the)h(new)g(language)f(is)g(not)
g(at)h(all)e(a)i(bad)0 2014 y(place)i(to)g(b)q(egin)g(the)h(design)f
(pro)q(cess,)g(as)g(long)g(as)g(that)f(step)i(is)e(understo)q(o)q(d)i
(in)f(its)g(prop)q(er)g(relation)f(to)h(the)0 2070 y(o)o(v)o(erall)d
(language)h(design.)20 b(In)15 b(designing)e(FPIC,)h(w)o(e)g(had)g(an)g
(existing)f(language,)g(PIC,)h(to)f(start)g(from.)18
b(W)l(e)0 2127 y(used)e(the)g(syn)o(tax)f(of)h(PIC)g(to)f(help)h(answ)o
(er)f(what)h(w)o(e)f(consider)h(the)g(most)e(crucial)h(question)g(in)h
(the)g(design)0 2183 y(pro)q(cess:)j(what)12 b(do)q(es)h(eac)o(h)f
(piece)h(of)f(syn)o(tax)g Fk(me)n(an)p Fn(?)19 b(In)14
b(ordinary)d(programming)e(terms,)i(syn)o(tactic)h(phrases)0
2240 y(ha)o(v)o(e)17 b(some)e(in)o(tuitiv)o(e)h(op)q(erational)g
(meaning;)g(\\)p Fh(circle)23 b(2.0)p Fn(")16 b(means)g(\\dra)o(w)g(a)h
(circle)g(with)f(radius)h(2.0.")0 2296 y(A)f(lesson)g(from)f
(denotational)f(seman)o(tics)h(is)g(that)h(phrases)g(can)g(b)q(e)h(giv)
o(en)f(precise)g(meanings)f(as)h(v)m(alues)g(of)0 2353
y(w)o(ell-de\014ned)e(sets.)20 b(It)14 b(is)f(this)g(notion)g(of)h
(\\meaning")e(that)h(w)o(e)h(found)g(useful)g(in)g(designing)f(FPIC.)g
(W)l(e)h(wish)0 2409 y(to)h(giv)o(e)f(the)h(reader)g(some)f(idea)h(of)g
(the)g(though)o(t)g(pro)q(cess)g(w)o(e)g(w)o(en)o(t)g(through.)71
2466 y(W)l(e)h(will)f(call)g(the)i(set)f(in)g(whic)o(h)g(the)g(meaning)
f(of)h(\\)p Fh(circle)23 b(2.0)p Fn(")15 b(resides)h
Fk(Pictur)n(e)p Fn(.)23 b(The)17 b(question)f(is,)0 2522
y(what)11 b(exactly)g(is)h(in)f(this)h(set?)19 b(What)11
b(is)g(a)h(picture?)19 b(The)12 b(most)e(ob)o(vious)h(answ)o(er)h(is)f
(that)g(it)g(is)g(some)g(concrete)0 2579 y(represen)o(tation)16
b(of)g(a)h(picture,)f(for)g(example,)g(an)h(arra)o(y)e(of)i(pixels)f
(or)g(a)h(list)e(of)i(dra)o(wing)e(commands.)23 b(The)949
2708 y(4)p eop
%%Page: 5 5
5 4 bop 0 79 a Fn(precise)17 b(represen)o(tation)f(do)q(es)i(not)f
(matter)e(to)h(us,)i(so)e(w)o(e)h(will)f(just)h(giv)o(e)f(the)i
(represen)o(tation)e(the)h(generic)0 136 y(name)d Fk(BitMap)p
Fn(.)20 b(So,)15 b(our)g(\014rst)g(idea)g(is)f(to)h(sa)o(y)782
242 y Fk(Pictur)n(e)g Fn(=)g Fk(BitMap)71 348 y Fn(Ho)o(w)o(ev)o(er,)h
(a)g(closer)h(lo)q(ok)f(at)g(PIC)h(tells)f(us)h(that)f(this)h(can't)f
(b)q(e)i(quite)e(righ)o(t.)24 b(In)17 b(PIC,)g(one)g(can)g(write,)0
405 y(for)e(example,)131 504 y Fi(box;)21 b(box)0 611
y Fn(meaning)16 b(to)i(dra)o(w)f(one)h(b)q(o)o(x)g(next)g(to)f
(another.)27 b(\(W)l(e)18 b(w)o(ould)f(write)g(this)h(as)f
Fh(dbox)23 b(hseq)h(dbox)p Fn(.\))j(If)18 b(eac)o(h)0
667 y(b)q(o)o(x)e(is)f(a)h Fk(Pictur)n(e)p Fn(,)g(and)g(a)f
Fk(Pictur)n(e)h Fn(is)f(just)h(a)g(bitmap,)e(then)i(these)g(t)o(w)o(o)f
(b)q(o)o(xes)h(w)o(ould)f(represen)o(t)h(the)g Fk(same)0
724 y Fn(bitmap,)d(whic)o(h)i(w)o(ould)g(mean)f(precisely)h(the)g(same)
f(pixels)h(dra)o(wn)g(at)f(the)i(same)d(lo)q(cation!)71
780 y(W)l(e)k(should)f(instead)h(sa)o(y)f(that)g(a)h
Fk(Pictur)n(e)g Fn(is)f(the)h Fk(c)n(ap)n(ability)g Fn(to)f(dra)o(w)g
(a)h(bitmap,)e(giv)o(en)h(a)h(lo)q(cation)f(at)0 836
y(whic)o(h)f(to)g(dra)o(w)f(it;)g(in)h(other)g(w)o(ords,)f(it)h(is)f(a)
h Fk(function)g Fn(from)e(lo)q(cations)h(to)h(dra)o(wing)f(commands:)
660 943 y Fk(Pictur)n(e)h Fn(=)h Fk(L)n(o)n(c)n(ation)e
Ff(!)h Fk(BitMap)71 1049 y Fn(This)h(is)h(close,)g(but)g(w)o(e)g(ha)o
(v)o(e)f(also)h(to)f(deal)h(with)f(the)i(picture)f(that)f(w)o(e)h
(write)f(\(from)f(no)o(w)i(on,)g(w)o(e)g(use)0 1105 y(FPIC)e(syn)o(tax)
f(to)h(a)o(v)o(oid)f(confusion\):)87 1205 y Fi(dbox)21
b(scale)g(5.0)0 1311 y Fn(Again,)14 b(the)g(bitmap)f(cannot)h(b)q(e)h
(determined)f(from)f(the)h(v)m(alue)h(of)f Fh(dbox)p
Fn(,)g(ev)o(en)h(after)e(kno)o(wing)h(its)g(lo)q(cation.)0
1368 y(W)l(e)h(migh)o(t)e(try)509 1474 y Fk(Pictur)n(e)i
Fn(=)g Fk(L)n(o)n(c)n(ation)f Ff(!)i Fk(Sc)n(aleF)m(actor)e
Ff(!)h Fk(BitMap)0 1580 y Fn(whic)o(h)j(is)g(basically)f(correct,)i
(but)f(w)o(e)g(also)g(need)h(to)f(deal)g(with)f(color,)h(line)g(width,)
h(and)f(a)g(host)g(of)g(other)0 1637 y(w)o(a)o(ys)c(in)h(whic)o(h)g
(the)g(simple)f(bitmap)g(migh)o(t)f(b)q(e)j(altered.)71
1693 y(F)l(rom)e(this)i(p)q(oin)o(t)g(of)h(view,)f(the)g(v)m(alue)h(of)
f Fh(dbox)g Fn(is)g(just)h(the)f(barest)g(indication)g(of)g(what)g
(will)f(actually)0 1750 y(sho)o(w)g(up)g(on)g(the)h(prin)o(ted)f(page.)
k(W)l(e)d(represen)o(t)f(this)g(b)o(y)g(de\014ning)579
1856 y Fk(Pictur)n(e)g Fn(=)h Fk(Gr)n(aphicsContext)f
Ff(!)g Fk(BitMap)0 1962 y Fn(where)c Fk(Gr)n(aphicsContext)g
Fn(con)o(tains)g(informatio)o(n)e(ab)q(out)i(an)o(y)g(linear)f
(transformations)e(that)j(ma)o(y)e(ha)o(v)o(e)i(b)q(een)0
2019 y(applied)k(to)g(the)g(picture,)g(as)g(w)o(ell)f(as)h(color,)e
(\014ll)i(st)o(yle,)f(line)h(width,)f(and)i(so)e(on.)1404
2002 y Fj(2)71 2075 y Fn(W)l(e're)f(not)f(quite)h(done.)20
b(W)l(e)13 b(kno)o(w)g(that)g(w)o(e)f(can)i(refer)f(to)g(the)g(p)q(oin)
o(ts)g(on)g(a)g(picture,)g(for)f(example)h Fh(dbox)0
2132 y(pt)24 b("nw")p Fn(.)d(Eviden)o(tly)l(,)15 b Fh(dbox)h
Fn(means)e(something)h(more)f(than)i(a)f(bitmap.)21 b(It)16
b(means,)f(in)g(addition,)g(a)h(set)f(of)0 2188 y(named)g(p)q(oin)o
(ts,)f(whic)o(h)h(w)o(e)g(call)f(an)i Fk(Envir)n(onment)p
Fn(.)i(This)d(brings)g(us)g(to)g(the)g(de\014nition)g(w)o(e)g(actually)
g(use)g(in)0 2244 y(FPIC:)388 2351 y Fk(Pictur)n(e)h
Fn(=)f(\()p Fk(Gr)n(aphicsContext)g Ff(!)g Fk(BitMap)p
Fn(\))28 b Ff(\002)g Fk(Envir)n(onment)p 0 2393 768 2
v 52 2420 a Fg(2)69 2436 y Fl(P)o(ostScript)15 b([1)o(])e(has)g(a)g
(similar)j(notion)e(of)f(\\graphics)i(con)o(text.")949
2708 y Fn(5)p eop
%%Page: 6 6
6 5 bop 71 79 a Fn(This)17 b(de\014nition|and)h(it)f(is)h(b)o(y)g(no)f
(means)g(the)h(only)f(one)h(p)q(ossible|is)g(the)g(most)e(imp)q(ortan)o
(t)f(in)j(the)0 136 y(design)f(of)h(FPIC.)f(Just)g(as)g(the)h(domains)e
(in)h(the)h(denotational)e(seman)o(tics)g(of)h(a)g(language)g(are)g(c)o
(hosen)h(to)0 192 y(matc)o(h)f(the)h(prop)q(erties)g(of)g(that)g
(language,)g(so)g(here)h(the)f(de\014nition)g(of)g Fk(Pictur)n(e)g
Fn(determines,)g(more)f(than)0 249 y(an)o(y)f(other)g(single)f(thing,)h
(the)g(prop)q(erties)g(of)g(FPIC.)f(Indeed,)j(once)f(this)e
(de\014nition)h(is)g(made|along)f(with)0 305 y(the)e(precise)g
(de\014nitions)g(of)f Fk(Gr)n(aphicsContext)h Fn(and)g
Fk(Envir)n(onment)p Fn(|the)f(rest)h(of)f(the)h(language)g(largely)e
(falls)0 362 y(out.)71 418 y(When)16 b(em)o(b)q(edding)f(a)h(language)f
(in)h(a)g(functional)f(language)g(lik)o(e)g(Standard)h(ML,)g(this)f(t)o
(yp)q(e)h(de\014nition)0 474 y(can)g(also)e(guide)i(the)g(implemen)o
(tat)o(ion.)i(Indeed,)f(w)o(e)e(ha)o(v)o(e)g(used)i(exactly)e(the)g(t)o
(yp)q(e)h(ab)q(o)o(v)o(e,)f(written)f(in)i(ML)0 531 y(as)87
624 y Fi(type)21 b(Picture)f(=)i(\(GraphicsContext->)o(BitMa)o(p\))d(*)
i(Environment;)0 725 y Fn(as)14 b(the)g(t)o(yp)q(e)h(of)f(pictures.)19
b(Man)o(y)14 b(of)g(the)g(basic)h(op)q(erations)e(on)h(pictures,)g(and)
h(their)f(implemen)o(tati)o(ons,)d(are)0 781 y(suggested)k(directly)g
(b)o(y)g(this)f(t)o(yp)q(e)i(de\014nition.)0 923 y Fo(4)67
b(The)22 b(FPIC)g(User's)f(Man)n(ual)0 1025 y Fn(Since)15
b(FPIC)g(includes)g(Standard)f(ML,)h(the)f(man)o(ual)f(is)h(either)h(v)
o(ery)f(long)g(or)g(v)o(ery)h(short,)e(dep)q(ending)j(up)q(on)0
1081 y(ho)o(w)f(y)o(ou)g(lo)q(ok)f(at)h(it.)k(In)d(an)o(y)f(case,)g
(FPIC)g(consists)g(of)g(ab)q(out)g(130)f(functions,)h(amoun)o(ting)e
(to)i(ab)q(out)g(1000)0 1138 y(lines)h(of)g(ML)g(co)q(de.)23
b(In)17 b(App)q(endix)g(B,)f(w)o(e)g(list)f(all)g(the)h(FPIC)g
(primitiv)o(es)e(that)h(are)h(used)h(in)f(the)g(examples)0
1194 y(in)f(this)g(pap)q(er.)0 1336 y Fo(5)67 b(FPIC)22
b(Examples)0 1438 y Fn(The)d(examples)e(of)g(this)h(section)g(sho)o(w)g
(ho)o(w)g(the)g(features)g(of)g(Standard)g(ML,)g(when)h(com)o(bined)e
(with)h(the)0 1494 y(primitiv)o(es)13 b(of)h(FPIC,)h(create)g(a)g(p)q
(o)o(w)o(erful)f(language)h(for)f(constructing)h(pictures.)71
1551 y(Being)e(a)g(functional)f(language,)h(some)f(fancy)h(dra)o(wings)
f(are)h(relativ)o(ely)f(easy)h(to)g(do.)19 b(F)l(or)12
b(example,)h(here)0 1607 y(is)i(the)g(Sierpinski)g(curv)o(e)g(of)g
(order)g(3:)118 1943 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto load def
false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  8.21376  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  4.10666  7.11317   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  16.4271  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  24.64085  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  20.5342  7.11317   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  8.21376  14.22636   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  16.4271  14.22636   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  12.32042  21.33955   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  32.85419  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  41.06796  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  36.96129  7.11317   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  49.28172  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  57.49506  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  53.3884  7.11317   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  41.06796  14.22636   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  49.28172  14.22636   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  45.17462  21.33955   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  16.4271  28.45274   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  24.64085  28.45274   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  20.5342  35.56592   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  32.85419  28.45274   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  41.06796  28.45274   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  36.96129  35.56592   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  24.64085  42.67911   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  32.85419  42.67911   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.288675135856292
0.0 0.0 0.288675135856292  28.74753  49.7923   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 14.22636 24.64085 28.45274 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 564 1699 a Fi(fun)22 b(sierpinski)d(0)j(=)f
(dtriangle)608 1749 y(|)h(sierpinski)d(n)j(=)717 1799
y(let)f(val)g(s)h(=)f(sierpinski)f(\(n-1\))h(scaleWithPoint)1131
1848 y(\(\(0.5,0.5\),\(0.0,0)o(.0\)\))717 1898 y(in)g(s)h(hseq)f(s)g
(seq)h(\(s)f(at)g(\(\(width)g(s\)/2.0,)f(height)h(s\)\))717
1948 y(end;)564 1998 y(\(sierpinski)f(3\))0 2095 y Fn(\()p
Fk(pic)15 b Fh(scaleWithPoint)22 b(\()p Fk(s)p Fh(,)h
Fk(p)n(oint)p Fh(\))15 b Fn(scales)g(picture)g Fe(pic)f
Fn(b)o(y)h(a)g(factor)f Fe(s)i Fn(while)e(k)o(eeping)i
Fe(point)f Fn(\014xed.\))71 2151 y(Ho)o(w)o(ev)o(er,)d(of)h(more)g(in)o
(terest)f(in)i(practice)f(is)g(the)h(abilit)o(y)e(to)h(create)g
(reusable)h(pieces)g(of)f(pictures)h(to)f(ease)0 2208
y(the)i(programming)d(burden.)21 b(Here)15 b(is)g(where)g(functional)g
(programm)o(ing)d(shines.)0 2328 y Fd(5.1)56 b(De\014ning)19
b(lines)0 2414 y Fn(In)e(FPIC,)f(a)g(line)g(is)f(simply)g(a)h(function)
g(from)f(t)o(w)o(o)g(p)q(oin)o(ts)g(to)h(a)g(picture.)23
b(An)o(y)17 b(dra)o(wing)e(can)h(b)q(e)h(parame-)0 2471
y(terized)e(b)o(y)g(a)g(line)g(to)g(create)g(a)f(v)m(ariet)o(y)h(of)g
(e\013ects.)71 2527 y(Here)h(is)g(a)g(simple)e(function)i(to)g(dra)o(w)
g(trees.)22 b(Its)16 b(argumen)o(ts)f(are)h(a)g(picture)g(represen)o
(ting)g(the)g(ro)q(ot)f(of)0 2584 y(the)g(tree)g(and)h(a)f(list)f(of)g
(pictures)h(represen)o(ting)g(its)g(c)o(hildren.)949
2708 y(6)p eop
%%Page: 7 7
7 6 bop 87 79 a Fi(fun)21 b(drawtree)f(root)h(subtrees)g(=)153
129 y(let)g(val)g(aligntops)f(=)h(map)h(\(fn)f(p)g(=>)h(place)e(p)i
(north)f(\(0.0,0.0\)\);)240 179 y(val)g(bottom)f(=)i(hseqsplist)e(1.0)h
(\(aligntops)f(subtrees\))240 229 y(val)h(top)g(=)h(placePt)e(root)h
("s")g(\(bottom)f(pt)i("n")f(++)g(\(0.0,1.0\)\))240 279
y(val)g(rootsouth)f(=)h(top)h(pt)f("s")153 328 y(in)g(group)g(\(top)g
(seq)g(bottom)f(seq)240 378 y(\(seqlist)g(\(map)h(\(fn)g(p)h(=>)f(line)
g(rootsouth)f(\(p)h(pt)h("n"\)\))e(\(pics)h(bottom\)\)\)\))153
428 y(end;)71 534 y Fn(It)15 b(dra)o(ws)f(a)h(tree)g(with)g(its)f(no)q
(des)i(connected)g(b)o(y)f(lines:)230 821 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 37.24522 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 37.24522 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 37.24522 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 37.24522 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 74.49004 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 148.98051 0.0 74.49004 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 758 678 a Fi(let)21 b(val)g(t)h(=)f(drawtree)f
(dcircle)h([dbox,)f(dbox])801 728 y(in)i(drawtree)e(dbox)h([t,)g(t])g
(end;)71 928 y Fn(W)l(e)14 b(can)h(easily)f(de\014ne)i(a)f(function)g
Fh(drawTreeWithArrow)d Fn(that)i(w)o(ould)g(dra)o(w)h(arro)o(ws)e
(instead)h(of)h(lines,)0 984 y(simply)j(b)o(y)i(replacing)f(\\)p
Fh(line)p Fn(")g(b)o(y)h(\\)p Fh(arrow)p Fn(.")32 b(Ho)o(w)o(ev)o(er,)
20 b(w)o(e)f(can)h(do)g(b)q(etter)g(in)g(ML,)f(making)f(the)i(line-)0
1041 y(dra)o(wing)14 b(function)h(a)g(parameter.)j Fh(drawTree)c
Fn(b)q(ecomes)0 1147 y Fh(fun)23 b(drawtree)g(root)h(subtrees)e
(linefun)h(=)76 1203 y Fe(:)8 b(:)g(:)13 b Fk(exactly)j(the)h(same,)f
(until)g(the)g(last)g(line)e Fe(:)8 b(:)g(:)95 1260 y
Fh(\(seqlist)23 b(\(map)h(\(fn)f(p)h(=>)f(linefun)g(rootsouth)g(\(p)g
(pt)h("n"\)\))f(\(pics)g(bottom\)\)\)\))0 1316 y(end;)71
1423 y Fn(Then)15 b(the)h(tree)f(ab)q(o)o(v)o(e)f(w)o(ould)h(b)q(e)h
(written)e(as)176 1701 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 37.24522 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 37.24522 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 37.24522 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 37.24522 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 74.49004 28.45274  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 148.98051 0.0 74.49004 28.45274  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
703 1558 a Fi(let)21 b(val)h(t)f(=)h(drawtree)e(dcircle)g([dbox,)h
(dbox])g(line)747 1607 y(in)g(drawtree)f(dbox)h([t,)g(t])h(line)f(end;)
0 1807 y Fn(and)15 b(w)o(e)g(could)h(also)e(write)165
2086 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
0.0 0.0 37.24522 28.45274  /currentpoint load stopped pop /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
74.49004 0.0 37.24522 28.45274  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
0.0 0.0 37.24522 28.45274  /currentpoint load stopped pop /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
74.49004 0.0 37.24522 28.45274  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
0.0 0.0 74.49004 28.45274  /currentpoint load stopped pop /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
148.98051 0.0 74.49004 28.45274  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 692 1942 a Fi(let)21
b(val)h(t)f(=)h(drawtree)e(dcircle)g([dbox,)h(dbox])g(arrow)736
1992 y(in)g(drawtree)f(dbox)h([t,)h(t])f(arrow)g(end;)71
2192 y Fn(Moreo)o(v)o(er,)11 b(w)o(e)i(can)h(de\014ne)g(our)f(o)o(wn)g
(line-dra)o(wing)f(functions.)19 b(W)l(e)14 b(ha)o(v)o(e)e(seen)i
(earlier,)f(in)g(the)g(cons-cell)0 2248 y(example,)e(ho)o(w)h(to)f(dra)
o(w)h(a)g(curvy)g(line.)19 b(W)l(e)12 b(use)g(the)g(same)f(idea,)h
(except)h(that)f(here)g(w)o(e)g(w)o(an)o(t)f(our)h(curvy)g(line)0
2305 y(to)h(b)q(eing)h(with)f(a)g(v)o(ertical)f(leg)i(rather)f(than)g
(a)g(horizon)o(tal)f(one.)20 b(Again,)13 b(k)o(eep)h(in)f(mind)g(that)g
(a)g(line-dra)o(wing)0 2361 y(function)i(is)g(just)g(a)g(function)g
(from)e(t)o(w)o(o)h(p)q(oin)o(ts)g(to)h(a)g(picture,)g(nothing)f(more)g
(or)h(less:)87 2461 y Fi(fun)21 b(curvedvline)f(pt1)h(pt2)g(=)153
2511 y(bezier)f(pt1)h(\(pt1--\(0.0,1.0\)\))e(\(pt2++\(0.0,1.0\)\))f
(pt2;)949 2708 y Fn(7)p eop
%%Page: 8 8
8 7 bop 99 258 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  37.24522 0.0 37.24522 28.45274 ArrowA 0.0 28.45274
0.0 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  37.24522 0.0 37.24522 28.45274 ArrowA 74.49004 28.45274
74.49004 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  37.24522 0.0 37.24522 28.45274 ArrowA 0.0 28.45274
0.0 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  37.24522 0.0 37.24522 28.45274 ArrowA 74.49004 28.45274
74.49004 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  74.49004 0.0 74.49004 28.45274 ArrowA 0.0 28.45274
0.0 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def  74.49004 0.0 74.49004 28.45274 ArrowA 148.98051 28.45274
148.98051 0.0 ArrowB curveto gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
627 115 a Fi(let)21 b(val)g(t)h(=)f(drawtree)g(dcircle)f([dbox,)g
(dbox])h(curvedvline)671 164 y(in)g(drawtree)f(dbox)h([t,)g(t])h
(curvedvline)d(end;)71 360 y Fn(Tw)o(o)14 b(more)g(examples)g(are)g(a)h
(line-dra)o(wing)f(function)h(that)g(uses)g(a)g(\\Manhattan)f
(geometry":)87 454 y Fi(fun)21 b(manline)g(pt1)g(pt2)g(=)153
504 y(let)g(val)g(ymid)g(=)g(\(snd)g(pt1)h(+)f(snd)g(pt2\)/2.0)153
554 y(in)g(seqlist)f([line)h(pt1)g(\(fst)g(pt1,)g(ymid\),)414
604 y(line)g(\(fst)g(pt1,)g(ymid\))g(\(fst)g(pt2,)g(ymid\),)414
654 y(line)g(\(fst)g(pt2,)g(ymid\))g(pt2])153 704 y(end;)143
983 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 37.24522 14.22636 37.24522 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 14.22636 37.24522 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 0.0 14.22636  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 37.24522 14.22636 37.24522 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 14.22636 37.24522 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 74.49004 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 37.24522 14.22636 37.24522 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 14.22636 37.24522 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 0.0 14.22636  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 37.24522 14.22636 37.24522 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 14.22636 37.24522 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 0.0 74.49004 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 14.22636 74.49004 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 14.22636 74.49004 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 0.0 0.0 0.0 14.22636  /currentpoint load stopped
pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 74.49004 14.22636 74.49004 28.45274  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 148.98051 14.22636 74.49004 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 148.98051 0.0 148.98051 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 671 840 a(let)g(val)g(t)g(=)h
(drawtree)e(dcircle)h([dbox,)f(dbox])h(manline)714 889
y(in)g(drawtree)g(dbox)g([t,)g(t])g(manline)f(end;)0
1085 y Fn(and)15 b(a)g(function)g(that)g(dra)o(ws)f(short)h(lines)g(of)
f(whatev)o(er)h(kind:)87 1179 y Fi(fun)21 b(shortline)f(linefun)h(pt1)g
(pt2)g(=)174 1229 y(let)h(val)f(diff)g(=)g(pt2)g(--)h(pt1;)262
1279 y(val)f(pt1')g(=)g(pt1)g(++)h(diff**\(0.25,0.25)o(\);)262
1329 y(val)f(pt2')g(=)g(pt2)g(--)h(diff**\(0.25,0.25)o(\))174
1379 y(in)g(linefun)e(pt1')h(pt2')174 1428 y(end;)154
1708 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
9.3113 7.11317 27.93391 21.33955  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
65.17915 7.11317 46.55653 21.33955  /currentpoint load stopped pop
/Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
9.3113 7.11317 27.93391 21.33955  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
65.17915 7.11317 46.55653 21.33955  /currentpoint load stopped pop
/Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
18.6226 7.11317 55.86784 21.33955  /currentpoint load stopped pop /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
130.3579 7.11317 93.11266 21.33955  /currentpoint load stopped pop
/Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 681 1540 a(let)h(val)f(t)g(=)h
(drawtree)e(dcircle)g([dbox,)h(dbox])1292 1589 y(\(shortline)e(arrow\))
725 1639 y(in)i(drawtree)g(dbox)f([t,)i(t])f(\(shortline)f(arrow\))g
(end;)132 1982 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  35.3888  45.0574   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  10.07498  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  23.59238  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 27.93391 14.22636 27.93391 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 9.3113 14.22636 27.93391 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 9.3113 7.11317 9.3113 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 46.55653 14.22636 46.55653 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 65.17915 14.22636 46.55653 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  7.29031  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 65.17915 7.11317 65.17915 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  57.26018  18.02304   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  47.18477  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  70.77715  0.0   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 27.93391 14.22636 27.93391 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 9.3113 14.22636 27.93391 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 9.3113 7.11317 9.3113 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 46.55653 14.22636 46.55653 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 65.17915 14.22636 46.55653 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  54.47551  9.0113   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 65.17915 7.11317 65.17915 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 55.86784 14.22636 55.86784 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 18.6226 14.22636 55.86784 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 18.6226 7.11317 18.6226 14.22636  /currentpoint load
stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW 0. 0.
0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 93.11266 14.22636 93.11266 21.33955  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 130.3579 14.22636 93.11266 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.31671842549558
0.0 0.0 0.31671842549558  19.08672  36.0461   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def [ 130.3579 7.11317 130.3579 14.22636  /currentpoint
load stopped pop /Lineto /lineto load def false Line  gsave 0.8 SLW
0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
660 1813 a(let)h(val)g(t)h(=)f(drawtree)f(dcircle)h([dbox,)f(dbox])1270
1863 y(\(shortline)g(manline\))703 1913 y(in)i(drawtree)e(dbox)h([t,)g
(t])g(\(shortline)f(manline\))g(end;)0 2103 y Fd(5.2)56
b(De\014ning)19 b(sequencing)f(op)r(erators)0 2188 y
Fn(The)h(functions)g(that)f(put)h(pictures)g(together)f(in)o(to)f
(larger)h(pictures)h(are)f(of)h(k)o(ey)g(imp)q(ortance.)29
b(In)20 b(FPIC,)0 2245 y(these)e(are)f(generally)f(binary)h(op)q
(erations)f(with)h(in\014x)g(syn)o(tax.)26 b(The)17 b(basic)h
(sequencing)f(op)q(eration)g(is)g Fh(seq)p Fn(,)0 2301
y(whic)o(h)f(simply)e(dra)o(ws)h(t)o(w)o(o)g(pictures)h(without)f
(prejudice;)h Fh(hseq)g Fn(and)g Fh(vseq)p Fn(,)f(among)f(others,)i
(com)o(bine)e Fh(seq)0 2358 y Fn(with)h(some)e(translation)h(of)g(the)i
(second)f(picture.)71 2414 y(Again,)c(the)i(abilit)o(y)d(to)i(de\014ne)
i(new)e(sequencing)h(op)q(erations)f(is)f(of)h(the)h(greatest)e(in)o
(terest.)18 b(A)12 b(sequencing)0 2471 y(op)q(eration)f(is)g(a)h
(function)g(from)e(a)h(pair)g(of)h(pictures)f(to)h(a)f(picture.)19
b(The)12 b(constructed)g(picture)g(should)g(include)0
2527 y(the)j(t)o(w)o(o)f(pictures.)71 2584 y(A)h(simple)e(example)i(is)
f Fh(cseq)p Fn(,)g(whic)o(h)h(aligns)g(the)g(cen)o(ters)g(of)g(t)o(w)o
(o)f(pictures:)949 2708 y(8)p eop
%%Page: 9 9
9 8 bop 87 79 a Fi(infix)21 b(6)h(cseq;)87 129 y(fun)f(\(p1)h(cseq)e
(p2\))i(=)f(\(p1,)g(center)g(p1\))g(align)g(\(p2,)g(center)f(p2\);)87
179 y(val)h(cseqlist)f(=)i(mkseqlist)e(\(op)h(cseq\);)158
465 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.2  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor  0 360 142.26372
142.26372 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 142.26372 142.26372
/mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix closepath gsave
0.2 0.2 0.2 setrgbcolor fill  grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.2  5.69046  5.69046   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 113.81097 113.81097 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll
sub 113.81097 113.81097 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx
setmatrix closepath gsave 0.25 0.25 0.25 setrgbcolor fill  grestore
gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.2  11.38092  11.38092   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 85.35823 85.35823 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll
sub 85.35823 85.35823 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx
setmatrix closepath gsave 0.333333 0.333333 0.333333 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.2  17.07181  17.07181   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 56.90549 56.90549 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll
sub 56.90549 56.90549 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx
setmatrix closepath gsave 0.5 0.5 0.5 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.2 0.0
0.0 0.2  22.76227  22.76227   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll
sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx
setmatrix closepath gsave 1.0 1.0 1.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 568 272 a(val)g(bullseye)f(=)i(cseqlist)e
(\(map)720 321 y(\(fn)i(rad)f(=>)g(circle)g(rad)g(withFillColor)1113
371 y(\(1.0/rad,)f(1.0/rad,)g(1.0/rad\)\))699 421 y([5.0,)g(4.0,)h
(3.0,)g(2.0,)g(1.0]\);)71 558 y Fn(The)10 b(cons-cell)g(example)f
(suggests)g(another)h(kind)g(of)g(sequencing:)18 b(sequencing)11
b(with)e(an)h(arro)o(w.)17 b Fh(cellseq)0 614 y Fn(has)e(as)g(its)g
(argumen)o(ts)e(t)o(w)o(o)h(cons)i(cells|that)e(is,)h(t)o(w)o(o)f
(pictures)h(that)g(are)g(presumed)g(to)g(ha)o(v)o(e)g(subpictures)0
671 y(called)g Fh(cdr)g Fn(and)g Fh(car)p Fn(,)f(resp)q(ectiv)o
(ely|and)i(dra)o(ws)e(them)g(a)h(bit)g(separated,)g(with)f(a)h(curvy)g
(arro)o(w.)87 757 y Fi(infix)21 b(7)h(cellseq;)87 807
y(fun)f(cell1)g(cellseq)f(cell2)h(=)153 856 y(let)g(val)g(cells)g(=)g
(\(group)g(cell1\))f(hseq)h(\(hspace)g(1.0\))g(hseq)g(\(group)f
(cell2\))153 906 y(in)h(cells)g(seq)g(curvedharrow)e(\(cells)i(nthpic)f
(1)i(pic)f("cdr")g(pt)g("c"\))719 956 y(\(cells)g(nthpic)f(3)i(pic)f
("car")g(pt)g("w"\))153 1006 y(end;)87 1056 y(val)g(cellseqlist)f(=)h
(mkseqlist)f(\(op)i(cellseq\);)0 1149 y Fn(F)l(or)15
b(this)f(example,)g(w)o(e)h(ha)o(v)o(e)g(de\014ned)h
Fh(labelCar)p Fn(,)e(whic)o(h)h(places)g(a)g(lab)q(el)g(in)g(the)g(car)
g(of)g(a)g(cons)g(cell:)46 1490 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  0.0  16.1896   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  0.0  0.0   ] concat  0.8 SLW 0. 0. 0. setrgbcolor
 [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto
load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 83
1408 a(A)46 1490 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  42.38518  16.1896   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0
0.0  /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0.
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  42.38518  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.284501164412202
0.0 0.0 0.284501164412202  47.38794  16.1896   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0 360 28.45274 28.45274 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 28.45274 28.45274 /mtrx CM def T scale 0 0 1 5
3 roll arc mtrx setmatrix closepath gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  84.77037  16.1896   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0
0.0  /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0.
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  84.77037  0.0   ] concat  0.8 SLW 0. 0.
0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.170700698647321
0.0 0.0 0.170700698647321  93.93886  24.28442   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0
0.0  /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0.
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.170700698647321
0.0 0.0 0.170700698647321  93.93886  19.42754   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 46.0373 0.0 46.0373 28.45274 0.0 28.45274 0.0
0.0  /Lineto /lineto load def false Polygon  gsave 0.8 SLW 0. 0. 0.
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  42.38518  16.1896   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [
74.49004 14.22636 57.33311 11.38092 40.17577 -11.38092 23.01886 -14.22636
 /currentpoint load stopped pop 1. 0.1 0.  /c ED /b ED /a ED false
OpenCurve  gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.569002328824403
0.0 0.0 0.569002328824403  0.0  16.1896   ] concat  0.8 SLW 0. 0. 0.
setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def /ArrowB
{ BeginArrow false 0.4 2.5 1.5 2. Arrow  EndArrow  } def [ 74.49004
14.22636 57.33311 11.38092 40.17577 -11.38092 23.01886 -14.22636  /currentpoint
load stopped pop 1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 680 1233 a Fi(fun)21 b(labelCar)f(L)i(=)745
1283 y(cell)f(seq)h(\(L)f(centeredAt)f(\(cell)g(pic)i("car")e(pt)i
("c"\)\);)680 1332 y(cellseqlist)702 1382 y(\(map)f(labelCar)920
1432 y([text)g("A",)942 1482 y(dcircle)f(scaleTo)g(\(height)h(\(cell)f
(pic)i("car"\),)1312 1532 y(width)f(\(cell)g(pic)g("car"\)\),)942
1582 y(cell)g(scale)f(0.3]\);)0 1708 y Fo(6)67 b(P)n(ac)n(k)l(ages)0
1810 y Fn(The)17 b(real)e(p)q(oin)o(t,)h(of)g(course,)g(is)g(that)f
(FPIC)h(can)h Fk(do)g(mor)n(e)p Fn(.)24 b(That)15 b(is,)h(it)g(is)f
(not)h(merely)f(a)h(sp)q(ecial)g(purp)q(ose)0 1866 y(language)9
b(for)h(one)g(t)o(yp)q(e)h(of)e(picture,)i(but)g(is)e(in\014nitely)h
(extensible)g(to)g(a)g(v)m(ariet)o(y)f(of)h(picture-dra)o(wing)f
(domains.)71 1923 y(Our)18 b(last)f(example)g(is)h(a)f(collection)g(of)
h(functions)g(to)f(dra)o(w)h(pie)g(c)o(harts.)28 b(This)18
b(pac)o(k)m(age)g(con)o(tains)f(the)0 1979 y(function)c
Fh(pieChart)p Fn(,)g(whic)o(h)g(tak)o(es)g(a)g(list)f(of)h(pairs,)g
(eac)o(h)g(consisting)g(of)g(a)g(p)q(ercen)o(tage)h(and)f(a)g
(slice-dra)o(wing)0 2036 y(function,)j(and)g(dra)o(ws)f(the)h(slices.)
22 b(A)17 b(slice-dra)o(wing)d(function)i(is)g(a)g(function)g(from)e
(an)i(angle)f(\(in)h(degrees\))0 2092 y(to)h(a)f(picture;)i(that)f
(picture)g(will)f(normally)e(b)q(e)k(a)f(w)o(edge)g(of)g(a)g(circle)f
(cen)o(tered)i(at)f(\(0)p Fe(;)8 b Fn(0\))15 b(and)i(starting)f(at)0
2149 y(the)f(giv)o(en)g(angle.)k(The)d(pac)o(k)m(age)f(con)o(tains)f(a)
h(v)m(ariet)o(y)g(of)f(functions)h(for)g(creating)f(slice-dra)o(wing)g
(functions.)87 2235 y Fi(fun)21 b(pieChart)f(radius)h(pieList)f(=)153
2285 y(let)h(fun)g(pieBuilder)f(n)h([\(a,pfun\)])f(=)i(pfun)e(radius)h
(n)283 2335 y(|)h(pieBuilder)e(n)h(\(\(a,pfun\)::slices\))d(=)370
2384 y(let)k(val)f(newangle)f(=)i(n+\(\(a/100.0\))d(*)i(360.0\))370
2434 y(in)h(\(pfun)f(radius)f(n\))i(seq)f(\(pieBuilder)e(newangle)h
(slices\))370 2484 y(end)153 2534 y(in)h(pieBuilder)f(0.0)h(pieList)153
2584 y(end;)949 2708 y Fn(9)p eop
%%Page: 10 10
10 9 bop 71 79 a Fn(The)14 b(function)g Fh(slice)f Fn(tak)o(es)g(a)h
(collection)e(of)i(argumen)o(ts)e(and)i(returns)g(a)g(slice-dra)o(wing)
e(function.)20 b(The)0 136 y(argumen)o(ts)12 b(are:)18
b(an)c(external)f(lab)q(el)g(to)g(b)q(e)h(dra)o(wn)g(outside)f(the)g
(slice;)h(the)f(p)q(ercen)o(tage)h(of)f(the)h(pie)g(that)f(this)0
192 y(slice)i(should)g(o)q(ccup)o(y;)g(and)h(a)f(color)f(with)g(whic)o
(h)h(to)g(\014ll)g(the)g(slice.)87 292 y Fi(fun)21 b(slice)g(lab)g
(percent)g(color)f(=)153 342 y(let)h(fun)g(makeslice)f(radius)g
(startAngle)g(=)283 391 y(let)h(val)h(endAngle)e(=)h(startAngle)f(+)i
(\(\(percent/100.0\))c(*)k(360.0\))370 441 y(val)g(pieSlice)e(=)h
(\(wedge)g(radius)f(startAngle)g(endAngle\))370 491 y(val)i(filledPie)e
(=)h(pieSlice)f(withFillColor)f(color)370 541 y(val)j(degAngle)e(=)h
(\(startAngle)f(+)h(endAngle\)/2.0)370 591 y(val)h(rotateAngle)d(=)j
(\(degAngle/360.0\))o(*6.28)o(318)370 640 y(val)g(labelDist)e(=)h
(radius/2.5)370 690 y(val)h(xPt)f(=)g(\(radius+labelDist\)*)o(\(cos)d
(rotateAngle\))370 740 y(val)k(yPt)f(=)g(\(radius+labelDist\)*)o(\(sin)
d(rotateAngle\))370 790 y(val)k(extLabel)e(=)h(\(text)g(lab\))g(at)g
(\(xPt,)g(yPt\))283 840 y(in)h(filledPie)e(seq)h(extLabel)283
890 y(end)153 939 y(in)g(\(percent,)f(makeslice\))153
989 y(end;)71 1095 y Fn(Here)15 b(is)g(an)g(example:)191
1749 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.384779479780635
0.0 0.0 0.384779479780635  62.00027  72.8854   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 0.0
72.0 arc closepath gsave 0.0 1.0 1.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 608 1275
a(Northeast)191 1749 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.384779479780635
0.0 0.0 0.384779479780635  62.00027  72.8854   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 72.0
162.0 arc closepath gsave 0.0 1.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
207 1179 a(Southeast)191 1749 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.384779479780635
0.0 0.0 0.384779479780635  62.00027  72.8854   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 162.0
270.0 arc closepath gsave 0.0 0.0 1.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end


@endspecial 108 1649 a(Midw)o(est)191 1749 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.384779479780635
0.0 0.0 0.384779479780635  62.00027  72.8854   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 270.0
306.0 arc closepath gsave 1.0 0.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 446 1765 a(South)o(w)o(est)191
1749 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.384779479780635
0.0 0.0 0.384779479780635  62.00027  72.8854   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 306.0
360.0 arc closepath gsave 1.0 1.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 630 1606
a(North)o(w)o(est)905 1388 y Fi(pieChart)21 b(5.0)949
1437 y([\(slice)f("Northeast")g(20.0)h(cyan\),)971 1487
y(\(slice)f("Southeast")g(25.0)h(green\),)971 1537 y(\(slice)f
("Midwest")g(30.0)h(blue\),)971 1587 y(\(slice)f("Southwest")g(10.0)h
(red\),)971 1637 y(\(slice)f("Northwest")g(15.0)h(yellow\)];)71
1855 y Fn(The)i(de\014nition)g(of)f(a)h(slice-dra)o(wing)e(function)i
(lea)o(v)o(es)f(a)h(go)q(o)q(d)g(deal)f(of)h(\015exibilit)o(y)l(.)42
b(The)23 b(function)0 1912 y Fh(explodeSlice)14 b Fn(tak)o(es)g(a)h
(slice)g(and)g(mo)o(v)o(es)e(it)i(a)g(certain)f(distance)h(a)o(w)o(a)o
(y)f(from)f(the)j(cen)o(ter)f(of)g(the)g(pie:)87 2011
y Fi(fun)21 b(explodeSlice)f(\(percent,)g(picfun\))g(=)153
2061 y(\(percent,)f(fn)j(rad)f(=>)g(\(fn)h(startAngle)d(=>)414
2111 y(let)i(val)g(angleDelta)f(=)i(\(\(percent/100.0\))c(*)k
(360.0\)/2.0)501 2161 y(val)f(centerAngle)f(=)i(startAngle)d(+)j
(angleDelta)501 2210 y(val)f(centerUnitVec)f(=)h(\(dcos)g(centerAngle,)
e(dsin)i(centerAngle\))414 2260 y(in)g(\(picfun)g(rad)g(startAngle\))
501 2310 y(offsetBy)f(\(scaleVec)g(1.0)h(centerUnitVec\))414
2360 y(end\)\);)937 2708 y Fn(10)p eop
%%Page: 11 11
11 10 bop 105 624 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.337006227510317
0.0 0.0 0.337006227510317  54.30229  72.95573   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 0.0
72.0 arc closepath gsave 0.0 1.0 1.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
458 173 a Fn(Northeast)105 624 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.337006227510317
0.0 0.0 0.337006227510317  49.94902  81.49947   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 72.0
162.0 arc closepath gsave 0.0 1.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end


@endspecial 89 53 a(Southeast)105 624 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.337006227510317
0.0 0.0 0.337006227510317  54.30229  72.95573   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 162.0
270.0 arc closepath gsave 0.0 0.0 1.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 22 501 a(Midw)o(est)105 624
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.337006227510317
0.0 0.0 0.337006227510317  57.2654  63.83632   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 270.0
306.0 arc closepath gsave 1.0 0.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 328 640 a(South)o(w)o(est)105
624 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.337006227510317
0.0 0.0 0.337006227510317  54.30229  72.95573   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  0.0 0.0 2 copy moveto 142.26372 .5 CLW mul sub 306.0
360.0 arc closepath gsave 1.0 1.0 0.0 setrgbcolor fill  grestore gsave
0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 477 464
a(North)o(w)o(est)752 263 y Fi(pieChart)20 b(5.0)796
313 y([\(slice)g("Northeast")f(20.0)i(cyan\),)817 363
y(explodeSlice)f(\(slice)g("Southeast")g(25.0)h(green\),)817
412 y(\(slice)g("Midwest")f(30.0)h(blue\),)817 462 y(explodeSlice)f
(\(slice)g("Southwest")g(10.0)h(red\),)817 512 y(\(slice)g("Northwest")
e(15.0)i(yellow\)];)71 730 y Fn(W)l(e)15 b(can)g(also)f(c)o(hange)i
(the)f(shap)q(e)h(of)e(a)h(slice.)20 b(This)15 b(function)g(dra)o(ws)f
(triangular)f(slices.)87 830 y Fi(fun)21 b(triangleSlice)e(lab)j
(percent)e(color)h(=)153 880 y(let)g(fun)g(makeslice)f(radius)g
(startAngle)g(=)283 930 y(let)h(val)h(endAngle)e(=)h(startAngle)f(+)i
(\(\(percent/100.0\))c(*)k(360.0\))370 979 y(val)g(unitVec1)e(=)h
(\(dcos)g(startAngle,)f(dsin)h(startAngle\))370 1029
y(val)h(unitVec2)e(=)h(\(dcos)g(endAngle,)f(dsin)h(endAngle\))370
1079 y(val)h(pieSlice)e(=)h(\(triangle)f(\(0.0,0.0\))915
1129 y(\(scaleVec)g(radius)h(unitVec1\))915 1179 y(\(scaleVec)f(radius)
h(unitVec2\)\))370 1229 y(val)h(filledPie)e(=)h(pieSlice)f
(withFillColor)f(color)370 1278 y(val)j(midAngle)e(=)h(\(startAngle)f
(+)h(endAngle\)/2.0)370 1328 y(val)h(unitVec3)e(=)h(\(dcos)g(midAngle,)
f(dsin)h(midAngle\))370 1378 y(val)h(bisect)e(=)i(midpoint)e
(\(scaleVec)g(radius)g(unitVec1\))850 1428 y(\(scaleVec)g(radius)g
(unitVec2\))370 1478 y(val)i(labelLoc)e(=)h(bisect)g(++)g(\(scaleVec)f
(\(radius/2.5\))g(unitVec3\))370 1527 y(val)i(extLabel)e(=)h(\(text)g
(lab\))g(at)g(labelLoc)283 1577 y(in)h(filledPie)e(seq)h(extLabel)283
1627 y(end)153 1677 y(in)g(\(percent,)f(makeslice\))153
1727 y(end;)104 2377 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.43641944647353
0.0 0.0 0.43641944647353  59.04803  79.77716   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 43.96204 135.30074 142.26372 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.0 1.0 1.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial
503 1878 a Fn(Northeast)104 2377 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.43641944647353
0.0 0.0 0.43641944647353  59.04803  79.77716   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ -135.30074 43.96204 43.96204 135.30074 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.0 1.0 0.0 setrgbcolor
fill  grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end


@endspecial 122 1807 a(Southeast)104 2377 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.43641944647353
0.0 0.0 0.43641944647353  59.04803  79.77716   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 0.0 -142.26372 -135.30074 43.96204 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.0 0.0 1.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 60 2211 a(Midw)o(est)104 2377
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.43641944647353
0.0 0.0 0.43641944647353  59.04803  79.77716   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 83.61987 -115.09433 0.0 -142.26372 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 1.0 0.0 0.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 355 2393 a(South)o(w)o(est)104
2377 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.43641944647353
0.0 0.0 0.43641944647353  59.04803  79.77716   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 142.26372 0.0 83.61987 -115.09433 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 1.0 1.0 0.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 543 2213
a(North)o(w)o(est)819 2016 y Fi(pieChart)g(5.0)862 2066
y([\(triangleSlice)f("Northeast")g(20.0)i(cyan\),)884
2115 y(\(triangleSlice)e("Southeast")g(25.0)i(green\),)884
2165 y(\(triangleSlice)e("Midwest")h(30.0)h(blue\),)884
2215 y(\(triangleSlice)e("Southwest")g(10.0)i(red\),)884
2265 y(\(triangleSlice)e("Northwest")g(15.0)i(yellow\)];)71
2483 y Fh(explodeSlice)13 b Fn(w)o(orks)h(for)h(an)o(y)g(slice-dra)o
(wing)f(function:)937 2708 y(11)p eop
%%Page: 12 12
12 11 bop 0 624 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.375970007607758
0.0 0.0 0.375970007607758  55.72545  78.90105   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 43.96204 135.30074 142.26372 0.0 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.0 1.0 1.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial
351 155 a Fn(Northeast)0 624 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.375970007607758
0.0 0.0 0.375970007607758  50.869  88.43246   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ -135.30074 43.96204 43.96204 135.30074 0.0 0.0
 /Lineto /lineto load def false Polygon  gsave 0.0 1.0 0.0 setrgbcolor
fill  grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke
 grestore end


@endspecial 2 54 a(Southeast)0 624 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.375970007607758
0.0 0.0 0.375970007607758  55.72545  78.90105   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 0.0 -142.26372 -135.30074 43.96204 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 0.0 0.0 1.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end


@endspecial -30 441 a(Midw)o(est)0 624 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.375970007607758
0.0 0.0 0.375970007607758  59.0311  68.72707   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 83.61987 -115.09433 0.0 -142.26372 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 1.0 0.0 0.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 237 640 a(South)o(w)o(est)0
624 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. 0. 0. setrgbcolor   [0.375970007607758
0.0 0.0 0.375970007607758  55.72545  78.90105   ] concat  0.8 SLW 0.
0. 0. setrgbcolor  [ 142.26372 0.0 83.61987 -115.09433 0.0 0.0  /Lineto
/lineto load def false Polygon  gsave 1.0 1.0 0.0 setrgbcolor fill
 grestore gsave 0.8 SLW 0. 0. 0. setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 385 443
a(North)o(w)o(est)660 263 y Fi(pieChart)21 b(5.0)704
313 y([\(triangleSlice)e("Northeast")g(20.0)i(cyan\),)726
363 y(explodeSlice)e(\(triangleSlice)g("Southeast")h(25.0)h(green\),)
726 412 y(\(triangleSlice)e("Midwest")h(30.0)h(blue\),)726
462 y(explodeSlice)e(\(triangleSlice)g("Southwest")h(10.0)h(red\),)726
512 y(\(triangleSlice)e("Northwest")g(15.0)i(yellow\)];)0
767 y Fo(7)67 b(What)23 b(a)f(picture)i(is)f(\(sligh)n(t)g(return\))0
869 y Fn(The)14 b(pro)q(cess)h(whereb)o(y)f(w)o(e)g(arriv)o(ed)g(at)f
(the)h(de\014nition)g(of)g Fk(Pictur)n(e)g Fn(w)o(as)g(not)f(as)h(smo)q
(oth)f(as)h(w)o(e)g(describ)q(ed)h(it)0 925 y(in)g(section)g(3.)k(Let)d
(us)f(con)o(tin)o(ue)g(the)g(analysis)f(w)o(e)h(b)q(egan)h(there,)f
(and)g(no)o(w)g(consider)g(the)g(PIC)g(picture)87 1024
y Fi(box)21 b(at)h(last)f(box.ne)0 1129 y Fn(This)16
b(places)g(a)g(new)h(b)q(o)o(x)f(at)g(the)g(northeast)g(corner)g(of)g
(the)h(most)d(recen)o(tly)i(dra)o(wn)g(b)q(o)o(x.)24
b(It)16 b(suggests)g(that)0 1185 y(pictures)j(ma)o(y)e(dep)q(end)j(up)q
(on)g(the)f(en)o(tire)f(set)g(of)h(previously-dra)o(wn)f(pictures.)30
b(Assuming)18 b(these)h(are)f(all)0 1242 y(collected)d(in)o(to)f(an)h
(en)o(vironmen)o(t,)e(our)i(de\014nition)g(of)g(a)g(picture)g(w)o(ould)
g(b)q(ecome)205 1347 y Fk(Pictur)n(e)g Fn(=)h Fk(Envir)n(onment)d
Ff(!)j Fn(\(\()p Fk(Gr)n(aphicsContext)e Ff(!)i Fk(BitMap)p
Fn(\))28 b Ff(\002)g Fk(Envir)n(onment)p Fn(\))0 1452
y(\(Our)14 b(curren)o(t)g(de\014nition)g(do)q(es)g(not)g(allo)o(w)e
(the)i(de\014ninition)g(of)g Fh(last)23 b(box)p Fn(,)13
b(precisely)h(b)q(ecause)h(pictures)f(do)0 1508 y(not)h(see)g(an)g
(incoming)f(en)o(vironmen)o(t.)k(The)d(result)g(is)g(that)f(w)o(e)h(m)o
(ust)e(assign)i(a)g(picture)g(to)f(an)h(ML)h(v)m(ariable)0
1565 y(b)q(efore)f(w)o(e)g(can)h(access)f(one)g(of)g(its)g(named)f(p)q
(oin)o(ts.\))71 1621 y(This)g(is)h(the)g(\\ob)o(vious")f(de\014nition)h
(of)g Fk(Pictur)n(e)p Fn(,)g(and)g(it)g(w)o(as)f(the)h(\014rst)g(one)g
(w)o(e)g(used.)21 b(W)l(e)15 b(w)o(ork)o(ed)g(with)0
1677 y(it)h(for)f(quite)h(a)g(while)g(b)q(efore)h(deciding)f(it)g(w)o
(as)f(un)o(tenable.)23 b(W)l(e)17 b(still)e(b)q(eliev)o(e)h(it)f(is)h
(the)h(correct)f(de\014nition,)0 1734 y(in)f(principle,)g(but)g(it)f
(mak)o(es)g(a)h(clean)g(in)o(tegration)e(in)o(to)h(Standard)i(ML)f(imp)
q(ossible.)71 1790 y(There)j(are)g(t)o(w)o(o)f(problems)g(with)g
(de\014ning)i(pictures)f(in)h(this)e(w)o(a)o(y)l(.)29
b(The)18 b(\014rst)g(is)g(that)f(it)h(requires)g(the)0
1847 y(rede\014nition)12 b(of)g(m)o(uc)o(h)f(of)h(Standard)h(ML.)f
(Consider)g(a)g(picture)g(of)g(the)g(form)f(\(here)h(w)o(e)g(rev)o(ert)
g(to)g(FPIC-st)o(yle)0 1903 y(syn)o(tax,)i(though)h Fh(lastbox)f
Fn(is)h Fk(not)g Fn(an)g(FPIC)g(primitiv)o(e\))87 2002
y Fi(dbox)21 b(at)h(\(lastbox)e(pt)h("ne"\))0 2107 y
Fh(dbox)d Fn(is)g(a)g(picture,)g(so)g(it)g(has)g(the)g(t)o(yp)q(e)h
(giv)o(en)e(ab)q(o)o(v)o(e.)29 b Fh(lastbox)18 b Fn(is)f(a)h(function)h
(from)d(en)o(vironmen)o(ts)h(to)0 2163 y(pictures.)j(Th)o(us,)15
b Fh(pt)f Fn(m)o(ust)g(ha)o(v)o(e)h(t)o(yp)q(e)518 2268
y(\()p Fk(Envir)n(onment)e Ff(!)j Fk(Pictur)n(e)p Fn(\))e
Ff(!)i Fk(Name)f Ff(!)h Fk(Point)0 2373 y Fn(so)f(that)f(the)i
(expression)f Fh(lastbox)23 b(pt)g("ne")15 b Fn(has)g(t)o(yp)q(e)g
Fk(Envir)n(onment)f Ff(!)h Fk(Point)p Fn(.)20 b(Th)o(us,)15
b Fh(at)g Fn(has)g(t)o(yp)q(e)509 2479 y Fk(Pictur)n(e)g
Ff(\002)g Fn(\()p Fk(Envir)n(onment)f Ff(!)h Fk(Point)p
Fn(\))g Ff(!)g Fk(Pictur)n(e)71 2584 y Fn(So)g(far,)f(so)h(go)q(o)q(d.)
k(But)d(no)o(w)e(consider)937 2708 y(12)p eop
%%Page: 13 13
13 12 bop 109 79 a Fi(dbox)21 b(at)g(\(1.0,2.0\))0 186
y Fn(According)d(to)f(the)h(t)o(yp)q(e)g(of)f Fh(at)p
Fn(,)h(whic)o(h)g(w)o(e)f(just)h(agreed)g(up)q(on,)g(the)g(expression)g
Fh(\(1.0,2.0\))f Fn(m)o(ust)f(b)q(e)i(of)0 242 y(t)o(yp)q(e)d
Fk(Envir)n(onment)f Ff(!)i Fk(Point)p Fn(,)e(not)h Fk(Point)p
Fn(!)k(W)l(e)d(migh)o(t)d(de\014ne)j(a)f(function)87
342 y Fi(fun)21 b(constantPoint)e(p)j(=)g(\(fn)f(env)g(=>)g(p\);)0
448 y Fn(and)15 b(then)h(w)o(e)f(could)g(write)f(the)i(expression)f(ab)
q(o)o(v)o(e)f(as)109 547 y Fi(dbox)21 b(at)g(\(constantPoint)e
(\(1.0,2.0\)\))0 654 y Fn(This)c(is)f(anno)o(ying)h(enough,)g(but)g(no)
o(w)g(consider)109 753 y Fi(dbox)21 b(scale)g(\(\(width)f(lastbox\))g
(+)i(0.5\))0 860 y Fh(width)h(lastbox)17 b Fn(is)h(a)f(function)h(from)
e(en)o(vironmen)o(ts)h(to)g(real)g(n)o(um)o(b)q(ers,)h(but)g(then)g
(what)g(is)f(the)h(t)o(yp)q(e)g(of)0 916 y(\\)p Fh(+)p
Fn("?)23 b(It)16 b(cannot)g(ha)o(v)o(e)g(t)o(yp)q(e)g
Fk(r)n(e)n(al)p Ff(\002)p Fk(r)n(e)n(al)p Ff(!)p Fk(r)n(e)n(al)p
Fn(,)f(so)h(it)f(is)h(not)g(the)g(built-in)g(m)o(ultiplicati)o(on)d(of)
j(ML.)g(Instead,)0 973 y(it)e(is)h(a)g(new)g(m)o(ultiplication)d(op)q
(erator)i(of)h(t)o(yp)q(e)418 1079 y(\()p Fk(Envir)n(onment)f
Ff(!)h Fk(r)n(e)n(al)p Fn(\))g Ff(\002)g Fk(r)n(e)n(al)p
Ff(!)g Fn(\()p Fk(Envir)n(onment)e Ff(!)j Fk(r)n(e)n(al)p
Fn(\).)0 1185 y(Clearly)l(,)d(w)o(e)h(are)g(on)g(a)g(slipp)q(ery)g
(slop)q(e:)19 b(all)13 b(the)i(constan)o(ts)e(and)h(built-in)g(op)q
(erators)f(need)i(to)f(b)q(e)h(\\lifted")e(to)0 1242
y(the)i(t)o(yp)q(e)h Fk(Envir)n(onment)d Ff(!)j Fk(whatever)p
Fn(.)71 1298 y(That)f(is)g(the)h(\014rst)g(problem.)k(It)c(is)f(prett)o
(y)h(serious,)f(but)h(at)f(least)g(w)o(e)g(can)h(imagine)e(a)i(facilit)
o(y)e(whereb)o(y)0 1354 y(this)h(lifting)e(could)i(b)q(e)h(done)g
(automaticall)o(y)l(.)h(In)f(fact,)e(suc)o(h)i(a)f(facilit)o(y)e
(already)i(exists)f(in)h(Hask)o(ell)f([3].)71 1411 y(T)l(o)g(see)i(the)
f(other)g(problem)f(with)g(this)h(de\014nition)g(of)g
Fk(Pictur)n(e)p Fn(,)g(consider)g(this)f(example:)109
1511 y Fi(let)21 b(val)g(b)h(=)f(dbox)283 1560 y(c)h(=)f(dcircle)g(at)g
(\(b)h(pt)f("ne"\))109 1610 y(in)g(b)h(seq)f(dtriangle)f(seq)h(c)109
1660 y(end)0 1766 y Fn(The)g(ob)o(vious)g(in)o(ten)o(tion)f(is)g(that)h
(the)g(circle)g(should)g(b)q(e)h(dra)o(wn)e(at)h(the)g(northeast)f
(corner)h(of)g(the)g(b)q(o)o(x.)0 1823 y(Ho)o(w)o(ev)o(er,)13
b(this)g(is)g(not)g(what)g(will)g(happ)q(en.)20 b(Rather,)14
b(at)f(the)h(time)e(that)h Fh(c)g Fn(is)h(dra)o(wn)f(\(that)f(is,)i
(just)f(after)g(the)0 1879 y(triangle)h(is)h(dra)o(wn\),)g(it)g(will)f
(lo)q(ok)h(in)g(the)h(en)o(vironmen)o(t,)d(then)j(calculate)f(where)h
(the)f(northeast)g(p)q(oin)o(t)g(of)g(a)0 1936 y(b)q(o)o(x)i
Fk(would)h(b)n(e)e Fn(if)g(dra)o(wn)g(at)g(that)g(time,)f(and)i(then)g
(dra)o(w)f(the)h(circle)f(there.)25 b(In)17 b(short,)f(there)h(is)f(no)
h(actual)0 1992 y(connection)e(b)q(et)o(w)o(een)h(b)q(o)o(x)f
Fh(b)g Fn(and)g(circle)g Fh(c)p Fn(.)71 2049 y(Instead,)g(something)e
(more)h(lik)o(e)g(this)h(w)o(ould)g(b)q(e)g(needed:)109
2148 y Fi(let)21 b(val)g(b)h(=)f(namePic)g(dbox)g("b")283
2198 y(c)h(=)f(dcircle)g(at)g(\(lastpic)f("b")i(pt)f("ne"\))109
2248 y(in)g(b)h(seq)f(dtriangle)f(seq)h(c)109 2298 y(end)0
2404 y Fn(A)o(t)e(the)h(time)f Fh(c)g Fn(is)h(dra)o(wn,)g
Fh(lastpic)f Fn(\014nds)h(the)g(most)e(recen)o(t)i(picture)g(named)f
Fh(b)h Fn(and)g(dra)o(ws)f(the)h(circle)0 2460 y(there.)g(Ev)o(en)15
b(this)g(is)f(not)h(a)g(direct)f(connection)h(b)q(et)o(w)o(een)h
Fh(b)f Fn(and)g Fh(c)p Fn(;)f(if)h Fh(dtriangle)f Fn(w)o(ere)h(instead)
f(a)h(picture)0 2517 y(con)o(taining)f(a)h(p)q(oin)o(t)g(named)f
Fh(b)p Fn(,)h(the)g(circle)g(w)o(ould)f(b)q(e)i(dra)o(wn)f(there.)71
2573 y(In)g(an)o(y)g(case,)g(w)o(e)g(\014nally)g(abandoned)g(this)g
(approac)o(h)g(as)g(b)q(eing)g(to)q(o)g(confusing.)937
2708 y(13)p eop
%%Page: 14 14
14 13 bop 71 79 a Fn(So,)14 b(our)h(language)g(design)g(approac)o(h)g
(do)q(es)h(not)f(alw)o(a)o(ys)e(w)o(ork)i(as)f(w)o(ell)h(as)g(w)o(e)g
(w)o(ould)f(hop)q(e.)21 b(W)l(e)16 b(w)o(ould)0 136 y(lik)o(e)9
b(to)h(mak)o(e)f(t)o(w)o(o)g(observ)m(ations,)h(ho)o(w)o(ev)o(er,)g(b)q
(efore)h(ending)f(this)g(discussion.)18 b(One)11 b(is)e(that)h(the)g(t)
o(w)o(o)f(problems)0 192 y(w)o(e'v)o(e)16 b(describ)q(ed)h(are)f
(problems)f(with)h(in)o(tegrating)f(the)h(new)h(primitiv)o(es)d(in)o
(to)h(the)i(existing)e(language.)23 b(In)0 249 y(particular,)18
b(the)g(problems)f(arise)h(from)f(the)h(inescapable)h(distinction)e(b)q
(et)o(w)o(een)i(ML's)f(ordinary)g(v)m(ariable)0 305 y(en)o(vironmen)o
(t)d(and)i(the)h(picture)f(en)o(vironmen)o(ts)e(created)i(b)o(y)g(FPIC)
f(primitiv)o(es.)23 b(Neither)17 b(problem)f(w)o(ould)0
362 y(exist,)e(as)h(far)g(as)f(w)o(e)h(can)h(see,)f(if)f(FPIC)h(w)o
(ere)g(designed)h(as)f(a)g(new)g(language.)71 418 y(Our)h(second)g
(observ)m(ation)g(is)f(that)h(the)g(tec)o(hnical)f(problem)g(describ)q
(ed)i(in)f(this)f(section)h(should)g(not)f(b)q(e)0 474
y(considered)f(to)e(imply)f(that)i(the)g(language)f(design)h(is)g(a)g
(failure.)18 b(W)l(e)13 b(still)f(consider)h(that)f(our)h(original)e
(thesis)0 531 y(has)k(b)q(een)h(substan)o(tially)e(b)q(orne)h(out.)0
674 y Fo(8)67 b(Related)23 b(W)-6 b(ork)0 776 y Fn(W)l(e)20
b(ha)o(v)o(e)f(ac)o(kno)o(wledged)g(our)h(debt)g(to)f(Kernighan's)h
(PIC)g([4)o(],)g(and)g(hop)q(efully)g(made)f(clear)g(ho)o(w)g(FPIC)0
832 y(di\013ers.)j(There)17 b(are)f(quite)g(a)g(few)g(languages)f(for)h
(sp)q(ecifying)g(pictures.)23 b(W)l(e)16 b(should)g(particularly)f(men)
o(tion)0 888 y(Timoth)o(y)i(V)l(an)j(Zandt's)f(PST)l(ric)o(ks)g([9)o
(],)h(a)f(collection)f(of)h(T)l(eX)h(macros,)e(b)q(ecause)j(FPIC)e(is)g
(implemen)o(ted)0 945 y(using)c(them)f(\(a)h Fk(BitMap)h
Fn(is)e(actually)g(just)h(a)g(sequence)i(of)e(PST)l(ric)o(ks)g(macro)e
(calls\).)19 b(Another)d(is)e(Kristo\013er)0 1001 y(Rose's)h
Fk(xyPic)g Fn([8)o(])g(pac)o(k)m(age.)71 1058 y(The)f(closest)g
(relativ)o(es)f(of)h(this)g(w)o(ork)f(are)i(Chailloux)e(and)h(Suarez's)
h Fk(mlPicT)m(eX)d Fn([2])i(and)g(Simon)f(P)o(eyton)0
1114 y(Jones)22 b(and)g(Sigb)s(jorn)e(Finne's)h(\\simple)f(structured)i
(graphics)f(mo)q(del")f([7)o(].)39 b(Both)21 b(are)g(em)o(b)q(eddings)g
(of)0 1171 y(picture-dra)o(wing)d(primitiv)o(es)e(in)i(a)g(functional)g
(language)g(\(ML)g(and)h(Hask)o(ell,)f(resp)q(ectiv)o(ely\).)29
b(In)19 b(P)o(eyton)0 1227 y(Jones)e(and)g(Finne's)f(w)o(ork,)g(the)h
(t)o(yp)q(e)g Fk(Pictur)n(e)f Fn(con)o(tains)g(abstract)g(syn)o(tax)f
(trees)i(of)f(picture)h(primitiv)o(es;)d(a)0 1284 y(program)f(pro)q
(duces)j(suc)o(h)g(a)f(tree,)f(and)i(then)f(a)g(renderer)h(tra)o(v)o
(erses)e(this)g(tree)h(and)h(pro)q(duces)g(the)f(picture.)71
1340 y(W)l(e)g(ha)o(v)o(e)f(emphasized)g(in)h(this)f(pap)q(er)i(the)f
(searc)o(h)g(for)f(an)h(appropriate)f(de\014nition)g(of)h
Fk(Pictur)n(e)p Fn(,)f(and)h(w)o(e)0 1397 y(consider)g(this)f(an)h(imp)
q(ortan)o(t)d(step)j(in)g(the)g(language)f(design,)g(but)h(this)g(is)f
(a)h(philosophical)e(issue.)20 b(\(P)o(eyton)0 1453 y(Jones)15
b(and)g(Finne)g(ma)o(y)e(also)g(ha)o(v)o(e)i(considered)g(this)f(issue)
g(and)h(then)g(implemen)o(ted)e(the)i(language)f(as)g(they)0
1509 y(did;)h(they)f(do)h(not)f(men)o(tion)f(it.)19 b(Chailloux)14
b(and)h(Suarez)g(sa)o(y)f(nothing)g(ab)q(out)h(what)f(the)g(t)o(yp)q(e)
h Fk(Pictur)n(e)g Fn(is)f(in)0 1566 y(their)h(system.\))71
1622 y(The)k(substan)o(tiv)o(e)g(di\013erence)h(b)q(et)o(w)o(een)g
(FPIC)f(and)h(these)g(other)f(t)o(w)o(o)f(systems)g(is)h(that)g(FPIC)h
(has)f(a)0 1679 y(naming)c(facilit)o(y)g(for)h(p)q(oin)o(ts)h(and)g
(pictures)f(that)g(they)h(lac)o(k.)24 b(This)17 b(comes)e(directly)i
(from)e(PIC.)h(W)l(e)h(think)0 1735 y(this)c(is)g(a)h(signi\014can)o(t)
f(di\013erence,)h(b)q(oth)f(b)q(ecause)i(the)f(facilit)o(y)e(is)h(in)h
(fact)f(used)h(hea)o(vily)f(in)h(our)f(examples)g(\(as)0
1792 y(it)h(w)o(as)h(in)g(PIC\))g(and)g(b)q(ecause)h(it)f(represen)o
(ts)g(the)g(most)f(in)o(teresting)g(c)o(hallenge)g(in)h(the)h(language)
e(design.)0 1935 y Fo(9)67 b(Conclusions)0 2036 y Fn(W)l(e)20
b(ha)o(v)o(e)g(outlined)g(an)g(approac)o(h)g(to)g(sp)q(ecial-purp)q
(ose)h(language)f(design)g(andn)h(implemen)o(tat)o(ion)c(using)0
2093 y(the)e(w)o(ell-established)e(tec)o(hnology)h(of)g(functional)g
(programming)d(languages.)19 b(Our)c(recommendation)d(is)j(to)0
2149 y(consider)g(carefully)e(the)i(t)o(yp)q(e)g(of)f(primitiv)o(e)e(v)
m(alues)j(p)q(eculiar)f(to)g(the)h(domain,)e(and)h(em)o(b)q(ed)h(this)f
(t)o(yp)q(e)h(in)f(an)0 2206 y(existing)i(functional)h(language,)g(suc)
o(h)g(as)g(Standard)h(ML)f(or)g(Hask)o(ell.)25 b(W)l(e)17
b(illustrated)f(this)h(pro)q(cess)h(with)0 2262 y(resp)q(ect)11
b(to)e(FPIC,)h(a)g(language)g(for)f(picture-dra)o(wing)h(inspired)g(b)o
(y)g(the)h(language)e(PIC,)h(and)h(illustrated)d(some)0
2319 y(of)16 b(its)f(b)q(ene\014ts.)25 b(FPIC)16 b(is)g(not)g(p)q
(erfect,)g(but)h(w)o(e)f(w)o(ould)f(argue)h(that)g(the)g(qualit)o
(y-to-cost-of-dev)o(elopmen)o(t)0 2375 y(ratio)e(is)g(v)o(ery)h(high.)
937 2708 y(14)p eop
%%Page: 15 15
15 14 bop 0 79 a Fo(References)23 181 y Fn([1])21 b(Adob)q(e)13
b(Systems)e(Inc.)i Fc(P)o(ostScript)e(Language)h(Reference)i(Man)o(ual)
p Fn(.)d(Addison)h(W)l(esley)l(,)g(second)h(edition,)93
237 y(1990.)23 331 y([2])21 b(Emman)o(uel)13 b(Chailloux)h(and)h
(Ascander)h(Suarez.)f Fc(mlPicT)1113 341 y(E)1137 331
y(X,)g(a)g(picture)g(en)o(vironmen)o(t)e(for)i(LaT)1798
341 y(E)1823 331 y(X)p Fn(.)23 425 y([3])21 b(P)l(.)f(Hudak,)g(S.)f(P)o
(eyton)g(Jones,)h(and)g(P)l(.)f(W)l(adler)g(\(eds.\),)g
Fc(Rep)q(ort)h(on)f(the)h(Programm)o(ing)c(Language)93
481 y(Hask)o(ell)f(\(V)l(ersion)f(1.2\))p Fn(,)g(A)o(CM)g(SIGPLAN)i
(Notices,)e(27\(5\),)g(Ma)o(y)g(1992.)23 575 y([4])21
b(B.W.)15 b(Kernighan.)g Fc(PIC:)g(A)g(crude)h(graphics)e(language)h
(for)f(t)o(yp)q(esetting)p Fn(.)g(Bell)h(Lab)q(oratory)l(,)f(1981.)23
669 y([5])21 b(Donald)15 b(E.)g(Kn)o(uth.)g Fc(The)g(T)584
679 y(E)610 669 y(Xb)q(o)q(ok)p Fn(.)g(Addison-W)l(esley)g(Co.,)f
(Inc.,)h(Reading,)h(MA,)e(1984)23 763 y([6])21 b(Robin)c(Milner,)f
(Mads)g(T)l(ofte,)g(and)g(Rob)q(ert)h(Harp)q(ert,)f Fc(The)h
(De\014nition)f(of)g(Standard)g(ML)p Fn(,)g(The)h(MIT)93
819 y(Press,)e(Cam)o(bridge,)e(MA,)h(1990.)23 913 y([7])21
b(Simon)14 b(P)o(eyton)h(Jones)h(and)f(Sigb)s(jorn)f(Finne.)h
Fc(Pictures:)k(A)d(Simple)e(Structured)h(Graphics)g(Mo)q(del)p
Fn(.)23 1007 y([8])21 b(Kristo\013er)14 b(H.)h(Rose.)g
Fc(XyPic)g(User's)g(Guide)p Fn(.)g(1995.)23 1101 y([9])21
b(Timoth)o(y)13 b(V)l(an)j(Zandt.)e Fc(PST)l(ric)o(ks:)20
b(P)o(ostScript)14 b(macros)f(for)i(Generic)g(T)1368
1110 y(E)1393 1101 y(X)p Fn(.)g(1993.)937 2708 y(15)p
eop
%%Page: 16 16
16 15 bop 0 79 a Fo(App)r(endix)24 b(A)0 181 y Fn(W)l(e)17
b(brie\015y)f(review)g(some)f(asp)q(ects)i(of)f(ML)g(syn)o(tax,)g
(enough)g(to)g(allo)o(w)f(most)f(of)i(the)h(examples)e(to)h(b)q(e)h
(read)0 237 y(b)o(y)e(someone)f(not)h(familiar)d(with)j(ML.)71
294 y(W)l(e)g(use)g(the)h(\014rst)e(example)h(to)f(illustrate)f(some)h
(basic)h(asp)q(ects)g(of)g(ML)g(syn)o(tax:)87 393 y Fi(box)21
b(1.0)h(2.0)f(hseq)g(circle)f(1.5)h(vseq)196 443 y(\(label)g("Hello!")f
(\(oval)h(2.0)g(1.0\)\);)0 549 y Fn(F)l(unction)16 b(application)f(in)h
(ML)g(is)f(indicated)h(b)o(y)g(juxtap)q(osition.)22 b(Here,)16
b Fh(box)f Fn(is)h(a)g(t)o(w)o(o-argumen)o(t)d(function)0
606 y(applied)i(to)f(argumen)o(ts)f Fh(1.0)h Fn(and)h
Fh(2.0)p Fn(,)f Fh(circle)g Fn(is)h(a)f(one-argumen)o(t)g(function,)g
Fh(label)g Fn(and)h Fh(oval)g Fn(are)f(t)o(w)o(o-)0 662
y(argumen)o(t)h(functions.)23 b Fh(hseq)16 b Fn(and)h
Fh(vseq)f Fn(are)g(in\014x)h(op)q(erators.)23 b(ML)17
b(allo)o(ws)d(user-de\014ned)19 b(in\014x)d(op)q(erators,)0
719 y(whic)o(h)h(can)h(either)f(b)q(e)h(iden)o(ti\014ers)e(\(as)h
(here\))g(or)g(made)g(up)g(en)o(tirely)g(of)g(sp)q(ecial)g(c)o
(haracters)f(\(for)g(example,)0 775 y(w)o(e)f(use)g Fh(++)g
Fn(for)g(addition)f(of)h(v)o(ectors\).)71 832 y(T)l(op)g(lev)o(el)f
(de\014nitions)h(of)g(v)m(ariables)g(are)f(signalled)h(b)o(y)g(the)g(w)
o(ord)f Fh(val)p Fn(,)h(as)g(in)87 931 y Fi(val)21 b(nose)g(=)h
(dtriangle;)0 1038 y Fn(F)l(unctions)15 b(are)g(usually)f(in)o(tro)q
(duced)i(b)o(y)f(the)g(k)o(eyw)o(ord)g Fh(fun)p Fn(,)f(as)h(in)87
1137 y Fi(fun)21 b(drawtree)f(root)h(subtrees)g(=)g(...)71
1243 y Fn(The)15 b Fh(let)g Fn(expression)g(is)g(used)g(to)g(in)o(tro)q
(duce)g(a)g(temp)q(orary)e(name.)704 1343 y Fi(let)21
b(val)h Fb(v)h Fi(=)f Fb(e)985 1349 y Fa(1)1025 1343
y Fi(in)g Fb(e)1110 1349 y Fa(2)1150 1343 y Fi(end)0
1449 y Fn(binds)15 b(the)h(v)m(alue)f(of)g Fe(e)390 1456
y Fj(1)425 1449 y Fn(to)g Fe(v)h Fn(and)g(then)f(ev)m(aluates)g
Fe(e)928 1456 y Fj(2)948 1449 y Fn(,)g(returning)g(its)f(v)m(alue.)71
1506 y(Structures)21 b(are)g(of)g(t)o(w)o(o)g(kinds:)32
b(tuples)21 b(and)h(lists.)38 b(T)l(uples)22 b(are)f(written)f(with)h
(paren)o(theses,)i(as)e(in)0 1562 y Fh(\(1.0,)i(1.5\))p
Fn(.)c(Lists)c(are)g(written)f(with)h(square)g(brac)o(k)o(ets,)f(as)h
(in)g Fh([dbox,)23 b(dcircle,)g(dbox])p Fn(.)71 1619
y(W)l(e)e(o)q(ccasionally)g(use)h(the)f(syn)o(tax)g Fh(fn)j
Fe(v)r(ar)g Fh(=>)g Fe(expr)e Fn(to)f(de\014ne)i(functions)e(anon)o
(ymously)l(,)h(usually)0 1675 y(when)17 b(applying)e
Fh(map)p Fn(.)23 b(Th)o(us,)16 b Fh(map)g Fn(\()p Fh(fn)23
b Fe(v)r(ar)h Fh(=>)g Fe(expr)q Fn(\))16 b Fe(L)g Fn(applies)g(the)g
(function)g(that)g(tak)o(es)f Fe(v)r(ar)i Fn(to)e Fe(expr)0
1732 y Fn(to)g(eac)o(h)g(elemen)o(t)f(of)h(the)g(list)f
Fe(L)p Fn(.)937 2708 y(16)p eop
%%Page: 17 17
17 16 bop 0 79 a Fo(App)r(endix)24 b(B)0 181 y Fn(The)15
b(follo)o(wing)d(are)j(the)f(FPIC)h(primitiv)o(es)d(used)j(in)g(this)f
(pap)q(er.)20 b(This)14 b(represen)o(ts)h(ab)q(out)g(one)f(third)h(of)f
(the)0 237 y(total)g(n)o(um)o(b)q(er)g(of)h(FPIC)g(primitiv)o(es.)71
294 y(F)l(or)i(eac)o(h)i(primitiv)o(e,)d(w)o(e)i(giv)o(e)f(a)h(generic)
h(call)e(of)h(that)g(primitiv)o(e,)e(giving)h(the)h(argumen)o(ts)f(in)h
(italics.)0 350 y(The)g(form)f(of)h(the)g(call)f(sho)o(ws)h(whether)g
(or)g(not)g(the)g(primitiv)o(e)e(is)h(in\014x.)29 b(The)19
b(names)e(of)h(the)g(argumen)o(ts)0 407 y(indicate)e(their)f(t)o(yp)q
(es:)22 b Fk(pic)16 b Fn(for)g(pictures,)g Fk(pt)g Fn(for)f(p)q(oin)o
(ts,)h Fk(i)g Fn(for)f(in)o(tegers,)h Fk(r)g Fn(for)f(reals,)g
Fk(f)i Fn(for)e(functions,)h(and)0 463 y Fk(str)f Fn(for)g(quoted)g
(strings.)110 565 y Fk(pt1)h Fh(++)f Fk(pt2)299 b Fn(Addition)15
b(of)f(p)q(oin)o(ts)110 622 y Fk(pt1)i Fh(--)f Fk(pt2)299
b Fn(Subtraction)15 b(of)f(p)q(oin)o(ts)110 678 y Fh(addNamedPics)g
Fk(pic)h Fn([\()p Fk(str1)p Fn(,)f Fk(pic1)p Fn(\),)h
Fe(:)8 b(:)g(:)n Fn(])610 735 y(Add)16 b(the)f(list)f(of)h(named)f
(pictures)h(to)g Fk(pic)p Fn('s)g(en)o(vironmen)o(t)110
791 y(\()p Fk(pic1)p Fn(,)g Fk(pt1)p Fn(\))g Fh(align)g
Fn(\()p Fk(pic2)p Fn(,)f Fk(pt2)p Fn(\))610 848 y(Place)j
Fk(pic1)g Fn(and)g Fk(pic2)p Fn(,)g(mo)o(ving)e Fk(pic2)i
Fn(so)g(that)f(its)g(p)q(oin)o(t)h Fk(pt2)g Fn(coin-)610
904 y(cides)e(with)g Fk(pt1)h Fn(on)f Fk(pic1)110 961
y Fh(arrow)g Fk(pt1)g(pt2)228 b Fn(Arro)o(w)14 b(from)g
Fk(pt1)h Fn(to)g Fk(pt2)110 1017 y(pic)g Fh(at)g Fk(pt)326
b(pic)15 b Fn(translated)f(so)h(that)f(its)h(reference)g(\(south)o(w)o
(est\))f(p)q(oin)o(t)g(is)h(at)g Fk(pt)110 1073 y Fh(bezier)f
Fk(pt1)i(pt2)g(pt3)g(pt4)610 1130 y Fn(Bezier)f(curv)o(e)h(from)d
Fk(pt1)j Fn(to)e Fk(pt4)i Fn(with)f(con)o(trol)f(p)q(oin)o(ts)g
Fk(pt2)i Fn(and)f Fk(pt3)110 1186 y Fh(box)g Fk(r1)g(r2)314
b Fn(Bo)o(x)15 b(of)g(width)f Fk(r1)i Fn(and)f(heigh)o(t)g
Fk(r2)110 1243 y Fh(center)f Fk(pic)284 b Fn(The)15 b(cen)o(ter)h(of)e
Fk(pic)p Fn(,)h(calculated)g(from)e(its)i(b)q(ounding)g(b)q(o)o(x)110
1299 y Fk(pic)g Fh(centeredAt)f Fk(pt)135 b(pic)15 b
Fn(translated)f(so)h(that)f(its)h(cen)o(ter)g(is)g(at)f
Fk(pt)110 1356 y Fh(circle)g Fk(r)323 b Fn(Circle)14
b(of)h(radius)g Fk(r)110 1412 y Fh(dbox)404 b Fn(Bo)o(x)15
b(of)g(default)f(size)h(\(1.618034)e Ff(\002)i Fn(1.0\))110
1469 y Fh(dcircle)332 b Fn(Circle)14 b(of)h(default)g(radius)g(\(1.0\))
110 1525 y Fh(dcos)g Fk(r)370 b Fn(Cosine)15 b(of)f Fk(r)i
Fn(\(in)e(degrees\))110 1582 y Fh(doval)380 b Fn(Ov)m(al)15
b(inscrib)q(ed)h(in)f Fh(dbox)110 1638 y(dsin)g Fk(r)370
b Fn(Sine)15 b(of)g Fk(r)h Fn(\(in)e(degrees\))110 1694
y Fh(dtriangle)g Fk(pt1)i(pt2)f(pt3)110 1751 y Fh(group)g
Fk(pic)307 b Fn(Same)14 b(as)g Fk(pic)h Fn(with)f(considered)i(as)e(a)h
(single)f(picture)h(without)e(sub-)610 1807 y(pictures,)g(for)g(purp)q
(oses)h(of)f(calculating)f(the)h(subpictures)h(of)f(a)g(con-)610
1864 y(taining)h(picture)110 1920 y Fh(height)g Fk(pic)284
b Fn(The)15 b(heigh)o(t)g(of)g Fk(pic)110 1977 y(pic1)h
Fh(hseq)e Fk(pic2)212 b(pic1)15 b Fn(next)h(to)e Fk(pic2)110
2033 y Fh(hseqsplist)g Fn([)p Fk(pic)p Fn(,)g Fe(:)8
b(:)g(:)n Fn(])82 b(A)26 b(list)e(of)h(pictures)h(sequenced)h(horizon)o
(tally)l(,)f(with)e(additional)610 2090 y(space)15 b(added)110
2146 y Fh(hspace)f Fk(r)323 b Fn(Empt)o(y)14 b(space)h(of)g(lengh)o(t)f
Fk(r)110 2203 y Fh(label)h Fk(str)g(pic)239 b Fn(Place)15
b Fk(str)g Fn(in)g(the)g(middle)f(of)h Fk(pic)110 2259
y Fh(line)g Fk(pt1)g(pt2)252 b Fn(Line)16 b(from)d Fk(pt1)j
Fn(to)e Fk(pt2)110 2315 y Fh(midpoint)g Fk(pt1)i(pt2)156
b Fn(The)15 b(mid-p)q(oin)o(t)f(of)h Fk(pt1)g Fn(and)h
Fk(pt2)937 2708 y Fn(17)p eop
%%Page: 18 18
18 17 bop 97 73 a Fh(mkseqlist)14 b Fe(f)274 b Fn(Giv)o(en)11
b(sequencing)i(function)f Fe(f)5 b Fn(,)12 b(return)g(the)h(function)f
(that)f(applies)623 130 y Fe(f)20 b Fn(to)14 b(a)h(list)f(of)h
(pictures)97 186 y Fh(namePic)g Fk(pic)g(str)217 b Fn(Giv)o(e)14
b Fk(pic)h Fn(the)g(name)g Fk(str)97 242 y Fh(namePts)g
Fk(pic)g Fn([\()p Fk(str1)p Fn(,)f Fk(pt1)p Fn(\),)h
Fe(:)8 b(:)g(:)n Fn(])623 299 y(Add)15 b(the)h(named)e(p)q(oin)o(ts)h
(to)f Fk(pic)p Fn('s)h(en)o(vironmen)o(t)97 355 y Fh(north)g
Fk(pic)333 b Fn(North)14 b(p)q(oin)o(t)h(of)g Fk(pic)p
Fn(,)g(calculated)f(from)g(its)g(b)q(ounding)i(b)q(o)o(x)97
412 y Fk(pic)g Fh(nthpic)e Fk(i)280 b Fn(The)15 b Fk(i)p
Fn(th)g(subpicture)h(of)e Fk(pic)97 468 y(pic)i Fh(offsetBy)e
Fk(pt)208 b(pic)15 b Fn(translated)f(b)o(y)h Fk(pt)97
525 y Fh(openCurve)f Fn([)p Fk(pt)p Fn(,)h Fe(:)8 b(:)g(:)n
Fn(])97 581 y Fh(oval)15 b Fk(r1)h(r2)315 b Fn(Ov)m(al)15
b(inscrib)q(ed)g(in)g Fh(box)g Fk(r1)h(r2)97 638 y(pic)g
Fh(pic)e Fk(str)313 b Fn(The)15 b(subpicture)h(named)e
Fk(str)h Fn(con)o(tained)g(in)g Fk(pic)97 694 y Fh(pics)g
Fk(pic)357 b Fn(All)14 b(the)h(\(top-lev)o(el\))f(subpictures)i(of)e
Fk(pic)97 751 y Fh(place)h Fk(pic)g(f)g(pt)251 b Fn(Mo)o(v)o(e)14
b Fk(pic)h Fn(so)g(that)f(the)i(p)q(oin)o(t)e Fk(f)i(pic)g
Fn(is)e(at)h Fk(pt)97 807 y Fh(placePt)g Fk(pic)g(str)g(pt)164
b Fn(Mo)o(v)o(e)14 b Fk(pic)h Fn(so)g(that)f(the)i(p)q(oin)o(t)e(named)
h Fk(str)g Fn(is)f(at)h Fk(pt)97 863 y(pic)h Fh(pt)f
Fk(str)336 b Fn(The)15 b(p)q(oin)o(t)g(named)f Fk(pt)i
Fn(in)f Fk(pic)97 920 y(pic)h Fh(rotate)e Fk(r)275 b(pic)15
b Fn(rotated)f(coun)o(ter-clo)q(c)o(kwise)h(b)o(y)g Fk(r)g
Fn(\(in)g(degrees\))97 976 y Fk(pic)h Fh(scale)e Fk(r)299
b(pic)15 b Fn(scaled)g(b)o(y)g Fk(r)g Fn(in)g(b)q(oth)h(dimensions)97
1033 y Fk(pic)g Fh(scaleTo)e Fk(pt)232 b(pic)15 b Fn(scaled)g(to)f
(\014t)i(within)e Fk(pt)97 1089 y Fh(scaleVec)g Fk(s)h(pt)248
b(pt)15 b Fn(m)o(ultiplied)e(comp)q(onen)o(t-wise)h(b)o(y)h
Fk(s)97 1146 y(pic)h Fh(scaleWithPoint)d Fn(\()p Fk(pt1)p
Fn(,)i Fk(pt2)p Fn(\))623 1202 y Fk(pic)d Fn(scaled)g(b)o(y)g
Fk(pt1)h Fn(\(see)f Fh(scaleXY)p Fn(\),)f(but)h(without)f(mo)o(ving)g
(its)g(p)q(oin)o(t)623 1259 y Fk(pt2)97 1315 y(pic)16
b Fh(scaleXY)e Fk(pt)232 b(pic)18 b Fn(scaled)h(b)o(y)f
Fe(x)h Fn(in)f(the)h(x)f(direction)g(and)h Fe(y)h Fn(in)e(the)h(y)g
(direction,)623 1372 y(where)c Fk(pt)g Fn(=)h(\()p Fe(x;)8
b(y)r Fn(\))97 1428 y Fk(pic1)16 b Fh(seq)f Fk(pic2)261
b(pic1)15 b Fn(sup)q(erimp)q(osed)g(on)g Fk(pic2)97 1484
y Fh(seqlist)g Fn([)p Fk(pic)p Fn(,)f Fe(:)8 b(:)g(:)n
Fn(])179 b(The)15 b(pictures)g Fk(pic)p Fn(,)g Fe(:)8
b(:)g(:)n Fn(,)15 b(sup)q(erimp)q(osed)g(on)g(one)g(another)97
1541 y Fh(stack)g Fk(i)g(pic)304 b(i)15 b Fn(copies)g(of)g
Fk(pic)g Fn(stac)o(k)o(ed)f(using)h Fh(vseq)97 1597 y(text)g
Fk(str)362 b Fn(A)15 b(picture)g(consisting)f(of)h(the)g(text)g
Fk(str)97 1654 y Fh(triangle)f Fk(pt1)i(pt2)g(pt3)105
b Fn(T)l(riangle)14 b(connecting)h Fk(pt1)p Fn(,)g Fk(pt2)p
Fn(,)h(and)f Fk(pt3)p Fn(,)97 1710 y Fk(pic1)h Fh(vseq)e
Fk(pic2)238 b(pic1)15 b Fn(on)g(top)g(of)g Fk(pic2)97
1767 y Fh(wedge)g Fk(r1)g(r2)h(r3)234 b Fn(Create)14
b(a)i(w)o(edge)f(of)g(a)g(circle)g(with)g(radius)g Fk(r1)h
Fn(extending)g(coun)o(ter-)623 1823 y(clo)q(c)o(kwise)e(from)g(angle)g
Fk(r2)i Fn(to)e(angle)h Fk(r3)97 1880 y Fh(width)g Fk(pic)333
b Fn(The)15 b(width)g(of)g Fk(pic)97 1936 y(pic)h Fh(withArrowStyle)d
Fk(str)623 1993 y(pic)j Fn(dra)o(wn)h(with)f(a)g(giv)o(en)h(arro)o(w)e
(st)o(yle,)h(if)g(it)g(is)h(a)f(line;)h(the)g(arro)o(w)623
2049 y(st)o(yles)d(are)h(as)g(in)g(PST)l(ric)o(ks)f([9])97
2105 y Fk(pic)i Fh(withFillColor)d Fn(\()p Fk(r1)p Fn(,)i
Fk(r2)p Fn(,)g Fk(r3)p Fn(\))623 2162 y Fk(pic)h Fn(dra)o(wn)g(in)g
(the)h(color)e(giv)o(en)h(b)o(y)g(R)o(GB)h(v)m(alues)f(\()p
Fk(r1)p Fn(,)h Fk(r2)p Fn(,)f Fk(r3)p Fn(\))h(\(all)623
2218 y(in)e(the)g(range)g(0-1\))937 2708 y(18)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
